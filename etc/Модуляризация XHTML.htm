<!--?xml version="1.0" encoding="UTF-8"?-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" DIR=LTR>
<head>
<meta name="generator" content="HTML Tidy, см. www.w3.org" />
<title>Модуляризация XHTML</title>
<link rel="stylesheet" type="text/css" media="screen" href="xhtml.css" />
<link rel="stylesheet" type="text/css" media="screen" href="http://www.w3.org/StyleSheets/TR/W3C-PR.css" />
<!--?xml-stylesheet href="xhtml.css" type="text/css" media="screen" ?-->
<!--?xml-stylesheet href="http://www.w3.org/StyleSheets/TR/W3C-PR.css" type="text/css" media="screen" ?-->
</head>
<body>
<div class="head"><a href="http://www.w3.org/"><img height="48" width="72" src="http://www.w3.org/Icons/WWW/w3c_home" alt="W3C" /></a> 

<h1><a name="title" id="title"></a> Модуляризация XHTML<sup>T</sup></h1>

<h2>Предлагаемая рекомендация W3C 22 февраля 2001 г.</h2>

<dl>
<dt>Настоящая версия:</dt>

<dd><a href="http://www.w3.org/TR/2001/PR-xhtml-modularization-20010222">http://www.w3.org/TR/2001/PR-xhtml-modularization-20010222</a><br /> (<a href="xhtml-modularization.html">в одном файле HTML </a>, <a href="xhtml-modularization.ps">версия PostScript</a>, <a href="xhtml-modularization.pdf">версия PDF</a>, <a href= 
"xhtml-modularization.zip">архив ZIP</a> или <a href="xhtml-modularization.tgz">архив Gzip'd TAR</a>)</dd>

<dt>Последняя версия:</dt>

<dd><a href="http://www.w3.org/TR/xhtml-modularization">http://www.w3.org/TR/xhtml-modularization</a></dd>

<dt>Предыдущая версия:</dt>

<dd><a href="http://www.w3.org/TR/2000/CR-xhtml-modularization-20001020/">http://www.w3.org/TR/2000/CR-xhtml-modularization-20001020/</a></dd>

<dt>Версия с указанием различий:</dt>

<dd><a href="xhtml-modularization-diff.html">xhtml-modularization-diff.html</a></dd>

<dt>Редакторы:</dt>

<dd><a href="mailto:altheim@eng.sun.com">Мюррей Альтхайм</a>, Sun Microsystems<br /> <a href="mailto:bckman@ix.netcom.com">Фрэнк Бамфри</a>, HTML Writers Guild<br /> <a href="mailto:dooley@watson.ibm.com">Сэм Дули</a>, IBM<br /> <a href="mailto:shane@aptest.com">Шэйн МакКаррон</a>, Applied Testing and Technology<br /> <a href="mailto:schnitz@mozquito.com">Себастиян Шнитценбаумер</a>, Mozquito Technologies<br /> <a href="mailto:ted.wugofski@openwave.com">Тед Вугофски</a>, Openwave (ранее Gateway)</dd>
</dl>

<p class="copyright"><a href="http://www.w3.org/Consortium/Legal/ipr-notice-20000612#Copyright">Copyright</a> &copy;2001 <a href="http://www.w3.org/"><abbr title="Консорциум World Wide Web">
W3C</abbr></a><sup>&reg;</sup> (<a href="http://www.lcs.mit.edu/"><abbr title="Массачусеттский технологический институт">MIT</abbr></a>, <a href="http://www.inria.fr/"><abbr lang="fr" title="Institut 
National de Recherche en Informatique et Automatique">INRIA</abbr></a>, <a href="http://www.keio.ac.jp/">Keio</a>), С сохранением всех прав. Применяются все нормативы W3C, связанные с <a href="http://www.w3.org/Consortium/Legal/ipr-notice-20000612#Legal_Disclaimer">ответственностью</a>, <a href="http://www.w3.org/Consortium/Legal/ipr-notice-20000612#W3C_Trademarks">торговыми марками</a>, <a href="http://www.w3.org/Consortium/Legal/copyright-documents-19990405">использованием документов</a> и <a href="http://www.w3.org/Consortium/Legal/copyright-software-19980720">лицензированием программного обеспечения</a>.</p>

<hr />
</div>

<h2><a name="abstract" id="abstract"></a>Введение</h2>

<p>В настоящей предлагаемой рекомендации определяется абстрактная модуляризация XHTML и реализация ее через определения типов документов XML (DTD). Модуляризация обеспечивает средства выделения подмножеств из языка XHTML и его расширения - возможность, необходимую для распространения XHTML на другие платформы.</p>

<h2><a name="status" id="status"></a> Статус настоящего документа</h2>

<p><em>В данном разделе описан статус настоящего документа на момент его публикации. Над этим документом могут превалировать другие. Статус серии этих документов поддерживается W3C.</em></p>

<p>Эта рекомендация &quot;Модуляризации XHTML&quot; является &quot;<a href="http://www.w3.org/Consortium/Process-20010208/tr.html#RecsPR">предлагаемой</a>&quot;. В этой версии реализованы комментарии, сделанные в процессе рассмотрения <a href="http://www.w3.org/TR/2000/CR-xhtml-modularization-20001020">конкурсной рекомендации (candidate recommendation)</a>. Для сравнения имеется версия <a href="xhtml-modularization-diff.html">с разметкой отличий</a> от конкурсной рекомендации.</p>

<p>23 февраля 2001 г. настоящий документ вступил в период рассмотрения в статусе <a href="http://www.w3.org/Consortium/Process-20010208/tr.html#RecsPR">предлагаемой рекомендации</a>. С этого дня до 22 марта 2001 г. представители Совещательного Комитета W3C должны рассмотреть спецификацию и представить свои комментарии по адресу <a href="mailto:w3c-xhtml-m12n-review@w3.org">w3c-xhtml-m12n-review@w3.org</a>. После рассмотрения отправленные в этот список комментарии станут доступны членам консорциума. Все конфиденциальные комментарии. пожалуйста, отправляйте по адресу <a href="mailto:w3t-html@w3.org">w3t-html@w3.org</a>, их получит только команда разработчиков.</p>

<p>После просмотра Директором будет объявлен статус документа: он может стать Рекомендацией W3C (возможно, с небольшими изменениями), может вернуться в статус Рабочего проекта или работа над ним вообще может быть прекращена. Ожидается, что объявление статуса произойдет не ранее, чем через 14 дней после окончания рассмотрения.</p>

<p>Публикация Предлагаемой рекомендации не предполагает одобения членами W3C. Документ по-прежнему останется рабочим; он может обновляться, заменяться другими документами или устареть в любое время. Предлагаемые рекомендации W3C следует цитировать только с указанием &quot;работа не окончена&quot;. Список текущих Рекомендаций W3C и других технических документов расположен по адресу <a href=  "http://www.w3.org/TR">http://www.w3.org/TR</a>.</p>

<p> Настоящий документ является результатом <a href="http://www.w3.org/MarkUp/">деятельносит W3C в области HTML</a>. Цели <a href="http://www.w3.org/MarkUp/Group/">рабочей группы по HTML</a> (<em><a
href="http://cgi.w3.org/MemberAccess/AccessRequest">доступ только для членов консорциума</a></em>) обсуждаются в <a href="http://www.w3.org/MarkUp/2000/Charter">хартии рабочей группы по HTML</a>.</p>

<p>Об ошибках, найденных в этом документе, сообщайте по адресу: <a href="mailto:www-html-editor@w3.org">www-html-editor@w3.org</a> (<a href="http://lists.w3.org/Archives/Public/www-html-editor/">архив</a>).</p>

<p>Открытое обсуждение функций HTML ведется в списке рассылки по адресу <a href="mailto:www-html@w3.org">www-html@w3.org</a> (<a href="http://lists.w3.org/Archives/Public/www-html/">архив</a>). Контактное лицо по работе над HTML в W3C - <a href="mailto:mimasa@w3.org">Масаясу Ишикава (Masayasu Ishikawa)</a>.</p>

<!--
<p>
The list of known errors in this specification is available at <a
href="http://www.w3.org/2000/PR-xhtml-modularization-20010222-errata">http://www.w3.org/2000/PR-xhtml-modularization-20010222-errata</a>.
</p>
-->
<h1><a name="toc" id="toc"></a> Краткое содержание</h1>

<div class="toc">
<ul class='toc'>
<li class='tocline'>1. <a href="#s_intro" class="tocxref">Введение</a></li>

<li class='tocline'>2. <a href="#a_terms" class="tocxref">Термины и определения</a></li>

<li class='tocline'>3. <a href="#s_conform" class="tocxref">Определение конформности</a></li>

<li class='tocline'>4. <a href="#s_abstraction" class="tocxref">Определение абстрактных модулей</a></li>

<li class='tocline'>5. <a href="#s_xhtmlmodules" class="tocxref">Определение абстрактных модулей</a></li>

<li class='tocline'>А. <a href="#a_schema_module_rules" class="tocxref">Построение модулей схемы</a></li>

<li class='tocline'>Б. <a href="#a_schema_developing" class="tocxref">Разработка схемы с определенными и дополнительными модулями</a></li>

<li class='tocline'>В. <a href="#a_schema_module_defs" class="tocxref">Реализации модулей схемы XHTML</a></li>

<li class='tocline'>Г. <a href="#s_dtd_module_rules" class="tocxref">Построение модулей DTD</a></li>

<li class='tocline'>Д. <a href="#s_developingdtds" class="tocxref">Разработка DTD с определенными и дополнительными модулями</a></li>

<li class='tocline'>Е. <a href="#a_dtd_module_defs" class="tocxref">Реализации модулей XHTML DTD</a></li>

<li class='tocline'>Ж. <a href="#a_refs" class="tocxref">Ссылки</a></li>

<li class='tocline'>З. <a href="#s_intro_design" class="tocxref">Design Goals</a></li>
</ul>
</div>

<h1><a name="contents" id="contents"></a> Подробное содержание</h1>

<div class="toc">
<ul class='toc'>
<li class='tocline'>1. <a href="#s_intro" class="tocxref">Введение</a> 

<ul class="toc">
<li class='tocline'>1.1. <a href="#s_intro_whatisxhtml" class="tocxref">Что такое XHTML?</a></li>

<li class='tocline'>1.2. <a href="#s_intro_whatismod" class="tocxref">Что такое Модуляризация XHTML?</a></li>

<li class='tocline'>1.3. <a href="#s_intro_xhtml_mods" class="tocxref">Зачем нужна Модуляризация XHTML?</a> 

<ul class="toc">
<li class='tocline'>1.3.1. <a href="#s_intro_abstract" class="tocxref">Абстрактные модули</a></li>

<li class='tocline'>1.3.2. <a href="#s_intro_module_implementation" class="tocxref">Реализации модулей</a></li>

<li class='tocline'>1.3.3. <a href="#s_intro_hybrid" class="tocxref">Гибридные типы документов</a></li>

<li class='tocline'>1.3.4. <a href="#s_intro_validation" class="tocxref">Проверка корректности</a></li>

<li class='tocline'>1.3.5. <a href="#s_intro_formatting" class="tocxref">Модель форматирования</a></li>
</ul>
</li>
</ul>
</li>

<li class='tocline'>2. <a href="#a_terms" class="tocxref">Термины и определения</a></li>

<li class='tocline'>3. <a href="#s_conform" class="tocxref">Определение конформности</a> 

<ul class="toc">
<li class='tocline'>3.1. <a href="#s_conform_document_type" class="tocxref">XHTML Host Language Document Type Conformance</a></li>

<li class='tocline'>3.2. <a href="#s_integration_document_type" class="tocxref">XHTML Integration Set Document Type Conformance</a></li>

<li class='tocline'>3.3. <a href="#s_conform_module" class="tocxref">XHTML Family Module Conformance</a></li>

<li class='tocline'>3.4. <a href="#s_conform_document" class="tocxref">XHTML Family Document Conformance</a></li>

<li class='tocline'>3.5. <a href="#s_conform_user_agent" class="tocxref">XHTML Family User Agent Conformance</a></li>

<li class='tocline'>3.6. <a href="#s_conform_naming_rules" class="tocxref">Naming Rules</a></li>

<li class='tocline'>3.7. <a href="#s_conform_commitment" class="tocxref">XHTML Module Evolution</a></li>
</ul>
</li>

<li class='tocline'>4. <a href="#s_abstraction" class="tocxref">Defining Abstract Modules</a> 

<ul class="toc">
<li class='tocline'>4.1. <a href="#sec_4.1." class="tocxref">Syntactic Conventions</a></li>

<li class='tocline'>4.2. <a href="#s_common_types" class="tocxref">Content Types</a></li>

<li class='tocline'>4.3. <a href="#s_common_attrtypes" class="tocxref">Attribute Types</a></li>

<li class='tocline'>4.4. <a href="#sec_4.4." class="tocxref">An Example Abstract Module Definition</a> 

<ul class="toc">
<li class='tocline'>4.4.1. <a href="#sec_4.4.1." class="tocxref">XHTML Skiing Module</a></li>
</ul>
</li>
</ul>
</li>

<li class='tocline'>5. <a href="#s_xhtmlmodules" class="tocxref">XHTML Abstract Modules</a> 

<ul class="toc">
<li class='tocline'>5.1. <a href="#s_commonatts" class="tocxref">Attribute Collections</a></li>

<li class='tocline'>5.2. <a href="#sec_5.2." class="tocxref">Core Modules</a> 

<ul class="toc">
<li class='tocline'>5.2.1. <a href="#s_structuremodule" class="tocxref">Structure Module</a></li>

<li class='tocline'>5.2.2. <a href="#s_textmodule" class="tocxref">Text Module</a></li>

<li class='tocline'>5.2.3. <a href="#s_hypertextmodule" class="tocxref">Hypertext Module</a></li>

<li class='tocline'>5.2.4. <a href="#s_listmodule" class="tocxref">List Module</a></li>
</ul>
</li>

<li class='tocline'>5.3. <a href="#s_appletmodule" class="tocxref">Applet Module</a></li>

<li class='tocline'>5.4. <a href="#s_text" class="tocxref">Text Extension Modules</a> 

<ul class="toc">
<li class='tocline'>5.4.1. <a href="#s_presentationmodule" class="tocxref">Presentation Module</a></li>

<li class='tocline'>5.4.2. <a href="#s_editmodule" class="tocxref">Edit Module</a></li>

<li class='tocline'>5.4.3. <a href="#s_bdomodule" class="tocxref">Bi-directional Text Module</a></li>
</ul>
</li>

<li class='tocline'>5.5. <a href="#s_forms" class="tocxref">Forms Modules</a> 

<ul class="toc">
<li class='tocline'>5.5.1. <a href="#s_sformsmodule" class="tocxref">Basic Forms Module</a></li>

<li class='tocline'>5.5.2. <a href="#s_extformsmodule" class="tocxref">Forms Module</a></li>
</ul>
</li>

<li class='tocline'>5.6. <a href="#sec_5.6." class="tocxref">Table Modules</a> 

<ul class="toc">
<li class='tocline'>5.6.1. <a href="#s_simpletablemodule" class="tocxref">Basic Tables Module</a></li>

<li class='tocline'>5.6.2. <a href="#s_tablemodule" class="tocxref">Tables Module</a></li>
</ul>
</li>

<li class='tocline'>5.7. <a href="#s_imagemodule" class="tocxref">Image Module</a></li>

<li class='tocline'>5.8. <a href="#s_imapmodule" class="tocxref">Client-side Image Map Module</a></li>

<li class='tocline'>5.9. <a href="#s_servermapmodule" class="tocxref">Server-side Image Map Module</a></li>

<li class='tocline'>5.10. <a href="#s_objectmodule" class="tocxref">Object Module</a></li>

<li class='tocline'>5.11. <a href="#s_framesmodule" class="tocxref">Frames Module</a></li>

<li class='tocline'>5.12. <a href="#s_targetmodule" class="tocxref">Target Module</a></li>

<li class='tocline'>5.13. <a href="#s_iframemodule" class="tocxref">Iframe Module</a></li>

<li class='tocline'>5.14. <a href="#s_intrinsiceventsmodule" class="tocxref">Intrinsic Events Module</a></li>

<li class='tocline'>5.15. <a href="#s_metamodule" class="tocxref">Metainformation Module</a></li>

<li class='tocline'>5.16. <a href="#s_scriptmodule" class="tocxref">Scripting Module</a></li>

<li class='tocline'>5.17. <a href="#s_stylemodule" class="tocxref">Style Sheet Module</a></li>

<li class='tocline'>5.18. <a href="#s_styleattributemodule" class="tocxref">Style Attribute Module</a></li>

<li class='tocline'>5.19. <a href="#s_linkmodule" class="tocxref">Link Module</a></li>

<li class='tocline'>5.20. <a href="#s_basemodule" class="tocxref">Base Module</a></li>

<li class='tocline'>5.21. <a href="#s_nameidentmodule" class="tocxref">Name Identification Module</a></li>

<li class='tocline'>5.22. <a href="#s_legacymodule" class="tocxref">Legacy Module</a></li>
</ul>
</li>

<li class='tocline'>A. <a href="#a_schema_module_rules" class="tocxref">Building Schema Modules</a></li>

<li class='tocline'>B. <a href="#a_schema_developing" class="tocxref">Developing Schema with defined and extended modules</a></li>

<li class='tocline'>C. <a href="#a_schema_module_defs" class="tocxref">XHTML Schema Module Implementations</a></li>

<li class='tocline'>D. <a href="#s_dtd_module_rules" class="tocxref">Building DTD Modules</a> 

<ul class="toc">
<li class='tocline'>D.1. <a href="#s_dtdrules_PEs" class="tocxref">Parameter Entity Naming</a></li>

<li class='tocline'>D.2. <a href="#s_module_namespace" class="tocxref">Defining the Namespace of a Module</a> 

<ul class="toc">
<li class='tocline'>D.2.1. <a href="#qnames" class="tocxref">Qualified Names sub-module</a></li>

<li class='tocline'>D.2.2. <a href="#declaration" class="tocxref">Declaration sub-module(s)</a></li>

<li class='tocline'>D.2.3. <a href="#stand_alone" class="tocxref">Using the module as a stand-alone DTD</a></li>

<li class='tocline'>D.2.4. <a href="#sec_D.2.4." class="tocxref">Namespace Idiosyncrasies</a></li>
</ul>
</li>
</ul>
</li>

<li class='tocline'>E. <a href="#s_developingdtds" class="tocxref">Developing DTDs with defined and extended modules</a> 

<ul class="toc">
<li class='tocline'>E.1. <a href="#s_dev_attrs" class="tocxref">Defining additional attributes</a></li>

<li class='tocline'>E.2. <a href="#s_dev_elems" class="tocxref">Defining additional elements</a></li>

<li class='tocline'>E.3. <a href="#s_dev_contentmodel" class="tocxref">Defining the content model for a collection of modules</a> 

<ul class="toc">
<li class='tocline'>E.3.1. <a href="#sec_E.3.1." class="tocxref">Integrating a stand-alone module into XHTML</a></li>

<li class='tocline'>E.3.2. <a href="#sec_E.3.2." class="tocxref">Mixing a new module throughout the modules in XHTML</a></li>
</ul>
</li>

<li class='tocline'>E.4. <a href="#sec_E.4." class="tocxref">Creating a new DTD</a> 

<ul class="toc">
<li class='tocline'>E.4.1. <a href="#sec_E.4.1." class="tocxref">Creating a simple DTD</a></li>

<li class='tocline'>E.4.2. <a href="#sec_E.4.2." class="tocxref">Creating a DTD by extending XHTML</a></li>

<li class='tocline'>E.4.3. <a href="#sec_E.4.3." class="tocxref">Creating a DTD by removing and replacing XHTML modules</a></li>

<li class='tocline'>E.4.4. <a href="#sec_E.4.4." class="tocxref">Creating a new DTD</a></li>
</ul>
</li>

<li class='tocline'>E.5. <a href="#sec_E.5." class="tocxref">Using the new DTD</a></li>
</ul>
</li>

<li class='tocline'>F. <a href="#a_dtd_module_defs" class="tocxref">XHTML DTD Module Implementations</a> 

<ul class="toc">
<li class='tocline'>F.1. <a href="#a_xhtml_character_entities" class="tocxref">XHTML Character Entities</a> 

<ul class="toc">
<li class='tocline'>F.1.1. <a href="#a_module_XHTML_Latin_1_Character_Entities" class="tocxref">XHTML Latin 1 Character Entities</a></li>

<li class='tocline'>F.1.2. <a href="#a_module_XHTML_Special_Characters" class="tocxref">XHTML Special Characters</a></li>

<li class='tocline'>F.1.3. <a href="#a_module_XHTML_Mathematical__Greek__and_Symbolic_Characters" class="tocxref">XHTML Mathematical, Greek, and Symbolic Characters</a></li>
</ul>
</li>

<li class='tocline'>F.2. <a href="#a_xhtml_framework" class="tocxref">XHTML Modular Framework</a> 

<ul class="toc">
<li class='tocline'>F.2.1. <a href="#a_module_XHTML_Base_Architecture" class="tocxref">XHTML Base Architecture</a></li>

<li class='tocline'>F.2.2. <a href="#a_module_XHTML_Notations" class="tocxref">XHTML Notations</a></li>

<li class='tocline'>F.2.3. <a href="#a_module_XHTML_Datatypes" class="tocxref">XHTML Datatypes</a></li>

<li class='tocline'>F.2.4. <a href="#a_module_XHTML_Common_Attribute_Definitions" class="tocxref">XHTML Common Attribute Definitions</a></li>

<li class='tocline'>F.2.5. <a href="#a_module_XHTML_Qualified_Names" class="tocxref">XHTML Qualified Names</a></li>

<li class='tocline'>F.2.6. <a href="#a_module_Qualified_Names" class="tocxref">Qualified Names</a></li>

<li class='tocline'>F.2.7. <a href="#a_module_XHTML_Character_Entities" class="tocxref">XHTML Character Entities</a></li>
</ul>
</li>

<li class='tocline'>F.3. <a href="#a_dtdspecial" class="tocxref">XHTML Module Implementations</a> 

<ul class="toc">
<li class='tocline'>F.3.1. <a href="#a_modules_basicmods" class="tocxref">XHTML Core Modules</a></li>

<li class='tocline'>F.3.2. <a href="#a_module_Applet" class="tocxref">Applet</a></li>

<li class='tocline'>F.3.3. <a href="#a_textmodule" class="tocxref">Text Modules</a></li>

<li class='tocline'>F.3.4. <a href="#sec_F.3.4." class="tocxref">Forms</a></li>

<li class='tocline'>F.3.5. <a href="#sec_F.3.5." class="tocxref">Tables</a></li>

<li class='tocline'>F.3.6. <a href="#a_module_Image" class="tocxref">Image</a></li>

<li class='tocline'>F.3.7. <a href="#a_module_Client-side_Image_Map" class="tocxref">Client-side Image Map</a></li>

<li class='tocline'>F.3.8. <a href="#a_module_Server-side_Image_Map" class="tocxref">Server-side Image Map</a></li>

<li class='tocline'>F.3.9. <a href="#a_module_Object" class="tocxref">Object</a></li>

<li class='tocline'>F.3.10. <a href="#a_module_Frames" class="tocxref">Frames</a></li>

<li class='tocline'>F.3.11. <a href="#a_module_Target" class="tocxref">Target</a></li>

<li class='tocline'>F.3.12. <a href="#a_module_Iframe" class="tocxref">Iframe</a></li>

<li class='tocline'>F.3.13. <a href="#a_module_Intrinsic_Events" class="tocxref">Intrinsic Events</a></li>

<li class='tocline'>F.3.14. <a href="#a_module_Metainformation" class="tocxref">Metainformation</a></li>

<li class='tocline'>F.3.15. <a href="#a_module_Scripting" class="tocxref">Scripting</a></li>

<li class='tocline'>F.3.16. <a href="#a_module_Stylesheet" class="tocxref">Stylesheet</a></li>

<li class='tocline'>F.3.17. <a href="#a_module_Style_Attribute" class="tocxref">Style Attribute</a></li>

<li class='tocline'>F.3.18. <a href="#a_module_Link" class="tocxref">Link</a></li>

<li class='tocline'>F.3.19. <a href="#a_module_Base" class="tocxref">Base</a></li>

<li class='tocline'>F.3.20. <a href="#a_module_Name_Identification" class="tocxref">Name Identification</a></li>

<li class='tocline'>F.3.21. <a href="#a_module_Legacy" class="tocxref">Legacy</a></li>
</ul>
</li>

<li class='tocline'>F.4. <a href="#a_dtdsupport" class="tocxref">XHTML DTD Support Modules</a> 

<ul class="toc">
<li class='tocline'>F.4.1. <a href="#a_module_Block_Phrasal" class="tocxref">Block Phrasal</a></li>

<li class='tocline'>F.4.2. <a href="#a_module_Block_Presentational" class="tocxref">Block Presentational</a></li>

<li class='tocline'>F.4.3. <a href="#a_module_Block_Structural" class="tocxref">Block Structural</a></li>

<li class='tocline'>F.4.4. <a href="#a_module_Inline_Phrasal" class="tocxref">Inline Phrasal</a></li>

<li class='tocline'>F.4.5. <a href="#a_module_Inline_Presentational" class="tocxref">Inline Presentational</a></li>

<li class='tocline'>F.4.6. <a href="#a_module_Inline_Structural" class="tocxref">Inline Structural</a></li>

<li class='tocline'>F.4.7. <a href="#a_module_Param" class="tocxref">Param</a></li>
</ul>
</li>
</ul>
</li>

<li class='tocline'>G. <a href="#a_refs" class="tocxref">References</a> 

<ul class="toc">
<li class='tocline'>G.1. <a href="#a_normrefs" class="tocxref">Normative References</a></li>
</ul>
</li>

<li class='tocline'>H. <a href="#s_intro_design" class="tocxref">Design Goals</a> 

<ul class="toc">
<li class='tocline'>H.1. <a href="#s_intro_requirements" class="tocxref">Requirements</a> 

<ul class="toc">
<li class='tocline'>H.1.1. <a href="#s_req_granularity" class="tocxref">Granularity</a></li>

<li class='tocline'>H.1.2. <a href="#s_req_composibility" class="tocxref">Composibility</a></li>

<li class='tocline'>H.1.3. <a href="#s_req_easeofuse" class="tocxref">Ease of Use</a></li>

<li class='tocline'>H.1.4. <a href="#s_req_compatibility" class="tocxref">Compatibility</a></li>

<li class='tocline'>H.1.5. <a href="#s_req_conformance" class="tocxref">Conformance</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

<!--OddPage-->
<h1><a name="s_intro" id="s_intro"></a>1.Введение</h1>

<p>Данный раздел является <em>информативным</em>.</p>

<h2>1.1. Что такое XHTML?</h2>

<p>XHTML представляет собой переформулировку HTML 4 как приложения XML. В XHTML 1.0 <a href="#ref_xhtml1">[XHTML1]</a> определены три типа документов XML, соответствующих трем DTD HTML 4: Strict (строгое), Transitional (переходное) и Frameset (с фреймами). XHTML 1.0 является основой семейства типов документов, являющихся подмножествами и надмножествами HTML.</p>

<h2>1.2. Что такое модуляризация XHTML?</h2>

<p>Модуляризация XHTML представляет собой разложение XHTML 1.0 и HTML 4 на набор абстрактных модулей, обеспечивающих конкретную фунциональность. Такие абстрактные модули реализуются в настоящей спецификации с помощью языка определения типов документов XML, но ожидается их реализация с помощью Схем XML. В настоящем доументе также определяются правила определения абстрактных модулей и реализации их с помощью XML DTD.</p>

<p>Модули могут объединяться друг с другом и с другими модулями и для образования типов документов подмножества и расширения XHTML, являющихся членами семейства типов документов XHTML.</p>

<h2>1.3. Зачем нужна модуляризация XHTML?</h2>

<p>Модуляризация XHTML представляет собой задачу тщательного определения подмножеств элементов XHTML, которые могут объединяться и дополняться авторами документов, архитекторами тиов документов, другими спецификациями стандартов XML и разработчиками приложений и продуктов с целью сделать экономически осущствимой разработку контента на большем количестве разнообразных платформ.</p>

<p>За последние два года многие специализированные рынки обратились к HTML в качестве языка контента. Переход к использованию HTML осуществляется на все увеличивающемся количестве различных платформ. в настоящее время HTML начал распространение на мобильные (наладонники, мобильные телефоны и т.д.), телевизионные устройства (цифровые телевизоры, web-браузеры на базе телевизоров и т.д.) и на бытовые приборы (устройства с фиксированным набором функций). Все эти устройства имеют свои требования и ограничения.</p>

<p>Модуляризация XHTML обеспечивает способ определения разработчиками продукта элементов, поддерживаемых устройством, с использованием стандартных блоков и методов указания используемых блоков. модули служат как бы &quot;точками конформности&quot; для контента. При разработке контента тепеьр можно ориентироваться на установленную базу, которая поддерживает определенный набор модулей, и не беспокоиться о том, поддерживает ли эта база ту или иную композицию элементов XHTML. Соответствие стандартам крайне важно для успешной работы модуляризованного XHTML в большом масштабе. Разработчики не могут настравивать контент на каждый конкретный набор элементов XHTML. Если же указан стандарт, программные процессы могут автономно настроить контент для конкретного устройства или устройство может автоматически загрузить программное обеспечение, необходимое для обработки модуля.</p>

<p>Кроме того, модуляризация позволяет расширть возможности компоновки и представления XHTML с использованием расширяемости XML и без нарушения стандарта XHTML. Такой путь развития обеспечивает стабильную, полезную и реализуемую базу для разработчиков и издателей контекнта, позволяющую контролировать быстрые технологические изменения в Web.</p>

<h3><a name="s_intro_abstract" id="s_intro_abstract">1.3.1.</a> Абстрактные модули</h3>

<p>Тип документа XHTML определяется как набор абстрактных модулей. Абстрактный модуль определяет один тип данных, семантически отличный от всех остальных. Абстрактные модули можно объединять в типы документов, не имея глубокого представления о лежащей в основе определения модулей схеме.</p>

<h3><a name="s_intro_module_implementation" id="s_intro_module_implementation">1.3.2.</a> Реализации модулей</h3>

<p>Реализация модуля состоит из набора типов элементов, набора объявлений списков атрибутов и набора объявлений моделей содержимого; любой из этих наборов может быть пустым. Объявление списка атрибутов в модуле может изменять тип элемента, определенного вне этого модуля. Объявление модели содержимого также может изменять тип элемента, определенного вне этого модуля.</p>

<p>Один из механизмов реализации - XML DTD. XML DTD представляет собой средство описания структуры класса документов XML, всех вместе называемых типом документа XML. XML DTD описаны в рекомендации XML 1.0 <a href="#ref_xml">[XML]</a>. Другой механизм реализации - Схема XML <a href="#ref_xmlschema">[XMLSCHEMA]</a>.</p>

<h3><a name="s_intro_hybrid" id="s_intro_hybrid">1.3.3.</a> Гибридные типы документов</h3>

<p>Гибридный итп документа - это тип, составленный из набора XML DTD или модулей DTD. Главным предназначением описанной в настоящем документе модели модуляризации является предоставление авторам DTD возможности объединения элементов из нескольких абстрактных модулей в гибридный тип документа, разработки документов гибридного типа и проверки корреткности таких документов в соответствии со связанными с ними определениями типов документов.</p>

<p>Одним из самых главных преимуществ XML над SGML является то, что XML понижает барьер стандартизации наборов элементов, что позволяет пользовтелям обмениваться данными в общем формате. Однако относительно статичная природа HTML как языка содержимого для Web означает, что се пользователи ранее не очеьн надеялись на возможнотсь распространения их типов документов XML в качестве части стандартов Web. Модуляризация дает возможсноть динамического внедрения различных типов документов в семейство типов документов XHTML, еще более снижая барьер для внедрения специализированных словарей в документы XHTML.</p>

<h3><a name="s_intro_validation" id="s_intro_validation">1.3.4.</a> Проверка корректности</h3>

<p>Использование правильно построенных, но не допустимых документов является важным премуществом XML. В процессе разработки типа документа, однако, важна дополнительная проверка ошибок синтаксическим анализатором с проверкой корректности. То же утверждение применяется и к типам документов XHTML с элементами из нескольких абстрактных модулей.</p>

<p>Документ представляет собой экземпляр одного конкртеного типа документа, определяемого DTD, указанным в начальной части документа. Проверка корректности документа - это процесс проверки соответствия документа правилам определения типа.</p>

<p>Один документ может состоять из нескольких фрагментов. Проверка корректности фрагментов документа, где все фрагменты имеют разные типы, не обсуждатется в данной модели - необходимая для этого технология еще не определена.</p>

<p>Однако модуляризация позволяет объединять несколько определений типов доументов и образовывать новые типы (например, интегрированный в XHTML SVG). Новое определение типа документа может использоваться для обычной проверки корректности XML 1.0.</p>

<h3><a name="s_intro_formatting" id="s_intro_formatting">1.3.5.</a> Модель форматирования</h3>

<p>В ранних версиях языка HTML предпринимались попытки определения частей модели, которые пользовательские агенты обязательно должны использовать при форматировании документа. С приходом HTML 4 W3C начал процесс разделения представления и структуры. В XHTML 1.0 это разделение продолжается, а в данном документе развивается еще больше. поэтому в настоящем документе не формулируются требования к модели форматирования, связанной с представлением доументов, размеченных с использованием семества типов дкоументов XHTML.</p>

<p>Вместо этого настоящий документ рекомендует авторам контента для определения млжедей форматирвоания полагаться на механизмы с использованием стилей, такие как CSS. Если пользовательские агенты поддерживают механизмы работы со стилями, документы будут форматироваться должным образом. Если пользовательские агенты не поддерживают механизмы работы со стилями, документы будут форматироваться подходящим для пользовательского агента образом. Это обеспечивает пользовательским агентам семейства XHTML поддержку богатых моделей форматирования на тех устройствах, на которых они могут использоваться, и менее богатых моделей форматироания на устройствах, на которых <em>это</em> необходимо.</p>

<!--OddPage-->
<h1><a name="a_terms" id="a_terms">2.</a> Термины и определения</h1>

<p>Данный раздел является <em>информативным</em>.</p>

<p>Определения некоторым терминам даются в тексте документа, некоторые же используются по всему документу. Настоятельно рекомендуется ознакомиться с Рекомендацией W3C XML 1.0 <a href="#ref_xml">[XML]</a>.</p>

<dl class="termlist">
<dt>абстрактный модуль</dt>

<dd>единица спецификации типа доумента, соответствующая индивидуальному типу содержимого, соответствующего конструкции разметки, отражающей этот индивидуальный тип.</dd>

<dt>модель содержимого</dt>

<dd>объявленная структура разметки, допустимая в экземплярах элемента определенного типа. В XML 1.0 различаются два типа: элементы, имеющие только содержимое элемента (не содержащие символьных данных) и элементы со смешанным содержимым (элементы могут содержать символьные данные и дочерние элементы). Последние характеризуются спецификацией содержимого, начинающейся со строки &quot;#PCDATA&quot; (отмечающей символьные данные).</dd>

<dt>модель документа</dt>

<dd>эффективная структура и ограничения на данный тип документа. Модель документа образует абстрактное представление физической или семантической структуры класса документов.</dd>

<dt>типа документа</dt>

<dd>класс документов, использующих одинаковую абстрактную структуру. Определение ISO 8879 <a href="#ref_sgml">[SGML]</a>: &quot;класс доументов, имеющих сходные зарактеристики; например, журнал, статья, руководство или записка. (4.102)&quot;</dd>

<dt>определение типа документа (DTD)</dt>

<dd>формальное машинночитаемое выражение структуры и правил синтаксиса XML, которому должен соответствовать экземпляр документа конкретного типа; тип схемы, используемой в XML 1.0 для проверки конформности экзмепляра документа объявленному типу. Одна и та же модель разметки может быть представлена множеством различных DTD.</dd>

<dt>драйвер</dt>

<dd>обычно короткий файл. используемый для объявления и инициалзации модулей DTD. Эвристическое правило: драйвер DTD не содержит объявлений разметки, заключающих саму какую-либо часть модели документа.</dd>

<dt>элемент</dt>

<dd>экземпляр типа элемента.</dd>

<dt>тип элемента</dt>

<dd>определение элемента, т.е. контейнер индивидуального семантического класса содержмого документа.</dd>

<dt>сущность</dt>

<dd>сущность - это логическая или физическая единица хранения содержимого документа. Сущности могут составляться из поддающихся синтаксическому анализу симольных данных или разметки XML или из неанализируемого (т.е. не относящегося к XML, возможно, нетекстового) содержимого.. Содержимое сущности может либо полностью определяться внутри сущности документа (&quot;ввнутренние сущности&quot;) или быть внешним по отношению к сущности документа (&quot;внешние сущности&quot;). В анализируемых сущностях заменяющий текст может включать ссылки на другие сущности.</dd>

<dt>ссылка на сущность</dt>

<dd>мнемоническая строка, используемая в качестве ссылки на содержимое объявленной сущности (например, &quot;&amp;&quot; для &quot;&amp;&quot;, &quot;&lt;&quot; для &quot;&lt;&quot;, &quot;&copy;&quot; для &quot;&copy;&quot;.)</dd>

<dt>общий идентификатор</dt>

<dd>имя, идентифицирующее тип элемента. А также название типа элемента.</dd>

<dt>гибридный документ</dt>

<dd>Гибридный документ - это документ, в котором используется несколько пространств имен XML. Гибридные документы могут определяться как документы, содержащие элементы или атрибуты гибридных типов документов.</dd>

<dt>инициализировать</dt>

<dd>заменить ссылки на сущности экзаемплярами их объявленного содержимого.</dd>

<dt>объявление разметки</dt>

<dd>синтаксическая конструкция в DTD с объявлением сущности или опредлением структуры разметки. В XML DTD имеется четыре специальных типа: объявление сущности определяет связь между мнемоническим символом и его заменяющим содержимым; объявление элемента ограничивает типы элементов, могущих быть его потомками (см. также модель содержимого); объявление списка определений атрибутов определяет набор атрибутов для данного типа элемента, а также может устанавливать ограничения на тип и значения по умолчанию; объявление нотации определяет связь между именем нотации и внешним идентификатором, относящимся к формат неанализируемой сущности.</dd>

<dt>модель разметки</dt>

<dd>словарь разметки (т.е. диапазон имен атрибутов и элементов, нотаций и т.д.) и грамматики (т.е. описание использования данного словаря) в соответствии с определением типа документа (т.е. схемы). Модель разметки - это конкретное представление модели документа в синтаксисе разметки, оно может определяться с различными уровнями строгой конформности. Одна и та же модель разметки может быть представлена множеством различных моделей разметки.</dd>

<dt>модуль</dt>

<dd>абстрактная единица модели документа, выражаемая как фрагмент DTD и исопльзуемая для объединения объявлений разметки с целью повышения гибкости, изменяемости, возможности повторного использования и понимания конкретных логических или семантических структур.</dd>

<dt>модуляризация</dt>

<dd>реализация модели модуляризации; процесс композиции или декомпозиции DTD путем разделения его объявлений разметки на единицы или группы, соответствующие определенной цели. Модули могут, но н еобязательно должны существовать как отдельные файловые сущности (т.е. физическая и логическая структуры DTD могут быть отражением друг друга, но это не является обязательным требованием).</dd>

<dt>модель модуляризации</dt>

<dd>абстрактный дизайн определения типа документа (DTD) для достижения целей модуляризации, таких как возможность повторного использования, расширяемость, выразительность, простота документирования, объем кода, последовательность и интуитивность использования. Следует отметить, что модель модуляризации только ортогонально относится к описываемой ею модели документа, так что две совершенно разные модели модуляризации могут описывать один и тот же типа документа.</dd>

<dt>сущность параметра</dt>

<dd>сущность, область использования которой находится в прологе документа (т.е. внешнем подмножестве/DTD или внтуреннем подмножестве). Сущности параметров в экземпляре документа запрещены.</dd>

<dt>тип родительского документа</dt>

<dd>Тип родительского документа для гибридного документа - это тип документа корневого элемента.</dd>

<dt>тег</dt>

<dd>описательная разметка, обозначающая начало и конец (включая общий идентификатор и все атрибуты) элемента.</dd>
</dl>

<!--OddPage-->
<h1><a name="s_conform" id="s_conform">3.</a> Conformance Definition</h1>

<p>This section is <em>normative</em>.</p>

<p>In order to ensure that XHTML-family documents are maximally portable among XHTML-family user agents, this specification rigidly defines conformance requirements for both of these and for XHTML-family document types. While the conformance definitions can be found in this section, they necessarily reference normative text within this document, within the base XHTML specification <a
href="#ref_xhtml1">[XHTML1]</a>, and within other related specifications. It is only possible to fully comprehend the conformance requirements of XHTML through a complete reading of all normative references.</p>

<p>The keywords &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;, &quot;SHOULD&quot;, &quot;RECOMMENDED&quot;, &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be interpreted as described in <a href= 
"#ref_RFC2119">[RFC2119]</a>.</p>

<h2><a name="s_conform_document_type" id="s_conform_document_type">3.1.</a> XHTML Host Language Document Type Conformance</h2>

<p>It is possible to modify existing document types and define wholly new document types using both modules defined in this specification and other modules. Such a document type is &quot;XHTML Host Language Conforming&quot; when it meets the following criteria:</p>

<ol>
<li>The document type must be defined using one of the implementation methods defined by the W3C. Currently this is limited to XML DTDs, but XML Schema will be available soon. The rest of this section refers to &quot;DTDs&quot; although other implementations are possible.</li>

<li>The DTD which defines the document type must have a unique identifier as defined in <a href="#s_conform_naming_rules">Naming Rules</a> that uses the string &quot;XHTML&quot; in its first token of the public text description.</li>

<li>The DTD which defines the document type must include, at a minimum, the Structure, Hypertext, Text, and List modules defined in this specification.</li>

<li>For each of the W3C-defined modules that are included, all of the elements, attributes, types of attributes (including any required enumerated value lists), and any required minimal content models must be included (and optionally extended) in the document type's content model. When content models are extended, all of the elements and attributes (along with their types or any required enumerated value lists) required in the original content model must continue to be required.</li>

<li>The DTD which defines the document type may define additional elements and attributes. However, these must be in their own XML namespace <a href="#ref_xmlns">[XMLNAMES]</a>.</li>
</ol>

<h2><a name="s_integration_document_type" id="s_integration_document_type">3.2.</a> XHTML Integration Set Document Type Conformance</h2>

<p>It is also possible to define document types that are based upon XHTML, but do not adhere to its structure. Such a document type is &quot;XHTML Integration Set Conforming&quot; when it meets the following criteria:</p>

<ol>
<li>The document type must be defined using one of the implementation methods defined by the W3C. Currently this is limited to XML DTDs, but XML Schema will be available soon. The rest of this section refers to &quot;DTDs&quot; although other implementations are possible.</li>

<li>The DTD which defines the document type must have a unique identifier as defined in <a href="#s_conform_naming_rules">Naming Rules</a> that uses the string &quot;XHTML&quot; NOT in its first token of the public text description.</li>

<li>The DTD which defines the document type must include, at a minimum, the Hypertext, Text, and List modules defined in this specification.</li>

<li>For each of the W3C-defined modules that are included, all of the elements, attributes, types of attributes (including any required enumerated lists), and any required minimal content models must be included (and optionally extended) in the document type's content model. When content models are extended, all of the elements and attributes (along with their types or any required enumerated value lists) required in the original content model must continue to be required.</li>

<li>The DTD which defines the document type may define additional elements and attributes. However, these must be in their own XML namespace <a href="#ref_xmlns">[XMLNAMES]</a>.</li>
</ol>

<h2><a name="s_conform_module" id="s_conform_module">3.3.</a> XHTML Family Module Conformance</h2>

<p>This specification defines a method for defining XHTML-conforming modules. A module conforms to this specification when it meets all of the following criteria:</p>

<ol>
<li>The document type must be defined using one of the implementation methods defined by the W3C. Currently this is limited to XML DTDs, but XML Schema will be available soon. The rest of this section refers to &quot;DTDs&quot; although other implementations are possible.</li>

<li>The DTD which defines the module must have a unique identifier as defined in <a href="#s_conform_naming_rules">Naming Rules</a>.</li>

<li>When the module is defined using an XML DTD, the module must insulate its parameter entity names through the use of unique prefixes or other, similar methods.</li>

<li>The module definition must have a prose definition that describes the syntactic and semantic requirements of the elements, attributes, and/or content models that it declares.</li>

<li>The module definition must not reuse any element names that are defined in other W3C-defined modules, except when the content model and semantics of those elements are either identical to the original or an extension of the original, or when the reused element names are within their own namespace (see below).</li>

<li>The module definition's elements and attributes must be part of an XML namespace <a href="#ref_xmlns">[XMLNAMES]</a>. If the module is defined by an organization other than the W3C, this namespace must NOT be the same as the namespace in which other W3C modules are defined.</li>
</ol>

<h2><a name="s_conform_document" id="s_conform_document">3.4.</a> XHTML Family Document Conformance</h2>

<p>A conforming XHTML family document is a valid instance of a XHTML Host Language Conforming Document Type.</p>

<h2><a name="s_conform_user_agent" id="s_conform_user_agent">3.5.</a> XHTML Family User Agent Conformance</h2>

<p>A conforming user agent must meet all of the following criteria (as defined in <a href="#ref_xhtml1">[XHTML1]</a>):</p>

<ol>
<li>In order to be consistent with the XML 1.0 Recommendation <a href="#ref_xml">[XML]</a>, the user agent must parse and evaluate an XHTML document for well-formedness. If the user agent claims to be a validating user agent, it must also validate documents against their referenced DTDs according to <a href="#ref_xml">[XML]</a>.</li>

<li>When the user agent claims to support facilities defined within this specification or required by this specification through normative reference, it must do so in ways consistent with the facilities' definition.</li>

<li>When a user agent processes an XHTML document as generic <a href="#ref_xml">[XML]</a>, it shall only recognize attributes of type <code>ID</code> (e.g., the <code>id</code> attribute on most XHTML elements) as fragment identifiers.</li>

<li>If a user agent encounters an element it does not recognize, it must continue to process the children of that element. If the content is text, the text must be presented to the user.</li>

<li>If a user agent encounters an attribute it does not recognize, it must ignore the entire attribute specification (i.e., the attribute and its value).</li>

<li>If a user agent encounters an attribute value it doesn't recognize, it must use the default attribute value.</li>

<li>If it encounters an entity reference (other than one of the predefined entities) for which the user agent has processed no declaration (which could happen if the declaration is in the external subset which the user agent hasn't read), the entity reference should be rendered as the characters (starting with the ampersand and ending with the semi-colon) that make up the entity reference.</li>

<li>When rendering content, user agents that encounter characters or character entity references that are recognized but not renderable should display the document in such a way that it is obvious to the user that normal rendering has not taken place.</li>

<li>The user agent must process whitespace characters according to the following rules. The following characters are defined in <a href="#ref_xml">[XML]</a> as whitespace characters: 

<ul>
<li>Space (&amp;#x0020;)</li>

<li>Tab (&amp;#x0009;)</li>

<li>Carriage return (&amp;#x000D;)</li>

<li>Line feed (&amp;#x000A;)</li>
</ul>

<p>The XML processor normalizes different systems' line end codes into one single line feed character, that is passed up to the application. The XHTML user agent in addition, must treat the following characters as whitespace:</p>

<ul>
<li>Zero-width space (&amp;#x200B;)</li>
</ul>

<p>Whitespace is handled according to the following rules:</p>

<ul>
<li>All whitespace surrounding block elements should be removed.</li>

<li>Comments are removed entirely and do not affect whitespace handling. One whitespace character on either side of a comment is treated as two whitespace characters.</li>

<li>Leading and trailing whitespace inside a block element must be removed.</li>

<li>Line feed characters within a block element must be converted into a space (except when the 'xml:space' attribute is set to 'preserve').</li>

<li>A sequence of whitespace characters must be reduced to a single space character (except when the 'xml:space' attribute is set to 'preserve').</li>

<li>With regard to rendition, the user agent should render the content in a manner appropriate to the language in which the content is written. In languages whose primary script is Latinate, the ASCII space character is typically used to encode both grammatical word boundaries and typographic whitespace; in languages whose script is related to Nagari (e.g., Sanskrit, Thai, etc.), grammatical boundaries may be encoded using the ZW 'space' character, but will not typically be represented by typographic whitespace in rendered output; languages using Arabiform scripts may encode typographic whitespace using a space character, but may also use the ZW space character to delimit 'internal' grammatical boundaries (what look like words in Arabic to an English eye frequently encode several words, e.g., 'kitAbuhum' = 'kitAbu-hum' = 'book them' == their book); and languages in the Chinese script tradition typically neither encode such delimiters nor use typographic whitespace in this way.</li>
</ul>

<p>Whitespace in attribute values is processed according to <a href="#ref_xml">[XML]</a>.</p>
</li>
</ol>

<h2><a name="s_conform_naming_rules" id="s_conform_naming_rules">3.6.</a> Naming Rules</h2>

<p>XHTML Host Language document types must adhere to strict naming conventions so that it is possible for software and users to readily determine the relationship of document types to XHTML. The names for document types implemented as XML Document Type Definitions are defined through Formal Public Identifiers (FPIs). Within FPIs, fields are separated by double slash character sequences (<code>//</code>). The various fields must be composed as follows:</p>

<ol>
<li>The leading field must be &quot;-&quot; to indicate a privately defined resource.</li>

<li>The second field must contain the name of the organization responsible for maintaining the named item. There is no formal registry for these organization names. Each organization should define a name that is unique. The name used by the W3C is, for example, <code>W3C</code>.</li>

<li>The third field contains two constructs: the public text class followed by the public text description. The first token in the third field is the public text class which should adhere to ISO 8879 Clause 10.2.2.1 Public Text Class. Only XHTML Host Language conforming documents should begin the public text description with the token XHTML. The public text description should contain the string XHTML if the document type is Integration Set conforming. The field must also contain an organization-defined unique identifier (e.g., MyML 1.0). This identifier should be composed of a unique name and a version identifier that can be updated as the document type evolves.</li>

<li>The fourth field defines the language in which the item is developed (e.g., <code>EN</code>).</li>
</ol>

<p>Using these rules, the name for an XHTML Host Language conforming document type might be <code>-//MyCompany//DTD XHTML MyML 1.0//EN</code>. The name for an XHTML family conforming module might be <code>-//MyCompany//ELEMENTS XHTML MyElements 1.0//EN</code>. The name for an XHTML Integration Set conforming document type might be <code>-//MyCompany//DTD Special Markup with XHTML//EN</code>.</p>

<h2><a name="s_conform_commitment" id="s_conform_commitment">3.7.</a> XHTML Module Evolution</h2>

<p>Each module defined in this specification is given a unique identifier that adheres to the naming rules in the previous section. Over time, a module may evolve. A logical ramification of such evolution may be that some aspects of the module are no longer compatible with its previous definition. To help ensure that document types defined against modules defined in this specification continue to operate, the identifiers associated with a module that changes will be updated. Specifically, the Formal Public Identifier and System Identifier of the module will be changed by modifying the version identifier included in each. Document types that wish to incorporate the updated functionality will need to be similarly updated.</p>

<p>In addition, the earlier version(s) of the module will continue to be available via its earlier, unique identifier(s). In this way, document types developed using XHTML modules will continue to function seamlessly using their original definitions even as the collection expands and evolves. Similarly, document instances written against such document types will continue to validate using the earlier module definitions.</p>

<p>Other XHTML Family Module and Document Type authors are encouraged to adopt a similar strategy to ensure the continued functioning of document types based upon those modules and document instances based upon those document types.</p>

<!--OddPage-->
<h1><a name="s_abstraction" id="s_abstraction">4.</a> Defining Abstract Modules</h1>

<p>This section is <em>normative</em>.</p>

<p>An abstract module is a definition of an XHTML module using prose text and some informal markup conventions. While such a definition is not generally useful in the machine processing of document types, it is critical in helping people understand what is contained in a module. This section defines the way in which XHTML abstract modules are defined. An XHTML-conforming module is <em>not required</em> to provide an abstract module definition. However, anyone developing an XHTML module is encouraged to provide an abstraction to ease in the use of that module.</p>

<h2><a name="sec_4.1." id="sec_4.1.">4.1.</a> Syntactic Conventions</h2>

<p>The abstract modules are not defined in a formal grammar. However, the definitions do adhere to the following syntactic conventions. These conventions are similar to those of XML DTDs, and should be familiar to XML DTD authors. Each discrete syntactic element can be combined with others to make more complex expressions that conform to the algebra defined here.</p>

<dl>
<dt>element name</dt>

<dd>When an element is included in a content model, its explicit name will be listed.</dd>

<dt>content set</dt>

<dd>Some modules define lists of explicit element names called <em>content sets</em>. When a content set is included in a content model, its name will be listed.</dd>

<dt><code>expr ?</code></dt>

<dd>Zero or one instances of expr are permitted.</dd>

<dt><code>expr +</code></dt>

<dd>One or more instances of expr are required.</dd>

<dt><code>expr *</code></dt>

<dd>Zero or more instances of expr are permitted.</dd>

<dt><code>a , b</code></dt>

<dd>Expression <code>a</code> is required, followed by expression <code>b</code>.</dd>

<dt><code>a | b</code></dt>

<dd>Either expression a or expression b is required.</dd>

<dt><code>a - b</code></dt>

<dd>Expression a is permitted, omitting elements in expression b.</dd>

<dt>parentheses</dt>

<dd>When an expression is contained within parentheses, evaluation of any subexpressions within the parentheses take place before evaluation of expressions outside of the parentheses (starting at the deepest level of nesting first).</dd>

<dt>extending pre-defined elements</dt>

<dd>In some instances, a module adds attributes to an element. In these instances, the element name is followed by an ampersand (<code>&amp;</code>).</dd>

<dt>defining required attributes</dt>

<dd>When an element requires the definition of an attribute, that attribute name is followed by an asterisk (<code>*</code>).</dd>

<dt>defining the type of attribute values</dt>

<dd>When a module defines the type of an attribute value, it does so by listing the type in parentheses after the attribute name.</dd>

<dt>defining the legal values of attributes</dt>

<dd>When a module defines the legal values for an attribute, it does so by listing the explicit legal values (enclosed in quotation marks), separated by vertical bars (<code>|</code>), inside of parentheses following the attribute name. If the attribute has a default value, that value is followed by an asterisk (<code>*</code>). If the attribute has a fixed value, the attribute name is followed by an equals sign (<code>=</code>) and the fixed value enclosed in quotation marks.</dd>
</dl>

<h2><a name="s_common_types" id="s_common_types">4.2.</a> Content Types</h2>

<p>Abstract module definitions define minimal, atomic content models for each module. These minimal content models reference the elements in the module itself. They may also reference elements in other modules upon which the abstract module depends. Finally, the content model in many cases requires that text be permitted as content to one or more elements. In these cases, the symbol used for text is <span class="content">PCDATA</span>. This is a term, defined in the XML 1.0 Recommendation, that refers to processed character data. A content type can also be defined as <span class=
"content">EMPTY</span>, meaning the element has no content in its minimal content model.</p>

<h2><a name="s_common_attrtypes" id="s_common_attrtypes">4.3.</a> Attribute Types</h2>

<p>In some instances, it is necessary to define the types of attribute values or the explicit set of permitted values for attributes. The following attribute types (defined in the XML 1.0 Recommendation) are used in the definitions of the abstract modules:</p>

<table border="1" summary="Definitions of Attribute Types">
<thead>
<tr>
<th>Attribute Type</th>
<th>Definition</th>
</tr>
</thead>

<tbody>
<tr>
<td><a id="dt_CDATA" name="dt_CDATA">CDATA</a></td>
<td>Character data</td>
</tr>

<tr>
<td><a id="dt_ID" name="dt_ID">ID</a></td>
<td>A document-unique identifier</td>
</tr>

<tr>
<td><a id="dt_IDREF" name="dt_IDREF">IDREF</a></td>
<td>A reference to a document-unique identifier</td>
</tr>

<tr>
<td><a id="dt_IDREFS" name="dt_IDREFS">IDREFS</a></td>
<td>A space-separated list of references to document-unique identifiers</td>
</tr>

<tr>
<td><a id="dt_NAME" name="dt_NAME">NAME</a></td>
<td>A name with the same character constraints as ID above</td>
</tr>

<tr>
<td><a id="dt_NMTOKEN" name="dt_NMTOKEN">NMTOKEN</a></td>
<td>A name composed of only name tokens as defined in XML 1.0 <a href="#ref_xml">[XML]</a></td>
</tr>

<tr>
<td><a id="dt_NMTOKENS" name="dt_NMTOKENS">NMTOKENS</a></td>
<td>One or more whitespace separated NMTOKEN values</td>
</tr>

<tr>
<td><a id="dt_PCDATA" name="dt_PCDATA">PCDATA</a></td>
<td>Processed character data</td>
</tr>
</tbody>
</table>

<p>In addition to these pre-defined data types, XHTML Modularization defines the following data types and their semantics (as appropriate):</p>

<table border='1' summary='Custom data types'>
<tr>
<th>Data type</th>
<th>Description</th>
</tr>

<tr>
<td><a id="dt_Character" name="dt_Character">Character</a></td>
<td>A single character from <a href="#ref_ISO10646">[ISO10646]</a>.</td>
</tr>

<tr>
<td><a id="dt_Charset" name="dt_Charset">Charset</a></td>
<td>A character encoding, as per <a href="#ref_RFC2045">[RFC2045]</a>.</td>
</tr>

<tr>
<td><a id="dt_Charsets" name="dt_Charsets">Charsets</a></td>
<td>A space-separated list of character encodings, as per <a href="#ref_RFC2045">[RFC2045]</a>.</td>
</tr>

<tr>
<td><a id="dt_Color" name="dt_Color">Color</a></td>
<td>
<p>The attribute value type &quot;Color&quot; refers to color definitions as specified in <a rel="biblioentry" href="#ref_SRGB" class="normref">[SRGB]</a>. A color value may either be a hexadecimal number (prefixed by a hash mark) or one of the following sixteen color names. The color names are case-insensitive.</p>

<table summary="Table of color names and their sRGB values" border="0" cellspacing="10" cellpadding="0">
<caption><b><span class="index-inst" title="color::names of"><a name="idx-color">Color names</a></span> and sRGB values</b><br />
</caption>

<tr>
<td><img alt="" src="images/black.gif" /></td>
<td>Black = &quot;#000000&quot;</td>
<td><img alt="" src="images/green.gif" /></td>
<td>Green = &quot;#008000&quot;<br />
</td>
</tr>

<tr>
<td><img alt="" src="images/silver.gif" /></td>
<td>Silver = &quot;#C0C0C0&quot;</td>
<td><img alt="" src="images/lime.gif" /></td>
<td>Lime = &quot;#00FF00&quot;<br />
</td>
</tr>

<tr>
<td><img alt="" src="images/gray.gif" /></td>
<td>Gray = &quot;#808080&quot;</td>
<td><img alt="" src="images/olive.gif" /></td>
<td>Olive = &quot;#808000&quot;<br />
</td>
</tr>

<tr>
<td><img alt="" src="images/white.gif" /></td>
<td>White = &quot;#FFFFFF&quot;</td>
<td><img alt="" src="images/yellow.gif" /></td>
<td>Yellow = &quot;#FFFF00&quot;<br />
</td>
</tr>

<tr>
<td><img alt="" src="images/maroon.gif" /></td>
<td>Maroon = &quot;#800000&quot;</td>
<td><img alt="" src="images/navy.gif" /></td>
<td>Navy = &quot;#000080&quot;<br />
</td>
</tr>

<tr>
<td><img alt="" src="images/red.gif" /></td>
<td>Red = &quot;#FF0000&quot;</td>
<td><img alt="" src="images/blue.gif" /></td>
<td>Blue = &quot;#0000FF&quot;<br />
</td>
</tr>

<tr>
<td><img alt="" src="images/purple.gif" /></td>
<td>Purple = &quot;#800080&quot;</td>
<td><img alt="" src="images/teal.gif" /></td>
<td>Teal = &quot;#008080&quot;<br />
</td>
</tr>

<tr>
<td><img alt="" src="images/fuchsia.gif" /></td>
<td>Fuchsia = &quot;#FF00FF&quot;</td>
<td><img alt="" src="images/aqua.gif" /></td>
<td>Aqua = &quot;#00FFFF&quot;<br />
</td>
</tr>
</table>

<p>Thus, the color values &quot;#800080&quot; and &quot;Purple&quot; both refer to the color purple.</p>
</td>
</tr>

<tr>
<td><a id="dt_ContentType" name="dt_ContentType">ContentType</a></td>
<td>A media type, as per <a href="#ref_RFC2045">[RFC2045]</a>.</td>
</tr>

<tr>
<td><a id="dt_ContentTypes" name="dt_ContentTypes">ContentTypes</a></td>
<td>A comma-separated list of media types, as per <a href="#ref_RFC2045">[RFC2045]</a>.</td>
</tr>

<tr>
<td><a id="dt_Datetime" name="dt_Datetime">Datetime</a></td>
<td>Date and time information.</td>
</tr>

<tr>
<td><a id="dt_FrameTarget" name="dt_FrameTarget">FrameTarget</a></td>
<td>Frame name used as destination for results of certain actions.</td>
</tr>

<tr>
<td><a id="dt_LanguageCode" name="dt_LanguageCode">LanguageCode</a></td>
<td>A language code, as per <a href="#ref_RFC1766">[RFC1766]</a>.</td>
</tr>

<tr>
<td><a id="dt_Length" name="dt_Length">Length</a></td>
<td>The value may be either in pixels or a percentage of the available horizontal or vertical space. Thus, the value &quot;50%&quot; means half of the available space.</td>
</tr>

<tr>
<td><a id="dt_LinkTypes" name="dt_LinkTypes">LinkTypes</a></td>
<td>
<p>Authors may use the following recognized link types, listed here with their conventional interpretations. A LinkTypes value refers to a space-separated list of link types. Whitespace characters are not permitted within link types.</p>

<p>These link types are case-insensitive, i.e., &quot;Alternate&quot; has the same meaning as &quot;alternate&quot;.</p>

<p>User agents, search engines, etc. may interpret these link types in a variety of ways. For example, user agents may provide access to linked documents through a navigation bar.</p>

<dl>
<dt><strong>Alternate</strong></dt>

<dd>Designates substitute versions for the document in which the link occurs. When used together with the <code>hreflang</code> attribute, it implies a translated version of the document. When used together with the <code>media</code> attribute, it implies a version designed for a different medium (or media).</dd>

<dt><strong>Stylesheet</strong></dt>

<dd>Refers to an external style sheet. See the <a href="#s_stylemodule">Style Module</a> for details. This is used together with the link type &quot;Alternate&quot; for user-selectable alternate style sheets.</dd>

<dt><strong>Start</strong></dt>

<dd>Refers to the first document in a collection of documents. This link type tells search engines which document is considered by the author to be the starting point of the collection.</dd>

<dt><strong>Next</strong></dt>

<dd>Refers to the next document in a linear sequence of documents. User agents may choose to pre-load the &quot;next&quot; document, to reduce the perceived load time.</dd>

<dt><strong>Prev</strong></dt>

<dd>Refers to the previous document in an ordered series of documents. Some user agents also support the synonym &quot;Previous&quot;.</dd>

<dt><strong>Contents</strong></dt>

<dd>Refers to a document serving as a table of contents. Some user agents also support the synonym <em>ToC</em> (from &quot;Table of Contents&quot;).</dd>

<dt><strong>Index</strong></dt>

<dd>Refers to a document providing an index for the current document.</dd>

<dt><strong>Glossary</strong></dt>

<dd>Refers to a document providing a glossary of terms that pertain to the current document.</dd>

<dt><strong>Copyright</strong></dt>

<dd>Refers to a copyright statement for the current document.</dd>

<dt><strong>Chapter</strong></dt>

<dd>Refers to a document serving as a chapter in a collection of documents.</dd>

<dt><strong>Section</strong></dt>

<dd>Refers to a document serving as a section in a collection of documents.</dd>

<dt><strong>Subsection</strong></dt>

<dd>Refers to a document serving as a subsection in a collection of documents.</dd>

<dt><strong>Appendix</strong></dt>

<dd>Refers to a document serving as an appendix in a collection of documents.</dd>

<dt><strong>Help</strong></dt>

<dd>Refers to a document offering help (more information, links to other sources information, etc.)</dd>

<dt><strong>Bookmark</strong></dt>

<dd>Refers to a bookmark. A bookmark is a link to a key entry point within an extended document. The <span class='attributes'>title</span> attribute may be used, for example, to label the bookmark. Note that several bookmarks may be defined in each document.</dd>
</dl>
</td>
</tr>

<tr>
<td><a id="dt_MediaDesc" name="dt_MediaDesc">MediaDesc</a></td>
<td>
<p>The MediaDesc attribute is a comma-separated list of media descriptors. The following is a list of recognized media descriptors:</p>

<dl>
<dt><strong>screen</strong></dt>

<dd>Intended for non-paged computer screens.</dd>

<dt><strong>tty</strong></dt>

<dd>Intended for media using a fixed-pitch character grid, such as teletypes, terminals, or portable devices with limited display capabilities.</dd>

<dt><strong>tv</strong></dt>

<dd>Intended for television-type devices (low resolution, color, limited scrollability).</dd>

<dt><strong>projection</strong></dt>

<dd>Intended for projectors.</dd>

<dt><strong>handheld</strong></dt>

<dd>Intended for handheld devices (small screen, monochrome, bitmapped graphics, limited bandwidth).</dd>

<dt><strong>print</strong></dt>

<dd>Intended for paged, opaque material and for documents viewed on screen in print preview mode.</dd>

<dt><strong>braille</strong></dt>

<dd>Intended for braille tactile feedback devices.</dd>

<dt><strong>aural</strong></dt>

<dd>Intended for speech synthesizers.</dd>

<dt><strong>all</strong></dt>

<dd>Suitable for all devices.</dd>
</dl>

<p>Future versions of XHTML may introduce new values and may allow parameterized values. To facilitate the introduction of these extensions, conforming user agents must be able to parse the <span
class="attributes">media</span> attribute value as follows:</p>

<ol>
<li>The value is a comma-separated list of entries. For example, 

<pre>
media=&quot;screen, 3d-glasses, print and resolution &gt; 90dpi&quot;
</pre>

<p>is mapped to:</p>

<pre>
&quot;screen&quot;
&quot;3d-glasses&quot;
&quot;print and resolution &gt; 90dpi&quot;
</pre>
</li>

<li>Each entry is truncated just before the first character that isn't a US ASCII letter [a-zA-Z] (ISO 10646 hex 41-5a, 61-7a), digit [0-9] (hex 30-39), or hyphen-minus (hex 2d). In the example, this gives: 

<pre>
&quot;screen&quot;
&quot;3d-glasses&quot;
&quot;print&quot;
</pre>
</li>

<li>A case-insensitive match is then made with the set of media types defined above. User agents may ignore entries that don't match. In the example we are left with <tt>screen</tt> and <tt>print</tt>.</li>
</ol>

<div class="note">
<p><em><strong>Note.</strong> Style sheets may include media-dependent variations within them (e.g., the CSS <strong>@media</strong> construct). In such cases it may be appropriate to use &quot;<span
class="attributes">media</span> =all&quot;</em>.</p>
</div>
</td>
</tr>

<tr>
<td><a id="dt_MultiLength" name="dt_MultiLength">MultiLength</a></td>
<td>The value may be a Length or a relative length. A relative length has the form &quot;i*&quot;, where &quot;i&quot; is an integer. When allotting space among elements competing for that space, user agents allot pixel and percentage lengths first, then divide up remaining available space among relative lengths. Each relative length receives a portion of the available space that is proportional to the integer preceding the &quot;*&quot;. The value &quot;*&quot; is equivalent to &quot;1*&quot;. Thus, if 60 pixels of space are available after the user agent allots pixel and percentage space, and the competing relative lengths are 1*, 2*, and 3*, the 1* will be allotted 10 pixels, the 2* will be allotted 20 pixels, and the 3* will be allotted 30 pixels.</td>
</tr>

<tr>
<td><a id="dt_Number" name="dt_Number">Number</a></td>
<td>One or more digits</td>
</tr>

<tr>
<td><a id="dt_Pixels" name="dt_Pixels">Pixels</a></td>
<td>The value is an integer that represents the number of pixels of the canvas (screen, paper). Thus, the value &quot;50&quot; means fifty pixels. For normative information about the definition of a pixel, please consult <a href="#ref_css2">[CSS2]</a></td>
</tr>

<tr>
<td><a id="dt_Script" name="dt_Script">Script</a></td>
<td>
<p>Script data can be the content of the &quot;script&quot; element and the value of intrinsic event attributes. User agents must not evaluate script data as HTML markup but instead must pass it on as data to a script engine.</p>

<p>The <span class="index-inst" title="case::of script data"><a name="idx-case-9">case-sensitivity</a></span> of script data depends on the scripting language.</p>

<p>Please note that script data that is element content may not contain character references, but script data that is the value of an attribute may contain them.</p>
</td>
</tr>

<tr>
<td><a id="dt_Text" name="dt_Text">Text</a></td>
<td>Arbitrary textual data, likely meant to be human-readable.</td>
</tr>

<tr>
<td><a id="dt_URI" name="dt_URI">URI</a></td>
<td>A Uniform Resource Identifier, as per <a href="#ref_uri">[URI]</a>.</td>
</tr>

<tr>
<td><a id="dt_URIs" name="dt_URIs">URIs</a></td>
<td>A space-separated list of Uniform Resource Identifiers, as per <a href="#ref_uri">[URI]</a>.</td>
</tr>
</table>

<h2><a name="sec_4.4." id="sec_4.4.">4.4.</a> An Example Abstract Module Definition</h2>

<p><em>This section is informative</em></p>

<p>This section defines a sample abstract module as an example of how to take advantage of the syntax rules defined above. Since this example is trying to use all of the various syntactic elements defined, it is pretty complicated. Typical module definitions would be much simpler than this. Finally, note that this module references the attribute collection Common. This is a collection defined in the XHTML Modularization specification that includes all of the basic attributes that most elements need.</p>

<h3><a name="sec_4.4.1." id="sec_4.4.1.">4.4.1.</a> XHTML Skiing Module</h3>

<p>The XHTML Skiing Module defines markup used when describing aspects of a ski lodge. The elements and attributes defined in this module are:</p>

<table border="1" summary="Elements and Attributes of the Skiing Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>resort</td>
<td>Common, href (CDATA)</td>
<td>description , Aspen+</td>
</tr>

<tr>
<td>lodge</td>
<td>Common</td>
<td>description, (Aspen - lift)+</td>
</tr>

<tr>
<td>lift</td>
<td>Common, href</td>
<td>description?</td>
</tr>

<tr>
<td>chalet</td>
<td>Common, href</td>
<td>description?</td>
</tr>

<tr>
<td>room</td>
<td>Common, href</td>
<td>description?</td>
</tr>

<tr>
<td>lobby</td>
<td>Common, href</td>
<td>description?</td>
</tr>

<tr>
<td>fireplace</td>
<td>Common, href</td>
<td>description?</td>
</tr>

<tr>
<td>description</td>
<td>Common</td>
<td>PCDATA*</td>
</tr>
</tbody>
</table>

<p>This module also defines the content set Aspen with the minimal content model <span class="content">lodge | lift | chalet | room | lobby | fireplace</span>.</p>

<!--OddPage-->
<h1><a name="s_xhtmlmodules" id="s_xhtmlmodules">5.</a> XHTML Abstract Modules</h1>

<p>This section is <em>normative</em>.</p>

<p>This section specifies the contents of the XHTML abstract modules. These modules are abstract definitions of collections of elements, attributes, and their content models. These abstract modules can be mapped onto any appropriate specification mechanism. <a href="#a_dtd_module_defs">XHTML DTD Module Implementations</a>, for example, maps these modules onto DTDs as described in <a href="#ref_xml">[XML]</a>.</p>

<p>Content developers and device designers should view this section as a guide to the definition of the functionality provided by the various XHTML-defined modules. When developing documents or defining a profile for a class of documents, content developers can determine which of these modules are essential for conveying their message. When designing clients, device designers should develop their device profiles by choosing from among the abstract modules defined here.</p>

<p>Except when overridden in this document, the semantics of these elements and attributes are defined in <a href="#ref_html40">[HTML4]</a>.</p>

<h2><a name="s_commonatts" id="s_commonatts">5.1.</a> Attribute Collections</h2>

<p>Many of the abstract modules in this section define the required attributes for elements. The table below defines some collections of attributes that are referenced throughout the modules. These expressions should in no way be considered normative or mandatory. They are an editorial convenience for this document. When used in the remainder of this section, it is the expansion of the term that is normative, not the term itself.</p>

<p>The following basic attribute sets are used on many elements. In each case where they are used, their use is identified via their name rather than enumerating the list.</p>

<table border="1" summary="Definitions of Attribute Collections">
<thead>
<tr>
<th>Collection Name</th>
<th>Attributes in Collection</th>
</tr>
</thead>

<tbody>
<tr>
<td><a id="s_core_collection" name="s_core_collection">Core</a></td>
<td>class (<span class="datatype"><a href="#dt_NMTOKENS">NMTOKENS</a></span>), id (<span class="datatype"><a href="#dt_ID">ID</a></span>), title (<span class=
"datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
</tr>

<tr>
<td><a id="s_i18n_collection" name="s_i18n_collection">I18N</a></td>
<td>xml:lang (<span class="datatype"><a href="#dt_NMTOKEN">NMTOKEN</a></span>)</td>
</tr>

<tr>
<td><a id="s_events_collection" name="s_events_collection">Events</a></td>
<td>onclick (<span class="datatype"><a href="#dt_Script">Script</a></span>), ondblclick (<span class="datatype"><a href="#dt_Script">Script</a></span>), onmousedown (<span class="datatype"><a href="#dt_Script">Script</a></span>), onmouseup (<span class="datatype"><a href="#dt_Script">Script</a></span>), onmouseover (<span class= 
"datatype"><a href="#dt_Script">Script</a></span>), onmousemove (<span class="datatype"><a href="#dt_Script">Script</a></span>), onmouseout (<span class="datatype"><a
href="#dt_Script">Script</a></span>), onkeypress (<span class="datatype"><a href="#dt_Script">Script</a></span>), onkeydown (<span class="datatype"><a href= 
"#dt_Script">Script</a></span>), onkeyup (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
</tr>

<tr>
<td><a id="s_style_collection" name="s_style_collection">Style</a></td>
<td>style (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
</tr>

<tr>
<td><a id="s_common_collection" name="s_common_collection">Common</a></td>
<td><span class="collection"><a href="#s_core_collection">Core</a></span> + <span class="collection"><a href="#s_events_collection">Events</a></span> + <span class="collection"><a href= 
"#s_i18n_collection">I18N</a></span> + <span class="collection"><a href="#s_style_collection">Style</a></span></td>
</tr>
</tbody>
</table>

<p>Note that the Events collection is only defined when the Intrinsic Events Module is selected. Otherwise, the Events collection is empty.</p>

<p>Also note that the Style collection is only defined when the Style Attribute Module is selected. Otherwise, the Style collection is empty.</p>

<h2><a name="sec_5.2." id="sec_5.2.">5.2.</a> Core Modules</h2>

<p>The core modules are modules that are required to be present in any <a href="#s_conform_document_type">XHTML Family Conforming Document Type</a>.</p>

<h3><a name="s_structuremodule" id="s_structuremodule">5.2.1.</a> Structure Module</h3>

<p>The Structure Module defines the major structural elements for XHTML. These elements effectively act as the basis for the content model of many XHTML family document types. The elements and attributes included in this module are:</p>

<table border="1" summary="Elements and Attributes for Structure Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>body</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(Heading | Block | List)*</td>
</tr>

<tr>
<td>head</td>
<td><span class="collection"><a href="#s_i18n_collection">I18N</a></span>, profile (<span class="datatype"><a href="#dt_URI">URI</a></span>)</td>
<td>title</td>
</tr>

<tr>
<td>html</td>
<td><span class="collection"><a href="#s_i18n_collection">I18N</a></span>, version (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), xmlns (<span class="datatype"><a
href="#dt_URI">URI</a></span> = &quot;http://www.w3.org/1999/xhtml&quot;)</td>
<td>head, body</td>
</tr>

<tr>
<td>title</td>
<td><span class="collection"><a href="#s_i18n_collection">I18N</a></span></td>
<td>PCDATA</td>
</tr>
</tbody>
</table>

<p>This module is the basic structural definition for XHTML content. The <code>html</code> element acts as the root element for all XHTML Family Document Types.</p>

<p>Note that the value of the xmlns attribute is defined to be &quot;http://www.w3.org/1999/xhtml&quot;. Also note that because the xmlns attribute is treated specially by XML namespace-aware parsers [<a href= 
"#ref_xmlns">XMLNAMES</a>], it is legal to have it present as an attribute of each element. However, any time the xmlns attribute is used in the context of an XHTML module, whether with a prefix or not, the value of the attribute shall be the XHTML namespace defined here. See <a href="#s_module_namespace">Defining the Namespace of a Module</a> for more on rules regarding namespace usage with XHTML family modules.</p>

<p>Implementation: <a href="#a_module_Structure">DTD</a></p>

<h3><a name="s_textmodule" id="s_textmodule">5.2.2.</a> Text Module</h3>

<p>This module defines all of the basic text container elements, attributes, and their content model:</p>

<table class="moduledef" border="1" summary="Elements and Attributes in Text Module">
<thead>
<tr>
<th>Element</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>abbr</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>acronym</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>address</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>blockquote</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, cite (<span class="datatype"><a href="#dt_URI">URI</a></span>)</td>
<td>(PCDATA | Heading | Block | List)*</td>
</tr>

<tr>
<td>br</td>
<td><span class="collection"><a href="#s_core_collection">Core</a></span></td>
<td>EMPTY</td>
</tr>

<tr>
<td>cite</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>code</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>dfn</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>div</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Flow)*</td>
</tr>

<tr>
<td>em</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>h1</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>h2</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>h3</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>h4</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>h5</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>h6</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>kbd</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>p</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>pre</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, xml:space=&quot;preserve&quot;</td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>q</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, cite (<span class="datatype"><a href="#dt_URI">URI</a></span>)</td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>samp</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>span</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>strong</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>var</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>
</tbody>
</table>

<p>The minimal content model for this module defines some content sets:</p>

<dl>
<dt>Heading</dt>

<dd><span class="content">h1 | h2 | h3 | h4 | h5 | h6</span></dd>

<dt>Block</dt>

<dd><span class="content">address | blockquote | div | p | pre</span></dd>

<dt>Inline</dt>

<dd><span class="content">abbr | acronym | br | cite | code | dfn | em | kbd | q | samp | span | strong | var</span></dd>

<dt>Flow</dt>

<dd><span class="content">Heading | Block | Inline</span></dd>
</dl>

<p>Implementation: <a href="#a_module_Text">DTD</a></p>

<h3><a name="s_hypertextmodule" id="s_hypertextmodule">5.2.3.</a> Hypertext Module</h3>

<p>The Hypertext Module provides the element that is used to define hypertext links to other resources. This module supports the following element and attributes:</p>

<table class="moduledef" border="1" summary="The A element and its attributes">
<thead>
<tr>
<th>Element</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>a</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>), charset (<span class= 
"datatype"><a href="#dt_Charset">Charset</a></span>), href (<span class="datatype"><a href="#dt_URI">URI</a></span>), hreflang (<span class="datatype"><a href= 
"#dt_LanguageCode">LanguageCode</a></span>), rel (<span class="datatype"><a href="#dt_LinkTypes">LinkTypes</a></span>), rev (<span class="datatype"><a href= 
"#dt_LinkTypes">LinkTypes</a></span>), tabindex (<span class="datatype"><a href="#dt_Number">Number</a></span>), type (<span class="datatype"><a href= 
"#dt_ContentType">ContentType</a></span>)</td>
<td>(PCDATA | Inline - a)*</td>
</tr>
</tbody>
</table>

<p>This module adds the <code>a</code> element to the <span class="content">Inline</span> content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Hypertext">DTD</a></p>

<h3><a name="s_listmodule" id="s_listmodule">5.2.4.</a> List Module</h3>

<p>As its name suggests, the List Module provides list-oriented elements. Specifically, the List Module supports the following elements and attributes:</p>

<table class="moduledef" border="1" summary="Elements and Attributes of the List Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>dl</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(dt | dd)+</td>
</tr>

<tr>
<td>dt</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>dd</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Flow)*</td>
</tr>

<tr>
<td>ol</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>li+</td>
</tr>

<tr>
<td>ul</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>li+</td>
</tr>

<tr>
<td>li</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Flow)*</td>
</tr>
</tbody>
</table>

<p>This module also defines the content set List with the minimal content model <span class="content">(dl | ol | ul)+</span> and adds this set to the Flow content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Lists">DTD</a></p>

<h2><a name="s_appletmodule" id="s_appletmodule">5.3.</a> Applet Module</h2>

<p><em>This module is deprecated. Similar functionality can be found in the <a href="#s_objectmodule">Object Module</a>.</em></p>

<p>The Applet Module provides elements for referencing external applications. Specifically, the Applet Module supports the following elements and attributes:</p>

<table class="moduledef" border="1" summary="Elements and Attributes in Applet Module">
<thead>
<tr>
<th>Element</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>applet</td>
<td>Core, alt* (<span class="datatype"><a href="#dt_Text">Text</a></span>), archive (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), code (<span class= 
"datatype"><a href="#dt_CDATA">CDATA</a></span>), codebase (<span class="datatype"><a href="#dt_URI">URI</a></span>), height* (<span class="datatype"><a href= 
"#dt_Length">Length</a></span>), object (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), width* (<span class="datatype"><a href= 
"#dt_Length">Length</a></span>)</td>
<td>(PCDATA | Flow | param)*</td>
</tr>

<tr>
<td>param</td>
<td>id (<span class="datatype"><a href="#dt_ID">ID</a></span>), name* (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), type (<span class="datatype"><a
href="#dt_ContentType">ContentType</a></span>), value (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), valuetype (&quot;data&quot;* | &quot;ref&quot; | &quot;object&quot;)</td>
<td>EMPTY</td>
</tr>
</tbody>
</table>

<p>When the Applet Module is used, it adds the <code>applet</code> element to the Inline content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Applet">DTD</a></p>

<h2><a name="s_text" id="s_text">5.4.</a> Text Extension Modules</h2>

<p>This section defines a variety of additional textual markup modules.</p>

<h3><a name="s_presentationmodule" id="s_presentationmodule">5.4.1.</a> Presentation Module</h3>

<p>This module defines elements, attributes, and a minimal content model for simple presentation-related markup:</p>

<table class="moduledef" border="1" summary="Elements and Attributes in Presentation Module">
<thead>
<tr>
<th>Element</th>
<th>Attributes</th>
<th class="content">Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>b</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>big</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>hr</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>EMPTY</td>
</tr>

<tr>
<td>i</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>small</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>sub</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>sup</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>tt</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>
</tbody>
</table>

<p>When this module is used, the <code>hr</code> element is added to the <span class="content">Block</span> content set of the Text Module. In addition, the <code>b, big, i, small, sub, sup,</code> and <code>tt</code> elements are added to the <span class="content">Inline</span> content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Presentation">DTD</a></p>

<h3><a name="s_editmodule" id="s_editmodule">5.4.2.</a> Edit Module</h3>

<p>This module defines elements and attributes for use in editing-related markup:</p>

<table class="moduledef" border="1" summary="Elements and Attributes in Edit Module">
<thead>
<tr>
<th>Element</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>del</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, cite (<span class="datatype"><a href="#dt_URI">URI</a></span>), datetime (<span class="datatype"><a
href="#dt_Datetime">Datetime</a></span>)</td>
<td>(PCDATA | Flow)*</td>
</tr>

<tr>
<td>ins</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, cite (<span class="datatype"><a href="#dt_URI">URI</a></span>), datetime (<span class="datatype"><a
href="#dt_Datetime">Datetime</a></span>)</td>
<td>(PCDATA | Flow)*</td>
</tr>
</tbody>
</table>

<p>When this module is used, the <code>del</code> and <code>ins</code> elements are added to the <span class="content">Inline</span> content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Edit">DTD</a></p>

<h3><a name="s_bdomodule" id="s_bdomodule">5.4.3.</a> Bi-directional Text Module</h3>

<p>The Bi-directional Text module defines an element that can be used to declare the bi-directional rules for the element's content.</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Bi-directional Text Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>bdo</td>
<td><span class="collection"><a href="#s_common_collection">Core</a></span>, dir* (&quot;ltr&quot; | &quot;rtl&quot;)</td>
<td>(PCDATA | Inline)*</td>
</tr>
</tbody>
</table>

<p>When this module is used, the <code>bdo</code> element is added to the <span class="content">Inline</span> content set of the Text Module. Selecting this module also adds the attribute <code>dir* (&quot;ltr&quot; | &quot;rtl&quot;)</code> to the I18N attribute collection.</p>

<p>Implementation: <a href="#a_module_Bi-directional_Text">DTD</a></p>

<h2><a name="s_forms" id="s_forms">5.5.</a> Forms Modules</h2>

<h3><a name="s_sformsmodule" id="s_sformsmodule">5.5.1.</a> Basic Forms Module</h3>

<p>The Basic Forms Module provides the form-related elements, but only in a limited form. Specifically, the Basic Forms Module supports the following elements, attributes, and minimal content model:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Basic Forms Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>form</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, action* (<span class="datatype"><a href="#dt_URI">URI</a></span>), method (&quot;get&quot;* | &quot;post&quot;), enctype (<span class="datatype"><a href="#dt_ContentType">ContentType</a></span>)</td>
<td>(Heading | List | Block - form)+</td>
</tr>

<tr>
<td>input</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>), checked (&quot;checked&quot;), maxlength (<span class="datatype"><a href="#dt_Number">Number</a></span>), name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), size (<span class= 
"datatype"><a href="#dt_Number">Number</a></span>), src (<span class="datatype"><a href="#dt_URI">URI</a></span>), type (&quot;text&quot;* | &quot;password&quot; | &quot;checkbox&quot; | &quot;radio&quot; | &quot;submit&quot; | &quot;reset&quot; | &quot;hidden&quot; ), value (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>EMPTY</td>
</tr>

<tr>
<td>label</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>), for (<span class= 
"datatype"><a href="#dt_IDREF">IDREF</a></span>)</td>
<td>(PCDATA | Inline - label)*</td>
</tr>

<tr>
<td>select</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, multiple (&quot;multiple&quot;), name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), size (<span
class="datatype"><a href="#dt_Number">Number</a></span>)</td>
<td>option+</td>
</tr>

<tr>
<td>option</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, selected (&quot;selected&quot;), value (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>PCDATA</td>
</tr>

<tr>
<td>textarea</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>), cols* (<span class= 
"datatype"><a href="#dt_Number">Number</a></span>), name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), rows* (<span class="datatype"><a href= 
"#dt_Number">Number</a></span>)</td>
<td>PCDATA</td>
</tr>
</tbody>
</table>

<p>This module defines two content sets:</p>

<dl>
<dt>Form</dt>

<dd><span class="content">form</span></dd>

<dt>Formctrl</dt>

<dd><span class="content">input | label | select | textarea</span></dd>
</dl>

<p>When this module is used, it adds the Form content set to the Block content set and it adds the Formctrl content set to the Inline content set as these are defined in the Text Module.</p>

<p>Implementation: <a href="#a_module_Basic_Forms">DTD</a></p>

<h3><a name="s_extformsmodule" id="s_extformsmodule">5.5.2.</a> Forms Module</h3>

<p>The Forms Module provides all of the forms features found in HTML 4.0. Specifically, the Forms Module supports:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Forms Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>form</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accept (<span class="datatype"><a href="#dt_ContentTypes">ContentTypes</a></span>), accept-charset (<span class="datatype"><a href="#dt_Charsets">Charsets</a></span>), action* (<span class="datatype"><a href="#dt_URI">URI</a></span>), method (&quot;get&quot;* | &quot;post&quot;), enctype (<span class="datatype"><a href="#dt_ContentType">ContentType</a></span>)</td>
<td>(Heading | List | Block - form | fieldset)+</td>
</tr>

<tr>
<td>input</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accept (<span class="datatype"><a href="#dt_ContentTypes">ContentTypes</a></span>), accesskey (<span
class="datatype"><a href="#dt_Character">Character</a></span>), alt (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), checked (&quot;checked&quot;), disabled (&quot;disabled&quot;), maxlength (<span class="datatype"><a href="#dt_Number">Number</a></span>), name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), readonly (&quot;readonly&quot;), size (<span class="datatype"><a href="#dt_Number">Number</a></span>), src (<span class="datatype"><a href="#dt_URI">URI</a></span>), tabindex (<span
class="datatype"><a href="#dt_Number">Number</a></span>), type (&quot;text&quot;* | &quot;password&quot; | &quot;checkbox&quot; | &quot;button&quot; | &quot;radio&quot; | &quot;submit&quot; | &quot;reset&quot; | &quot;file&quot; | &quot;hidden&quot; | &quot;image&quot;), value (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>EMPTY</td>
</tr>

<tr>
<td>select</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, disabled (&quot;disabled&quot;), multiple (&quot;multiple&quot;), name (<span class="datatype"><a href=
"#dt_CDATA">CDATA</a></span>), size (<span class="datatype"><a href="#dt_Number">Number</a></span>), tabindex (<span class="datatype"><a href= 
"#dt_Number">Number</a></span>)</td>
<td>(optgroup | option)+</td>
</tr>

<tr>
<td>option</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, disabled (&quot;disabled&quot;), label (<span class="datatype"><a href="#dt_Text">Text</a></span>), selected (&quot;selected&quot;), value (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>PCDATA</td>
</tr>

<tr>
<td>textarea</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>), cols* (<span class= 
"datatype"><a href="#dt_Number">Number</a></span>), disabled (&quot;disabled&quot;), name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), readonly (&quot;readonly&quot;), rows* (<span class="datatype"><a href="#dt_Number">Number</a></span>), tabindex (<span class="datatype"><a href="#dt_Number">Number</a></span>)</td>
<td>PCDATA</td>
</tr>

<tr>
<td>button</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>), disabled (&quot;disabled&quot;), name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), tabindex (<span class="datatype"><a href="#dt_Number">Number</a></span>), type (&quot;button&quot; | &quot;submit&quot;* | &quot;reset&quot;), value (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>(PCDATA | Heading | List | Block - Form | Inline - Formctrl)*</td>
</tr>

<tr>
<td>fieldset</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | legend | Flow)*</td>
</tr>

<tr>
<td>label</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>), for (<span class= 
"datatype"><a href="#dt_IDREF">IDREF</a></span>)</td>
<td>(PCDATA | Inline - label)*</td>
</tr>

<tr>
<td>legend</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>)</td>
<td>(PCDATA | Inline)+</td>
</tr>

<tr>
<td>optgroup</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, disabled (&quot;disabled&quot;), label* (<span class="datatype"><a href="#dt_Text">Text</a></span>)</td>
<td>option+</td>
</tr>
</tbody>
</table>

<p>This module defines two content sets:</p>

<dl>
<dt>Form</dt>

<dd><span class="content">form | fieldset</span></dd>

<dt>Formctrl</dt>

<dd><span class="content">input | select | textarea | label | button</span></dd>
</dl>

<p>When this module is used, it adds the Form content set to the Block content set and it adds the Formctrl content set to the Inline content set as these are defined in the Text Module.</p>

<p>The Forms Module is a superset of the Basic Forms Module. These modules may not be used together in a single document type.</p>

<p>Implementation: <a href="#a_module_Forms">DTD</a></p>

<h2><a name="sec_5.6." id="sec_5.6.">5.6.</a> Table Modules</h2>

<h3><a name="s_simpletablemodule" id="s_simpletablemodule">5.6.1.</a> Basic Tables Module</h3>

<p>The Basic Tables Module provides table-related elements, but only in a limited form. Specifically, the Basic Tables Module supports:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Basic Tables Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>caption</td>
<td><span class="collection"> <a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>table</td>
<td><span class="collection"> <a href="#s_common_collection">Common</a></span> , summary ( <span class="datatype"> <a href="#dt_Text">Text</a></span> ), width ( <span class=
"datatype"> <a href="#dt_Length">Length</a></span> )</td>
<td>caption?, tr+</td>
</tr>

<tr>
<td>td</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, abbr (<span class="datatype"><a href="#dt_Text">Text</a></span>), align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot;), axis (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), colspan (<span class="datatype"><a href="#dt_Number">Number</a></span>), headers (<span class= 
"datatype"><a href="#dt_IDREFS">IDREFS</a></span>), rowspan (<span class="datatype"><a href="#dt_Number">Number</a></span>), scope (&quot;row&quot; | &quot;col&quot;), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot;)</td>
<td>(PCDATA | Flow - table)*</td>
</tr>

<tr>
<td>th</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, abbr (<span class="datatype"><a href="#dt_Text">Text</a></span>), align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot;), axis (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), colspan (<span class="datatype"><a href="#dt_Number">Number</a></span>), headers (<span class= 
"datatype"><a href="#dt_IDREFS">IDREFS</a></span>), rowspan (<span class="datatype"><a href="#dt_Number">Number</a></span>), scope (&quot;row&quot; | &quot;col&quot; ), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot;)</td>
<td>(PCDATA | Flow - table)*</td>
</tr>

<tr>
<td>tr</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot;), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot;)</td>
<td>(td | th)+</td>
</tr>
</tbody>
</table>

<p>When this module is used, it adds the <code>table</code> element to the Block content set as defined in the Text Module.</p>

<p>Implementation: <a href="#a_module_Basic_Tables">DTD</a></p>

<h3><a name="s_tablemodule" id="s_tablemodule">5.6.2.</a> Tables Module</h3>

<p>As its name suggests, the Tables Module provides table-related elements that are better able to be accessed by non-visual user agents. Specifically, the Tables Module supports the following elements, attributes, and content model:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Tables Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>caption</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>table</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, border (<span class="datatype"><a href="#dt_Pixels">Pixels</a></span>), cellpadding (<span class= 
"datatype"><a href="#dt_Length">Length</a></span>), cellspacing (<span class="datatype"><a href="#dt_Length">Length</a></span>), datapagesize (<span class=
"datatype"><a href="#dt_CDATA">CDATA</a></span>), frame (&quot;void&quot; | &quot;above&quot; | below&quot; | &quot;hsides&quot; | &quot;lhs&quot; | &quot;rhs&quot; | &quot;vsides&quot; | &quot;box&quot; | &quot;border&quot;), rules (&quot;none&quot; | &quot;groups&quot; | &quot;rows&quot; | &quot;cols&quot; | &quot;all&quot;), summary (<span class="datatype"><a href="#dt_Text">Text</a></span>), width (<span class="datatype"><a href="#dt_Length">Length</a></span>)</td>
<td>caption?, ( col* | colgroup* ), (( thead?, tfoot?, tbody+ ) | ( tr+ ))</td>
</tr>

<tr>
<td>td</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, abbr (<span class="datatype"><a href="#dt_Text">Text</a></span>), align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot; | &quot;char&quot;), axis (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), char (<span class="datatype"><a href="#dt_Character">Character</a></span>), charoff (<span class="datatype"><a href="#dt_Length">Length</a></span>), colspan (<span class="datatype"><a href="#dt_Number">Number</a></span>), headers (<span class= 
"datatype"><a href="#dt_IDREFS">IDREFS</a></span>), rowspan (<span class="datatype"><a href="#dt_Number">Number</a></span>), scope (&quot;row&quot;, &quot;col&quot;, &quot;rowgroup&quot;, &quot;colgroup&quot;), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;baseline&quot;)</td>
<td>(PCDATA | Flow)*</td>
</tr>

<tr>
<td>th</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, abbr (<span class="datatype"><a href="#dt_Text">Text</a></span>), align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot; | &quot;char&quot;), axis (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), char (<span class="datatype"><a href="#dt_Character">Character</a></span>), charoff (<span class="datatype"><a href="#dt_Length">Length</a></span>), colspan (<span class="datatype"><a href="#dt_Number">Number</a></span>), headers (<span class= 
"datatype"><a href="#dt_IDREFS">IDREFS</a></span>), rowspan (<span class="datatype"><a href="#dt_Number">Number</a></span>), scope (&quot;row&quot;, &quot;col&quot;, &quot;rowgroup&quot;, &quot;colgroup&quot;), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;baseline&quot;)</td>
<td>(PCDATA | Flow)*</td>
</tr>

<tr>
<td>tr</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;, &quot;char&quot;), char (<span class="datatype"><a href= 
"#dt_Character">Character</a></span>), charoff (<span class="datatype"><a href="#dt_Length">Length</a></span>), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;baseline&quot;)</td>
<td>(td | th)+</td>
</tr>

<tr>
<td>col</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;, &quot;char&quot;), char (<span class="datatype"><a href= 
"#dt_Character">Character</a></span>), charoff (<span class="datatype"><a href="#dt_Length">Length</a></span>), span (<span class="datatype"><a href= 
"#dt_Number">Number</a></span>), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;baseline&quot;), width (<span class="datatype"><a href=
"#dt_MultiLength">MultiLength</a></span>)</td>
<td>EMPTY</td>
</tr>

<tr>
<td>colgroup</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;, &quot;char&quot;), char (<span class="datatype"><a href= 
"#dt_Character">Character</a></span>), charoff (<span class="datatype"><a href="#dt_Length">Length</a></span>), span (<span class="datatype"><a href= 
"#dt_Number">Number</a></span>), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;baseline&quot;), width (<span class="datatype"><a href=
"#dt_MultiLength">MultiLength</a></span>)</td>
<td>col*</td>
</tr>

<tr>
<td>tbody</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;, &quot;char&quot;), char (<span class="datatype"><a href= 
"#dt_Character">Character</a></span>), charoff (<span class="datatype"><a href="#dt_Length">Length</a></span>), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;baseline&quot;)</td>
<td>tr+</td>
</tr>

<tr>
<td>thead</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;, &quot;char&quot;), char (<span class="datatype"><a href= 
"#dt_Character">Character</a></span>), charoff (<span class="datatype"><a href="#dt_Length">Length</a></span>), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;baseline&quot;)</td>
<td>tr+</td>
</tr>

<tr>
<td>tfoot</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;, &quot;char&quot;), char (<span class="datatype"><a href= 
"#dt_Character">Character</a></span>), charoff (<span class="datatype"><a href="#dt_Length">Length</a></span>), valign (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;baseline&quot;)</td>
<td>tr+</td>
</tr>
</tbody>
</table>

<p>When this module is used, it adds the <code>table</code> element to the Block content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Tables">DTD</a></p>

<h2><a name="s_imagemodule" id="s_imagemodule">5.7.</a> Image Module</h2>

<p>The Image Module provides basic image embedding, and may be used in some implementations independently of client side image maps. The Image Module supports the following element and attributes:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Image Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>img</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, alt* (<span class="datatype"><a href="#dt_Text">Text</a></span>), height (<span class="datatype"><a
href="#dt_Length">Length</a></span>), longdesc (<span class="datatype"><a href="#dt_URI">URI</a></span>), src* (<span class="datatype"><a href=
"#dt_URI">URI</a></span>), width (<span class="datatype"><a href="#dt_Length">Length</a></span>)</td>
<td>EMPTY</td>
</tr>
</tbody>
</table>

<p>When this module is used, it adds the <code>img</code> element to the Inline content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Image">DTD</a></p>

<h2><a name="s_imapmodule" id="s_imapmodule">5.8.</a> Client-side Image Map Module</h2>

<p>The Client-side Image Map Module provides elements for client side image maps. It requires that the Image Module (or another module that supports the <code>img</code> element) be included. The Client-side Image Map Module supports the following elements:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Client-side Image Map Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>a&amp;</td>
<td>coords (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), shape (&quot;rect&quot; | &quot;circle&quot; | &quot;poly&quot; | &quot;default&quot;)</td>
<td>n/a</td>
</tr>

<tr>
<td>area</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, accesskey (<span class="datatype"><a href="#dt_Character">Character</a></span>), alt* (<span class= 
"datatype"><a href="#dt_Text">Text</a></span>), coords (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), href (<span class="datatype"><a href= 
"#dt_URI">URI</a></span>), nohref (&quot;nohref&quot;), shape (&quot;rect&quot;* | &quot;circle&quot; | &quot;poly&quot; | &quot;default&quot;), tabindex (<span class="datatype"><a href=
"#dt_Number">Number</a></span>)</td>
<td>EMPTY</td>
</tr>

<tr>
<td>img&amp;</td>
<td>usemap (<span class="datatype"><a href="#dt_IDREF">IDREF</a></span>)</td>
<td>n/a</td>
</tr>

<tr>
<td>input&amp;</td>
<td>usemap (<span class="datatype"><a href="#dt_IDREF">IDREF</a></span>)</td>
<td>n/a</td>
</tr>

<tr>
<td>map</td>
<td><span class="collection"><a href="#s_i18n_collection">I18N</a></span>, <span class="collection"><a href="#s_events_collection">Events</a></span>, class (<span class="datatype"><a href= 
"#dt_NMTOKEN">NMTOKEN</a></span>), id* (<span class="datatype"><a href="#dt_ID">ID</a></span>), title (<span class="datatype"><a href=
"#dt_CDATA">CDATA</a></span>)</td>
<td>((Heading | Block) | area)+</td>
</tr>

<tr>
<td>object&amp;</td>
<td>usemap (<span class="datatype"><a href="#dt_IDREF">IDREF</a></span>)</td>
<td>Note: Only when the object module is included</td>
</tr>
</tbody>
</table>

<p>When this module is used, the <code>map</code> element is added to the Inline content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Client-side_Image_Map">DTD</a></p>

<h2><a name="s_servermapmodule" id="s_servermapmodule">5.9.</a> Server-side Image Map Module</h2>

<p>The Server-side Image Map Module provides support for image-selection and transmission of selection coordinates. It requires that the Image Module (or another module that supports the <code>img</code> element) be included. The Server-side Image Map Module supports the following attributes:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Server-side Image Map Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
<th>Notes</th>
</tr>
</thead>

<tbody>
<tr>
<td>img&amp;</td>
<td>ismap (&quot;ismap&quot;)</td>
<td>n/a</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>input&amp;</td>
<td>ismap (&quot;ismap&quot;)</td>
<td>n/a</td>
<td>When the Forms or Basic Forms module is selected.</td>
</tr>
</tbody>
</table>

<p>Implementation: <a href="#a_module_Server-side_Image_Map">DTD</a></p>

<h2><a name="s_objectmodule" id="s_objectmodule">5.10.</a> Object Module</h2>

<p>The Object Module provides elements for general-purpose object inclusion. Specifically, the Object Module supports:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Object Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>object</td>
<td>Common, archive (<span class="datatype"><a href="#dt_URIs">URIs</a></span>), classid (<span class="datatype"><a href="#dt_URI">URI</a></span>), codebase (<span
class="datatype"><a href="#dt_URI">URI</a></span>), codetype (<span class="datatype"><a href="#dt_ContentType">ContentType</a></span>), data (<span class="datatype"><a
href="#dt_URI">URI</a></span>), declare (&quot;declare&quot;), height (<span class="datatype"><a href="#dt_Length">Length</a></span>), name (<span class="datatype"><a href= 
"#dt_CDATA">CDATA</a></span>), standby (<span class="datatype"><a href="#dt_Text">Text</a></span>), tabindex (<span class="datatype"><a href=
"#dt_Number">Number</a></span>), type (<span class="datatype"><a href="#dt_ContentType">ContentType</a></span>), width (<span class="datatype"><a href= 
"#dt_Length">Length</a></span>)</td>
<td>(PCDATA | Flow | param)*</td>
</tr>

<tr>
<td>param</td>
<td>id (<span class="datatype"><a href="#dt_ID">ID</a></span>), name* (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), type (<span class="datatype"><a
href="#dt_ContentType">ContentType</a></span>), value (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), valuetype (&quot;data&quot;* | &quot;ref&quot; | &quot;object&quot;)</td>
<td>EMPTY</td>
</tr>
</tbody>
</table>

<p>When this module is used, it adds the <code>object</code> element to the Inline content set of the Text Module.</p>

<p>Implementation: <a href="#a_module_Object">DTD</a></p>

<h2><a name="s_framesmodule" id="s_framesmodule">5.11.</a> Frames Module</h2>

<p>As its name suggests, the Frames Module provides frame-related elements. Specifically, the Frames Module supports:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Frames Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>frameset</td>
<td><span class="collection"> <a href="#s_core_collection">Core</a></span> , cols ( <span class="datatype"> <a href="#dt_MultiLength"> MultiLength</a></span> ), rows ( <span class= 
"datatype"> <a href="#dt_MultiLength"> MultiLength</a></span> )</td>
<td>(frameset | frame)+, noframes?</td>
</tr>

<tr>
<td>frame</td>
<td><span class="collection"> <a href="#s_core_collection">Core</a></span> , frameborder (&quot;1&quot; | &quot;0&quot;), longdesc ( <span class="datatype"> <a href="#dt_URI">URI</a></span> ), marginheight ( <span class="datatype"> <a href="#dt_Pixels"> Pixels</a></span> ), marginwidth ( <span class="datatype"> <a href="#dt_Pixels">Pixels</a></span> ), noresize (&quot;noresize&quot;), scrolling (&quot;yes&quot; | &quot;no&quot; | &quot;auto&quot;*), src ( <span class="datatype"> <a href="#dt_URI">URI</a></span> )</td>
<td>EMPTY</td>
</tr>

<tr>
<td>noframes</td>
<td><span class="collection"> <a href="#s_common_collection">Common</a></span></td>
<td>body</td>
</tr>
</tbody>
</table>

<p>When this module is selected, the minimal content model of the <code>html</code> element of the structure module is changed to <code>(head, frameset)</code>.</p>

<p>Implementation: <a href="#a_module_Frames">DTD</a></p>

<h2><a name="s_targetmodule" id="s_targetmodule">5.12.</a> Target Module</h2>

<p>The content of a frame can specify destination targets for a selection. This module adds the <code>target</code> element to the area and link defining elements. This is defined as a separate module so it can be included in documents that will be included in frames and documents that use the <code>target</code> feature to open a new window.</p>

<table class="moduledef" border="1" summary="Target Attributes for Frames">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Notes</th>
</tr>
</thead>

<tbody>
<tr>
<td>a&amp;</td>
<td>target ( <span class="datatype"> <a href="#dt_FrameTarget">CDATA</a></span> )</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>area&amp;</td>
<td>target ( <span class="datatype"> <a href="#dt_FrameTarget">CDATA</a></span> )</td>
<td>When the Client-side Image Map module is selected.</td>
</tr>

<tr>
<td>base&amp;</td>
<td>target ( <span class="datatype"> <a href="#dt_FrameTarget">CDATA</a></span> )</td>
<td>When the Legacy module is selected.</td>
</tr>

<tr>
<td>link&amp;</td>
<td>target ( <span class="datatype"> <a href="#dt_FrameTarget">CDATA</a></span> )</td>
<td>When the Link Module is selected.</td>
</tr>

<tr>
<td>form&amp;</td>
<td>target ( <span class="datatype"> <a href="#dt_FrameTarget">CDATA</a></span> )</td>
<td>When the Basic Forms or Forms module is selected.</td>
</tr>
</tbody>
</table>

<p>Implementation: <a href="#a_module_Target">DTD</a></p>

<h2><a name="s_iframemodule" id="s_iframemodule">5.13.</a> Iframe Module</h2>

<p>The Iframe Module defines an element for the definition of inline frames. The element and attribute included in this module are:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Iframe Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>iframe</td>
<td><span class="collection"><a href="#s_core_collection">Core</a></span>, frameborder (&quot;1&quot; | &quot;0&quot;), height (<span class="datatype"><a href="#dt_Length">Length</a></span>), longdesc (<span class="datatype"><a href="#dt_URI">URI</a></span>), marginheight (<span class="datatype"><a href="#dt_Pixels">Pixels</a></span>), marginwidth (<span class= 
"datatype"><a href="#dt_Pixels">Pixels</a></span>), scrolling (&quot;yes&quot; | &quot;no&quot; | &quot;auto&quot;*), src (<span class="datatype"><a href="#dt_URI">URI</a></span>), width (<span
class="datatype"><a href="#dt_Length">Length</a></span>)</td>
<td>(PCDATA | Flow)*</td>
</tr>
</tbody>
</table>

<p>When this module is used, the <code>iframe</code> element is added to the Inline content set as defined by the Text Module.</p>

<p>Implementation: <a href="#a_module_Iframe">DTD</a></p>

<h2><a name="s_intrinsiceventsmodule" id="s_intrinsiceventsmodule">5.14.</a> Intrinsic Events Module</h2>

<p>Intrinsic events are attributes that are used in conjunction with elements that can have specific actions occur when certain events are performed by the user. The attributes indicated in the following table are added to the attribute set for their respective elements <em>only</em> when the modules defining those elements are selected. Note also that selection of this module defines the attribute collection <a href="#s_events_collection">Events</a> as described above. Attributes defined by this module are:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Intrinsic Events Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Notes</th>
</tr>
</thead>

<tbody>
<tr>
<td>a&amp;</td>
<td>onblur (<span class="datatype"><a href="#dt_Script">Script</a></span>), onfocus (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>area&amp;</td>
<td>onblur (<span class="datatype"><a href="#dt_Script">Script</a></span>), onfocus (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>When the Client-side Image Map module is also used</td>
</tr>

<tr>
<td>frameset&amp;</td>
<td>onload (<span class="datatype"><a href="#dt_Script">Script</a></span>), onunload (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>When the Frames Module is also used.</td>
</tr>

<tr>
<td>form&amp;</td>
<td>onreset (<span class="datatype"><a href="#dt_Script">Script</a></span>), onsubmit (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>When the Basic Forms or Forms module is used</td>
</tr>

<tr>
<td>body&amp;</td>
<td>onload (<span class="datatype"><a href="#dt_Script">Script</a></span>), onunload (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>label&amp;</td>
<td>onblur (<span class="datatype"><a href="#dt_Script">Script</a></span>), onfocus (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>When the Forms module is used</td>
</tr>

<tr>
<td>input&amp;</td>
<td>onblur (<span class="datatype"><a href="#dt_Script">Script</a></span>), onchange (<span class="datatype"><a href="#dt_Script">Script</a></span>), onfocus (<span
class="datatype"><a href="#dt_Script">Script</a></span>), onselect (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>When the Basic Forms or Forms module is used</td>
</tr>

<tr>
<td>select&amp;</td>
<td>onblur (<span class="datatype"><a href="#dt_Script">Script</a></span>), onchange (<span class="datatype"><a href="#dt_Script">Script</a></span>), onfocus (<span
class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>When the Basic Forms or Forms module is used</td>
</tr>

<tr>
<td>textarea&amp;</td>
<td>onblur (<span class="datatype"><a href="#dt_Script">Script</a></span>), onchange (<span class="datatype"><a href="#dt_Script">Script</a></span>), onfocus (<span
class="datatype"><a href="#dt_Script">Script</a></span>), onselect (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>When the Basic Forms or Forms module is used</td>
</tr>

<tr>
<td>button&amp;</td>
<td>onblur (<span class="datatype"><a href="#dt_Script">Script</a></span>), onfocus (<span class="datatype"><a href="#dt_Script">Script</a></span>)</td>
<td>When the Forms module is used</td>
</tr>
</tbody>
</table>

<p>Implementation: <a href="#a_module_Intrinsic_Events">DTD</a></p>

<h2><a name="s_metamodule" id="s_metamodule">5.15.</a> Metainformation Module</h2>

<p>The Metainformation Module defines an element that describes information within the declarative portion of a document (in XHTML within the head element). This module includes the following element:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Metainformation Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>meta</td>
<td><span class="collection"><a href="#s_i18n_collection">I18N</a></span>, content* (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), http-equiv (<span class=
"datatype"><a href="#dt_NMTOKEN">NMTOKEN</a></span>), name (<span class="datatype"><a href="#dt_NMTOKEN">NMTOKEN</a></span>), scheme (<span class="datatype"><a href= 
"#dt_CDATA">CDATA</a></span>)</td>
<td>EMPTY</td>
</tr>
</tbody>
</table>

<p>When this module is selected, the <code>meta</code> element is added to the content model of the <code>head</code> element as defined in the Structure Module.</p>

<p>Implementation: <a href="#a_module_Metainformation">DTD</a></p>

<h2><a name="s_scriptmodule" id="s_scriptmodule">5.16.</a> Scripting Module</h2>

<p>The Scripting Module defines elements that are used to contain information pertaining to executable scripts or the lack of support for executable scripts. Elements and attributes included in this module are:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Scripting Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>noscript</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(Heading | List | Block)+</td>
</tr>

<tr>
<td>script</td>
<td>charset (<span class="datatype"><a href="#dt_Charset">Charset</a></span>), defer (&quot;defer&quot;), src (<span class="datatype"><a href="#dt_URI">URI</a></span>), type* (<span class="datatype"><a href="#dt_ContentType">ContentType</a></span>), xml:space=&quot;preserve&quot;</td>
<td>PCDATA</td>
</tr>
</tbody>
</table>

<p>When this module is used, the <code>script</code> and <code>noscript</code> elements are added to the Block and Inline content sets of the Text Module. In addition, the <code>script</code> element is added to the content model of the <code>head</code> element defined in the Structure Module.</p>

<p>Implementation: <a href="#a_module_Scripting">DTD</a></p>

<h2><a name="s_stylemodule" id="s_stylemodule">5.17.</a> Style Sheet Module</h2>

<p>The Style Sheet Module defines an element to be used when declaring internal style sheets. The element and attributes defined by this module are:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Style Sheet Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>style</td>
<td><span class="collection"><a href="#s_i18n_collection">I18N</a></span>, media (<span class="datatype"><a href="#dt_MediaDesc">MediaDesc</a></span>), title (<span class=
"datatype"><a href="#dt_Text">Text</a></span>), type* (<span class="datatype"><a href="#dt_ContentType">ContentType</a></span>), xml:space=&quot;preserve&quot;</td>
<td>PCDATA</td>
</tr>
</tbody>
</table>

<p>When this module is used, it adds the <code>style</code> element to the content model of the <code>head</code> element of the Structure Module.</p>

<p>Implementation: <a href="#a_module_Stylesheet">DTD</a></p>

<h2><a name="s_styleattributemodule" id="s_styleattributemodule">5.18.</a> Style Attribute Module</h2>

<p>The Style Attribute Module defines the <code>style</code> attribute. When this module is selected, it activates the <a href="#s_style_collection">Style Attribute Collection</a>.</p>

<p>Implementation: <a href="#a_module_Style_Attribute">DTD</a></p>

<h2><a name="s_linkmodule" id="s_linkmodule">5.19.</a> Link Module</h2>

<p>The Link Module defines an element that can be used to define links to external resources. These resources are often used to augment the user agent's ability to process the associated XHTML document. The element and attributes included in this module are:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Link Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>link</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, charset (<span class="datatype"><a href="#dt_Charset">Charset</a></span>), href (<span class=
"datatype"><a href="#dt_URI">URI</a></span>), hreflang (<span class="datatype"><a href="#dt_LanguageCode">LanguageCode</a></span>), media (<span class="datatype"><a
href="#dt_MediaDesc">MediaDesc</a></span>), rel (<span class="datatype"><a href="#dt_LinkTypes">LinkTypes</a></span>), rev (<span class="datatype"><a href= 
"#dt_LinkTypes">LinkTypes</a></span>), type (<span class="datatype"><a href="#dt_ContentType">ContentType</a></span>)</td>
<td>EMPTY</td>
</tr>
</tbody>
</table>

<p>When this module is used, it adds the <code>link</code> element to the content model of the <code>head</code> element as defined in the Structure Module.</p>

<p>Implementation: <a href="#a_module_Link">DTD</a></p>

<h2><a name="s_basemodule" id="s_basemodule">5.20.</a> Base Module</h2>

<p>The Base Module defines an element that can be used to define a base URI against which relative URIs in the document will be resolved. The element and attribute included in this module are:</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Base Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>base</td>
<td>href* (<span class="datatype"><a href="#dt_URI">URI</a></span>)</td>
<td>EMPTY</td>
</tr>
</tbody>
</table>

<p>When this module is used, it adds the <code>base</code> element to the content model of the <code>head</code> element of the Structure Module.</p>

<p>Implementation: <a href="#a_module_Base">DTD</a></p>

<h2><a name="s_nameidentmodule" id="s_nameidentmodule">5.21.</a> Name Identification Module</h2>

<p><em>This module is deprecated.</em></p>

<p>The Name Identification module defines the attribute <code>name</code> for a collection of elements. The <code>name</code> attribute was used historically to identify certain elements within HTML documents. While the <code>name</code> attribute has been supplanted by the <code>id</code> attribute in all of these elements, there may be instances where markup languages will wish to support both. Such markup languages may do so by including this module.</p>

<p>Note that by including this module, both the <code>name</code> and <code>id</code> attributes are defined for the elements indicated. In this situation, if the <code>name</code> attribute is defined for an element, the <code>id</code> attribute must also be defined. Further, these attributes must both have the same value. Finally, when documents that use this attribute are served as Internet Media Type &quot;text/xml&quot; or &quot;application/xml&quot;, the value of the <code>name</code> attribute on these elements shall not be used as a fragment identifier.</p>

<table class="moduledef" border="1" summary="Attributes defined by Name Identification Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Notes</th>
</tr>
</thead>

<tbody>
<tr>
<td>a&amp;</td>
<td>name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>applet&amp;</td>
<td>name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>When the Applet module is selected.</td>
</tr>

<tr>
<td>form&amp;</td>
<td>name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>When the Forms or Basic Forms module is selected.&nbsp;</td>
</tr>

<tr>
<td>frame&amp;</td>
<td>name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>When the Frames module is selected.&nbsp;</td>
</tr>

<tr>
<td>iframe&amp;</td>
<td>name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>When the Iframe module is selected.&nbsp;</td>
</tr>

<tr>
<td>img&amp;</td>
<td>name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>When the Image Module is selected.&nbsp;</td>
</tr>

<tr>
<td>map&amp;</td>
<td>name (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>When the Client-side Image Map module is selected.</td>
</tr>
</tbody>
</table>

<p>Implementation: <a href="#a_module_Name_Identification">DTD</a></p>

<h2><a name="s_legacymodule" id="s_legacymodule">5.22.</a> Legacy Module</h2>

<p>The Legacy Module defines elements and attributes that were already deprecated in previous versions of HTML and XHTML, and remain deprecated in XHTML Modularization. Markup language authors should no longer use these elements and attributes.</p>

<p>The following table defines the elements and attributes that are defined when the Legacy module is selected.</p>

<table class="moduledef" border="1" summary="Elements and Attributes for Legacy Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Minimal Content Model</th>
</tr>
</thead>

<tbody>
<tr>
<td>basefont</td>
<td>color (<span class="datatype"><a href="#dt_Color">Color</a></span>), face (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), id (<span class=
"datatype"><a href="#dt_ID">ID</a></span>), size (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>EMPTY</td>
</tr>

<tr>
<td>center</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Flow)*</td>
</tr>

<tr>
<td>dir</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, compact (&quot;compact&quot;)</td>
<td>(li)+</td>
</tr>

<tr>
<td>font</td>
<td><span class="collection"><a href="#s_core_collection">Core</a></span>, <span class="collection"><a href="#s_i18n_collection">I18N</a></span>, color (<span class="datatype"><a href= 
"#dt_Color">Color</a></span>), face (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), size (<span class="datatype"><a href=
"#dt_CDATA">CDATA</a></span>)</td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>isindex</td>
<td><span class="collection"><a href="#s_core_collection">Core</a></span>, <span class="collection"><a href="#s_i18n_collection">I18N</a></span>, prompt (<span class="datatype"><a href= 
"#dt_Text">Text</a></span>)</td>
<td>EMPTY</td>
</tr>

<tr>
<td>menu</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span>, compact (&quot;compact&quot;)</td>
<td>(li)+</td>
</tr>

<tr>
<td>s</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>strike</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>

<tr>
<td>u</td>
<td><span class="collection"><a href="#s_common_collection">Common</a></span></td>
<td>(PCDATA | Inline)*</td>
</tr>
</tbody>
</table>

<p>The following table shows additional attributes for elements defined elsewhere when the Legacy module is selected.</p>

<table class="moduledef" border="1" summary="Additional Attributes for Legacy Module">
<thead>
<tr>
<th>Elements</th>
<th>Attributes</th>
<th>Notes</th>
</tr>
</thead>

<tbody>
<tr>
<td>body&amp;</td>
<td>alink (<span class="datatype"><a href="#dt_Color">Color</a></span>), background (<span class="datatype"><a href="#dt_URI">URI</a></span>), bgcolor (<span class= 
"datatype"><a href="#dt_Color">Color</a></span>), link (<span class="datatype"><a href="#dt_Color">Color</a></span>), text (<span class="datatype"><a href= 
"#dt_Color">Color</a></span>), vlink (<span class="datatype"><a href="#dt_Color">Color</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>br&amp;</td>
<td>clear (&quot;left&quot; | &quot;all&quot; | &quot;right&quot; | &quot;none&quot;*)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>caption&amp;</td>
<td>align (&quot;top&quot; | &quot;bottom&quot; | &quot;left&quot; | &quot;right&quot;)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>div&amp;</td>
<td>align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>dl&amp;</td>
<td>compact (&quot;compact&quot;), type (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>h1-h6&amp;</td>
<td>align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>hr&amp;</td>
<td>align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;), noshade (&quot;noshade&quot;), size (<span class="datatype"><a href="#dt_Pixels">Pixels</a></span>), width (<span class="datatype"><a href= 
"#dt_Length">Length</a></span>),</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>img&amp;</td>
<td>align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;), border (<span class="datatype"><a href="#dt_Pixels">Pixels</a></span>), hspace (<span class="datatype"><a href= 
"#dt_Pixels">Pixels</a></span>), vspace (<span class="datatype"><a href="#dt_Pixels">Pixels</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>input&amp;</td>
<td>align (&quot;top&quot; | &quot;middle&quot; | &quot;bottom&quot; | &quot;left&quot; | &quot;right&quot;)</td>
<td>When the Basic Forms or Forms module is selected.</td>
</tr>

<tr>
<td>legend&amp;</td>
<td>align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot; | &quot;justify&quot;)</td>
<td>When the Forms module is selected.</td>
</tr>

<tr>
<td>li&amp;</td>
<td>type (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>), value (<span class="datatype"><a href="#dt_Number">Number</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>ol&amp;</td>
<td>compact (&quot;compact&quot;), start (<span class="datatype"><a href="#dt_Number">Number</a></span>), type (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>p&amp;</td>
<td>align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot;, &quot;justify&quot;)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>pre&amp;</td>
<td>width (<span class="datatype"><a href="#dt_Number">Number</a></span>)</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>script&amp;</td>
<td>language (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>When the Scripting module is selected.</td>
</tr>

<tr>
<td>table&amp;</td>
<td>align (&quot;left&quot; | &quot;center&quot; | &quot;right&quot;), bgcolor (<span class="datatype"><a href="#dt_Color">Color</a></span>)</td>
<td>When the Tables module is selected.</td>
</tr>

<tr>
<td>tr&amp;</td>
<td>bgcolor (<span class="datatype"><a href="#dt_Color">Color</a></span>)</td>
<td>When the Tables module is selected.</td>
</tr>

<tr>
<td>th&amp;</td>
<td>bgcolor (<span class="datatype"><a href="#dt_Color">Color</a></span>), height (<span class="datatype"><a href="#dt_Pixels">Pixels</a></span>) nowrap (&quot;nowrap&quot;), width (<span class="datatype"><a href="#dt_Length">Length</a></span>)</td>
<td>When the Tables module is selected.</td>
</tr>

<tr>
<td>td&amp;</td>
<td>bgcolor (<span class="datatype"><a href="#dt_Color">Color</a></span>), height (<span class="datatype"><a href="#dt_Length">Length</a></span>) nowrap (&quot;nowrap&quot;), width (<span class="datatype"><a href="#dt_Pixels">Pixels</a></span>)</td>
<td>When the Tables module is selected.</td>
</tr>

<tr>
<td>ul&amp;</td>
<td>compact (&quot;compact&quot;), type (<span class="datatype"><a href="#dt_CDATA">CDATA</a></span>)</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>

<p>Implementation: <a href="#a_module_Legacy">DTD</a></p>

<!--OddPage-->
<h1><a name="a_schema_module_rules" id="a_schema_module_rules">A.</a> Building Schema Modules</h1>

<p>This appendix is <em>normative</em>.</p>

<p>This appendix will contain instructions on how to define XML Schema modules that are compatible with the XHTML Modularization implementation via XML Schema <a href="#ref_xmlschema">[XMLSCHEMA]</a> when the XML Schema becomes a W3C approved recommendation.</p>

<!--OddPage-->
<h1><a name="a_schema_developing" id="a_schema_developing">B.</a> Developing Schema with defined and extended modules</h1>

<p>This appendix is <em>normative</em>.</p>

<p>This appendix will contain instructions on how to define entire markup languages using XHTML modules via XML Schema <a href="#ref_xmlschema">[XMLSCHEMA]</a> when the XML Schema becomes a W3C approved recommendation.</p>

<!--OddPage-->
<h1><a name="a_schema_module_defs" id="a_schema_module_defs">C.</a> XHTML Schema Module Implementations</h1>

<p>This appendix is <em>normative</em>.</p>

<p>This appendix will contain implementations of the modules defined in <a href="#s_xhtmlmodules">XHTML Abstract Modules</a> via XML Schema <a href=
"#ref_xmlschema">[XMLSCHEMA]</a> when the XML Schema becomes a W3C approved recommendation.</p>

<!--OddPage-->
<h1><a name="s_dtd_module_rules" id="s_dtd_module_rules">D.</a> Building DTD Modules</h1>

<p>This section is <em>normative.</em></p>

<p>XHTML modules are implemented as DTD fragments. When these fragments are assembled in a specific manner (described in <a href="#s_developingdtds">Developing DTDs with defined and extended modules</a>), the resulting DTD is a representation of a complete document type. This representation can then be used for validation of instances of the document type.</p>

<p>The key to combining these fragments into a meaningful DTD is the rules used to define the fragments. This section defines those rules. When these rules are followed, DTD authors can be confident that their modules will interface cleanly with other XHTML-compatible modules.</p>

<p>Modules conforming to these rules also need to satisfy the conformance requirements defined in <a href="#s_conform_module">XHTML Family Module Conformance</a> in order to be called <em>XHTML Family Modules</em>.</p>

<h2><a name="s_dtdrules_PEs" id="s_dtdrules_PEs">D.1.</a> Parameter Entity Naming</h2>

<p>This specification classifies parameter entities into seven categories and names them consistently using the following suffixes:</p>

<dl class="codelist">
<dt><span class="dfn">.mod</span></dt>

<dd>parameter entities use the suffix <code>.mod</code> when they are used to represent a DTD module (a collection of elements, attributes, parameter entities, etc). In this specification, each module is an atomic unit and may be represented as a separate file entity.</dd>

<dt><span class="dfn">.module</span></dt>

<dd>parameter entities use the suffix <code>.module</code> when they are used to control the inclusion of a DTD module by containing either of the conditional section keywords <tt>INCLUDE</tt> or <tt>IGNORE</tt>.</dd>

<dt><span class="dfn">.qname</span></dt>

<dd>parameter entities use the suffix <code>.qname</code> when they are used to represent the qualified name of an element. See <a href="#s_module_namespace">Defining the Namespace of a Module</a> for more information on qualified names.</dd>

<dt><span class="dfn">.content</span></dt>

<dd>parameter entities use the suffix <code>.content</code> when they are used to represent the content model of an element type.</dd>

<dt><span class="dfn">.class</span></dt>

<dd>parameter entities use the suffix <code>.class</code> when they are used to represent elements of the same class.</dd>

<dt><span class="dfn">.mix</span></dt>

<dd>parameter entities use the suffix <code>.mix</code> when they are used to represent a collection of element types from different classes.</dd>

<dt><span class="dfn">.attrib</span></dt>

<dd>parameter entities use the suffix <code>.attrib</code> when they are used to represent a group of tokens representing one or more complete attribute specifications within an ATTLIST declaration.</dd>
</dl>

<p>For example, in HTML 4, the <tt>%block;</tt> parameter entity is defined to represent the heterogeneous collection of element types that are block-level elements. In this specification, the corollary parameter entity is <tt>%Block.mix;</tt>.</p>

<p>When defining parameter entities in the classes defined here, modules should scope the names of the entities by using unique prefixes. For example, the content model for the element <code>myelement</code> in the module mymodule could be named <code>MYMODULE.myelement.content</code>. Other schemes are possible. Regardless of the scheme used, module authors should strive to ensure that parameter entities they define are named uniquely so that they do not collide with other parameter entities and so that the interface methods for the module are obvious to its users.</p>

<h2><a name="s_module_namespace" id="s_module_namespace">D.2.</a> Defining the Namespace of a Module</h2>

<p>XHTML requires that the elements and attributes declared in a module be within a defined XML namespace <a href="#ref_xmlns">[XMLNAMES]</a>. The identification of this namespace is an arbitrary URI. XHTML requires that when a module is implemented using an XML DTD, the module declares the namespace in a special manner. The purpose of this is to permit the selection, at document parse/validation time, of the use of namespace prefixes and of the <em>prefix</em> that is used to identify elements and attributes from the module.</p>

<p>Content developers who wish to develop documents based upon hybrid document types may choose to use XML namespace prefixes on elements from the XHTML namespace, on elements from other namespaces, or on both. In order to ensure that such documents are XHTML conforming and backward compatible with non-namespace aware tools, the W3C recommends that content developers <em>do not</em> use XML namespace prefixes on elements from the XHTML namespace. When content developers are interested in having their content processed by namespace-aware processors, the W3C further recommends that elements in non-XHTML namespaces be specified using an XML namespace prefix rather than relying upon XML namespace defaulting mechanisms.</p>

<p>Each XHTML-conforming module implemented as an XML DTD is required to define a default XML namespace prefix, a method for changing this prefix within a document instance, and a marked section that turns on the processing of the prefix.</p>

<p><em>Note that it is legal and expected for multiple modules to be part of the same namespace when they are related. All of the XHTML modules, for example, are part of the same namespace.</em></p>

<h3><a name="qnames" id="qnames">D.2.1.</a> Qualified Names sub-module</h3>

<p>First, you need to define a qualified names sub-module (a sub-module is just a <em>file entity</em> that is separated so that it can be incorporated into the ultimate DTD at the appropriate point). The qualified names sub-module is built using the following steps (where the string MODULE is replaced with an appropriate string for the new module):</p>

<ol>
<li>Define a parameter entity MODULE.prefixed that announces whether the elements in the module are being used with XML namespace prefixed names or not. This parameter entity's default value should be &quot;%NS.prefixed;&quot;. The NS.prefixed parameter entity is defined by the XHTML framework to be IGNORE by default, and can be used in a document instance to switch on prefixing for all included namespaces (including that of the XHTML modules).</li>

<li>Define a parameter entity MODULE.xmlns that contains the namespace identifier for this module.</li>

<li>Define a parameter entity MODULE.prefix that contains the default prefix string to use when prefixing is enabled.</li>

<li>Define a parameter entity MODULE.pfx that is &quot;%MODULE.prefix;:&quot; when prefixing is enabled, and &quot;&quot; when it is not.</li>

<li>Define a parameter entity MODULE.xmlns.extra.attrib that contains the declaration of any XML namespace attributes for namespaces referenced by this module (e.g., xmlns:xlink). When %MODULE.prefixed is set to INCLUDE, this attribute should include the xmlns:%MODULE.prefix; declaration as well.</li>

<li>Define a parameter entity XHTML.xmlns.extra.attrib as MODULE.xmlns.extra.attrib. This is usually overridden by the document type's driver file, but if not this definition will take over as the default.</li>

<li>For each of the elements defined by the module, create a parameter entity of the form &quot;MODULE.NAME.qname&quot; to hold its qualified name. The value for this parameter entity must be &quot;%MODULE.pfx;NAME&quot;. In this way, the parsed value will be &quot;PREFIX:NAME&quot; when prefixes are enabled, and &quot;NAME&quot; otherwise. 

<p>If the module adds attributes to elements defined in modules that do not share the namespace of this module, declare those attributes so that they use the %MODULE.pfx prefix. For example:</p>

<pre class="example">
&lt;ENTITY % MODULE.img.myattr.qname &quot;%MODULE.pfx;myattr&quot; &gt;
</pre>
</li>
</ol>

<p>An example of a qname sub-module for a hypothetical Inventory Module is included below:</p>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- Inventory Qname Module ................................................... --&gt;
&lt;!-- file: inventory-qname-1.mod

     PUBLIC &quot;-//MY COMPANY//ELEMENTS XHTML Inventory Qnames 1.0//EN&quot;
     SYSTEM &quot;http://www.my.org/DTDs/inventory-qname-1.mod&quot;

     xmlns:inventory=&quot;http://www.my.org/xmlns/inventory&quot;
     ...................................................................... --&gt;

&lt;!-- Declare the default value for prefixing of this module's elements --&gt;
&lt;!-- Note that the NS.prefixed will get overridden by the XHTML Framework or
     by a document instance. --&gt;
&lt;!ENTITY <span class="entity">% NS.prefixed</span> &quot;IGNORE&quot; &gt;
&lt;!ENTITY <span class="entity">% Inventory.prefixed</span> &quot;%NS.prefixed;&quot; &gt;

&lt;!-- Declare the actual namespace of this module --&gt;
&lt;!ENTITY <span class="entity">% Inventory.xmlns</span> &quot;http://www.my.org/xmlns/inventory&quot; &gt;

&lt;!-- Declare the default prefix for this module --&gt;
&lt;!ENTITY <span class="entity">% Inventory.prefix</span> &quot;inventory&quot; &gt;

&lt;!-- Declare the prefix for this module --&gt;
&lt;![%Inventory.prefixed;[
&lt;!ENTITY <span class="entity">% Inventory.pfx</span> &quot;%Inventory.prefix;:&quot; &gt;
]]&gt;
&lt;!ENTITY <span class="entity">% Inventory.pfx</span> &quot;&quot; &gt;

&lt;!-- Declare the xml namespace attribute for this module --&gt;
&lt;![%Inventory.prefixed;[
&lt;!ENTITY <span class="entity">% Inventory.xmlns.extra.attrib</span>
    &quot;xmlns:%Inventory.prefix;   %URI.datatype;  #FIXED  '%Inventory.xmlns;'&quot; &gt;
]]&gt;
&lt;!ENTITY <span class="entity">% Inventory.xmlns.extra.attrib</span> &quot;&quot; &gt;

&lt;!-- Declare the extra namespace that should be included in the XHTML
     elements --&gt;
&lt;!ENTITY <span class="entity">% XHTML.xmlns.extra.attrib</span>
    %Inventory.xmlns.extra.attrib; &gt;

&lt;!-- Now declare the qualified names for all of the elements in the
     module --&gt;
&lt;!ENTITY <span class="entity">% Inventory.shelf.qname</span> &quot;%Inventory.pfx;shelf&quot; &gt;
&lt;!ENTITY <span class="entity">% Inventory.item.qname</span> &quot;%Inventory.pfx;item&quot; &gt;
&lt;!ENTITY <span class="entity">% Inventory.desc.qname</span> &quot;%Inventory.pfx;desc&quot; &gt;
&lt;!ENTITY <span class="entity">% Inventory.sku.qname</span> &quot;%Inventory.pfx;sku&quot; &gt;
&lt;!ENTITY <span class="entity">% Inventory.price.qname</span> &quot;%Inventory.pfx;price&quot; &gt;

</pre>

<h3><a name="declaration" id="declaration">D.2.2.</a> Declaration sub-module(s)</h3>

<p>Next, you need to define one or more &quot;declaration sub-modules&quot;. The purpose of these <em>file entities</em> is to declare the XML DTD elements and attribute lists. An XHTML declaration module should be constructed using the following process:</p>

<ol>
<li>Define a parameter entity to use within the ATTLIST of each declared element. This parameter entity should contain %NS.decl.attrib; when %MODULE.prefixed; is set to INCLUDE, and %NS.decl.attrib; plus &quot;xmlns %URI.datatype; #FIXED '%MODULE.xmlns;'&quot; when %MODULE.prefixed; is set to IGNORE.</li>

<li>Declare all of the elements and attributes for the module. Within each ATTLIST for an element, include the parameter entity defined above so that all of the required xmlns attributes are available on each element in the module.</li>

<li>
<p>If the module adds attributes to elements defined in modules that do not share the namespace of this module, declare those attributes so that they use the %MODULE.pfx prefix. For example:</p>

<pre class="example">
&lt;ENTITY % MODULE.img.myattr.qname &quot;%MODULE.pfx;myattr&quot; &gt;
&lt;!ATTLIST %img.qname;
      %MODULE.img.myattr.qname;    CDATA          #IMPLIED
&gt;
</pre>

<p>This would add an attribute to the <code>img</code> element of the Image Module, but the attribute's name will be the qualified name, including prefix, when prefixes are selected for a document instance. It also adds the xmlns:MODULE_PREFIX attribute to the img element's attribute list so that an XML Namespace-aware parser would know how to resolve the namespace based upon its prefix.</p>
</li>
</ol>

<p>The following example shows a declaration sub-module for a hypothetical Inventory module.</p>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- Inventory Elements Module ................................................... --&gt;
&lt;!-- file: inventory-1.mod

     PUBLIC &quot;-//MY COMPANY//ELEMENTS XHTML Inventory Elements 1.0//EN&quot;
     SYSTEM &quot;http://www.my.org/DTDs/inventory-1.mod&quot;

     xmlns:inventory=&quot;http://www.my.org/xmlns/inventory&quot;
     ...................................................................... --&gt;

&lt;!-- Inventory Module

     shelf
        item
       sku
       desc
       price

     This module defines a simple inventory item structure
--&gt;

&lt;!-- Define the global namespace attributes --&gt;
&lt;![%Inventory.prefixed;[
&lt;!ENTITY <span class="entity">% Inventory.xmlns.attrib</span>
    &quot;%NS.decl.attrib;&quot;
&gt;
]]&gt;
&lt;!ENTITY <span class="entity">% Inventory.xmlns.attrib</span>
     &quot;xmlns %URI.datatype;  #FIXED '%Inventory.xmlns;'&quot;
&gt;

&lt;!-- Define a common set of attributes for all module elements --&gt;
&lt;!ENTITY <span class="entity">% Inventory.Common.attrib</span>
         &quot;%Inventory.xmlns.attrib;
      id               ID                   #IMPLIED
&gt;

&lt;!-- Define the elements and attributes of the module --&gt;
&lt;!ELEMENT <span class="element">%Inventory.shelf.qname;
</span>     ( %Inventory.item.qname; )* &gt;
&lt;!ATTLIST %Inventory.shelf.qname;
     location   CDATA   #IMPLIED
     %Inventory.Common.attrib;
&gt;
&lt;!ELEMENT <span class="element">%Inventory.item.qname;
</span>     ( %Inventory.desc.qname;, %Inventory.sku.qname;, %Inventory.price.qname;) &gt;
&lt;!ATTLIST %Inventory.item.qname;
     location   CDATA   #IMPLIED
     %Inventory.Common.attrib;
&gt;

&lt;!ELEMENT <span class="element">%Inventory.desc.qname;</span> ( #PCDATA ) &gt;
&lt;!ATTLIST %Inventory.desc.qname;
     %Inventory.Common.attrib;
&gt;

&lt;!ELEMENT <span class="element">%Inventory.sku.qname;</span> ( #PCDATA ) &gt;
&lt;!ATTLIST %Inventory.sku.qname;
     %Inventory.Common.attrib;
&gt;

&lt;!ELEMENT <span class="element">%Inventory.price.qname;</span> ( #PCDATA ) &gt;
&lt;!ATTLIST %Inventory.price.qname;
     %Inventory.Common.attrib;
&gt;

&lt;!-- end of inventory-1.mod --&gt;

</pre>

<h3><a name="stand_alone" id="stand_alone">D.2.3.</a> Using the module as a stand-alone DTD</h3>

<p>It is sometimes desirable to have an XHTML module also usable as a stand alone DTD. A good example of this is our Inventory module above. These items need to be embeddable in an XHTML document, and also need to be available as free-standing documents extracted from a database (for example). The easiest way to accomplish this is to define a DTD file that instantiates the components of your module. Such a DTD would have this structure:</p>

<ol>
<li>Include the XHTML Datatypes Module (your qnames module likely uses some of these datatypes - it certainly uses the URI datatype for the xmlns attribute).</li>

<li>Include the Qnames Module for your module.</li>

<li>Define the parameter entity NS.decl.attrib to be %MODULE.xmlns.extra.attrib;.</li>

<li>Include the Declaration Module(s) for your module.</li>
</ol>

<p>An example of this for our Inventory module is included below:</p>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- Inventory Elements DTD ............................................... --&gt;
&lt;!-- file: inventory-1.dtd

     PUBLIC &quot;-//MY COMPANY//DTD XHTML Inventory 1.0//EN&quot;
     SYSTEM &quot;http://www.my.org/DTDs/inventory-1.dtd&quot;

     xmlns:inventory=&quot;http://www.my.org/xmlns/inventory&quot;
     ...................................................................... --&gt;

&lt;!-- Inventory Module

     shelf
        item
       sku
       desc
       price

     This module defines a simple inventory item structure
--&gt;

&lt;!-- Bring in the datatypes --&gt;
&lt;!ENTITY <span class="entity">% xhtml-datatypes.mod</span>
         PUBLIC &quot;-//W3C//ENTITIES XHTML Datatypes 1.0//EN&quot;
         &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-datatypes-1.mod&quot; &gt;
%xhtml-datatypes.mod;

&lt;!-- Bring in the qualified names --&gt;
&lt;!ENTITY <span class="entity">% Inventory-qname.mod</span> SYSTEM &quot;inventory-qname-1.mod&quot; &gt;
%Inventory-qname.mod;

&lt;!ENTITY <span class="entity">% NS.decl.attrib</span> &quot;%Inventory.xmlns.extra.attrib;&quot;&gt;

&lt;!ENTITY <span class="entity">% Inventory.mod</span> SYSTEM &quot;inventory-1.mod&quot; &gt;
%Inventory.mod;

&lt;!-- end of inventory-1.dtd --&gt;

</pre>

<p>This DTD can then be referenced by documents that use only the elements from your module:</p>

<pre class="dtd">
&lt;!DOCTYPE shelf SYSTEM &quot;inventory-1.dtd&quot;&gt;
&lt;shelf xmlns=&quot;http://www.my.org/xmlns/inventory&quot;&gt;
    &lt;item&gt;
        &lt;desc&gt;
      this is a description.
    &lt;/desc&gt;
        &lt;sku&gt;
      this is the price.
        &lt;/sku&gt;
        &lt;price&gt;
      this is the price.
    &lt;/price&gt;
    &lt;/item&gt;
&lt;/shelf&gt;

</pre>

<p>This method permits the definition of elements and attributes that are scoped within their own namespace. It also permits content developers to use the default prefix for the elements and attributes:</p>

<pre class="dtd">
&lt;!DOCTYPE inventory:shelf SYSTEM &quot;inventory-1.dtd&quot; [
    &lt;!ENTITY <span class="entity">% Inventory.prefixed</span> &quot;INCLUDE&quot;&gt;
]&gt;
&lt;inventory:shelf xmlns:inventory=&quot;http://www.my.org/xmlns/inventory&quot;&gt;
    &lt;inventory:item&gt;
        &lt;inventory:desc&gt;
          this is a description.
        &lt;/inventory:desc&gt;
        &lt;inventory:sku&gt;
          this is the sku.
        &lt;/inventory:sku&gt;
        &lt;inventory:price&gt;
          this is the price.
        &lt;/inventory:price&gt;
    &lt;/inventory:item&gt;
&lt;/inventory:shelf&gt;

</pre>

<p>Finally, a document instance can use a different XML namespace prefix by redeclaring it in the DOCTYPE header and its internal subset:</p>

<pre class="dtd">
&lt;!DOCTYPE i:shelf SYSTEM &quot;inventory-1.dtd&quot; [
    &lt;!ENTITY <span class="entity">% Inventory.prefixed</span> &quot;INCLUDE&quot;&gt;
    &lt;!ENTITY <span class="entity">% Inventory.prefix</span> &quot;i&quot;&gt;
]&gt;
&lt;i:shelf xmlns:i=&quot;http://www.my.org/xmlns/inventory&quot;&gt;
    &lt;i:item&gt;
        &lt;i:desc&gt;
          this is a description.
        &lt;/i:desc&gt;
        &lt;i:sku&gt;
          this is the price.
        &lt;/i:sku&gt;
        &lt;i:price&gt;
          this is the price.
        &lt;/i:price&gt;
    &lt;/i:item&gt;
&lt;/i:shelf&gt;

</pre>

<h3><a name="sec_D.2.4." id="sec_D.2.4.">D.2.4.</a> Namespace Idiosyncrasies</h3>

<p>While the approach defined here permits the definition of markup languages that are XML and XML namespaces conforming, some behaviors defined by the XML namespaces specification are not supported:</p>

<ol>
<li>
<p>XML namespaces permits the redeclaration of the xmlns attribute for a namespace at any point in the tree. It further permits this redeclaration to switch between namespace defaulting and prefixed usage, and permits the changing of the prefix. The method defined in this document does not permit this. Throughout a document instance a given namespace must continue to use the same namespace prefix (when prefixing is used), or must continue to be used in the default scope.</p>
</li>

<li>
<p>When using XML namespace defaulting, it is legal to rely upon the DTD of the document to inform parsers of the namespace of elements. However, since namespace aware processors are not required to include the DTD when evaluating a document, content developers should declare the XML namespace of an element whenever the namespace changes:</p>

<pre>
...
&lt;p&gt;
   &lt;myelement xmlns=&quot;...&quot; /&gt;
&lt;/p&gt;
</pre>
</li>
</ol>

<!--OddPage-->
<h1><a name="s_developingdtds" id="s_developingdtds">E.</a> Developing DTDs with defined and extended modules</h1>

<p>This section is <b>informative</b>.</p>

<p>The primary purpose of defining XHTML modules and a general modularization methodology is to ease the development of document types that are based upon XHTML. These document types may extend XHTML by integrating additional capabilities (e.g., <a href="#ref_smil">[SMIL]</a>), or they may define a subset of XHTML for use in a specialized device. This section describes the techniques that document type designers must use in order to take advantage of the XML DTD implementation of this modularization architecture. It does this by applying the XHTML Modularization techniques in progressively more complex ways, culminating in the creation of a complete document type from disparate modules.</p>

<p>Note that in no case do these examples require the modification of the XHTML-provided module <em>file entities</em> themselves. The XHTML module file entities are completely parameterized, so that it is possible through separate module definitions and <em>driver files</em> to customize the definition and the content model of each element and each element's hierarchy.</p>

<p>Finally, remember that most users of XHTML are <em>not</em> expected to be DTD authors. DTD authors are generally people who are defining specialized markup that will improve the readability, simplify the rendering of a document, or ease machine-processing of documents, or they are client designers that need to define the specialized DTD for their specific client. Consider these cases:</p>

<ul>
<li>
<p>An organization is providing subscriber's information via a Web interface. The organization stores its subscriber information in an XML-based database. One way to report that information out from the database to the Web is to embed the XML records from the database directly in the XHTML document. While it is possible to merely embed the records, the organization could define a DTD module that describes the records, attach that module to an XHTML DTD, and thereby create a complete DTD for the pages. The organization can then access the data within the new elements via the Document Object Model <a href="#ref_dom">[DOM]</a>, validate the documents, provide style definitions for the elements that cascade using Cascading Style Sheets <a href="#ref_css2">[CSS2]</a>, etc. By taking the time to define the structure of their data and create a DTD using the processes defined in this section, the organization can realize the full benefits of XML.</p>
</li>

<li>
<p>An Internet client developer is designing a specialized device. That device will only support a subset of XHTML, and the devices will always access the Internet via a proxy server that validates content before passing it on to the client (to minimize error handling on the client). In order to ensure that the content is valid, the developer creates a DTD that is a subset of XHTML using the processes defined in this section. They then use the new DTD in their proxy server and in their devices, and also make the DTD available to content developers so that developers can validate their content before making it available. By performing a few simple steps, the client developer can use the architecture defined in this document to greatly ease their DTD development cost <em>and</em> ensure that they are fully supporting the subset of XHTML that they choose to include.</p>
</li>
</ul>

<h2><a name="s_dev_attrs" id="s_dev_attrs">E.1.</a> Defining additional attributes</h2>

<p>In some cases, an extension to XHTML can be as simple as additional attributes. Attributes can be added to an element just by specifying an additional ATTLIST for the element, for example:</p>

<pre class="example">
&lt;!ATTLIST %a.qname;
      %MyModule.pfx;myattr   CDATA        #IMPLIED
      %MyModule.xmlns.extras.attrib;
&gt;
</pre>

<p>would add the &quot;myattr&quot; attribute, with an optional prefix defined by &quot;%MyModule.pfx&quot;, with a value type of CDATA, to the &quot;a&quot; element. This works because XML permits the definition or extension of the attribute list for an element at any point in a DTD. <em>For a discussion of qualified names and namespace prefixes, see <a href="#s_module_namespace">Defining the Namespace of a Module</a>.</em></p>

<p>Naturally, adding an attribute to a DTD does not mean that any new behavior is defined for arbitrary clients. However, a content developer could use an extra attribute to store information that is accessed by associated scripts via the Document Object Model (for example).</p>

<h2><a name="s_dev_elems" id="s_dev_elems">E.2.</a> Defining additional elements</h2>

<p>Defining additional elements is only slightly more complicated than defining additional attributes. Basically, DTD authors should write the element declaration for each element:</p>

<pre class="example">
&lt;!-- In the qname sub-module --&gt;
&lt;!ENTITY % MyModule.myelement.qname  &quot;%MyModule.pfx;myelement&quot; &gt;
&lt;!ENTITY % MyModule.myotherelement.qname  &quot;%MyModule.pfx;myotherelement&quot; &gt;

&lt;!-- In the declaration sub-module --&gt;
&lt;!ELEMENT %MyModule.myelement.qname; 
           ( #PCDATA | %MyModule.myotherelement.qname; )* &gt;
&lt;!ATTLIST %MyModule.myelement.qname;
          myattribute    CDATA    #IMPLIED
&gt;

&lt;!ELEMENT %MyModule.myotherelement.qname; EMPTY &gt;
</pre>

<p>After the elements are defined, they need to be integrated into the content model. Strategies for integrating new elements or sets of elements into the content model are addressed in the next section.</p>

<h2><a name="s_dev_contentmodel" id="s_dev_contentmodel">E.3.</a> Defining the content model for a collection of modules</h2>

<p>Since the content model of XHTML modules is fully parameterized, DTD authors may modify the content model for every element in every module. The details of the DTD module interface are defined in <a href="#s_dtd_module_rules">Building DTD Modules</a>. Basically there are two ways to approach this modification:</p>

<ol>
<li>Re-define the &quot;.content&quot; parameter entity for each element.</li>

<li>Re-define one or more of the global content model entities (normally via the &quot;.extras&quot; parameter entity).</li>
</ol>

<p>The strategy taken will depend upon the nature of the modules being combined and the nature of the elements being integrated. The remainder of this section describes techniques for integrating two different classes of modules.</p>

<h3><a name="sec_E.3.1." id="sec_E.3.1.">E.3.1.</a> Integrating a stand-alone module into XHTML</h3>

<p>When a module (and remember, a module can be a collection of other modules) contains elements that only reference each other in their content model, it is said to be &quot;internally complete&quot;. As such, the module can be used on its own; (for example, you could define a DTD that was just that module, and use one of its elements as the root element). Integrating such a module into XHTML is a three step process:</p>

<ol>
<li>Decide what element(s) can be thought of as the root(s) of the new module.</li>

<li>Decide where these elements need to attach in the XHTML content tree.</li>

<li>Then, for each attachment point in the content tree, add the root element(s) to the content definition for the XHTML elements.</li>
</ol>

<p>Consider attaching the elements defined <a href="#s_dev_elems">above</a>. In that example, the element <tt>myelement</tt> is the root. To attach this element under the <tt>img</tt> element, and only the <tt>img</tt> element, of XHTML, the following would work:</p>

<pre class="example">
&lt;!ENTITY % img.content &quot;( %MyModule.myelement.qname; )*&quot;&gt;
</pre>

<p>A DTD defined with this content model would allow a document like the following fragment:</p>

<pre class="example">
&lt;img src=&quot;...&quot;&gt;
&lt;myml:myelement &gt;This is content of a locally defined element&lt;/myml:myelement&gt;
&lt;/img&gt;
</pre>

<p>It is important to note that normally the <code>img</code> element has a content model of <code>EMPTY</code>. By adding myelement to that content model, we are really just replacing <code>EMPTY</code> with <code>myelement</code>. In the case of other elements that already have content models defined, the addition of an element would require the restating of the existing content model in addition to <code>myelement</code>.</p>

<h3><a name="sec_E.3.2." id="sec_E.3.2.">E.3.2.</a> Mixing a new module throughout the modules in XHTML</h3>

<p>Extending the example above, to attach this module everywhere that the <tt>%Flow.mix</tt> content model group is permitted, would require something like the following:</p>

<pre class="example">
&lt;!ENTITY % Misc.extra
     &quot;| %MyModule.myelement.qname;&quot; &gt;
</pre>

<p>Since the %Misc.extra content model class is used in the %Misc.class parameter entity, and that parameter entity is used throughout the XHTML modules, the new module would become available throughout an extended XHTML document type.</p>

<h2><a name="sec_E.4." id="sec_E.4.">E.4.</a> Creating a new DTD</h2>

<p>So far the examples in this section have described the methods of extending XHTML and XHTML's content model. Once this is done, the next step is to collect the modules that comprise the DTD into a single DTD driver, incorporating the new definitions so that they override and augment the basic XHTML definitions as appropriate.</p>

<h3><a name="sec_E.4.1." id="sec_E.4.1.">E.4.1.</a> Creating a simple DTD</h3>

<p>Using the trivial example above, it is possible to define a new DTD that uses and extends the XHTML modules pretty easily. First, define the new elements and their content model in a module:</p>

<pre class="dtd">
&lt;!-- File: simpleml-model-1.mod --&gt;

&lt;!-- Declare a Parameter Entity (PE) that defines any external namespaces 
     that are used by this module --&gt;

&lt;!-- Set the PE that is used in every ATTLIST in this module 
     NS.prefixed.attrib is initialized in the xhtml-qname module, and
     SimpleML.ns.noprefix.attrib is initialized in the SimpleML DTD driver 
     file.--&gt;
&lt;!ENTITY <span class="entity">% SimpleML.xmlns.attrib</span>
  &quot;%NS.decl.attrib;&quot;
&gt;

&lt;!ENTITY <span class="entity">% SimpleML.Common.attrib</span>
  &quot;%SimpleML.xmlns.attrib;
   id           ID           #IMPLIED&quot;
&gt;

&lt;!ENTITY <span class="entity">% SimpleML.element.qname</span> &quot;%SimpleML.pfx;element&quot; &gt;
&lt;!ENTITY <span class="entity">% SimpleML.otherelement.qname</span> &quot;%SimpleML.pfx;otherelement&quot; &gt;

&lt;!ELEMENT <span class="element">%SimpleML.element.qname;
</span>          ( #PCDATA | %SimpleML.otherelement.qname; )* &gt;
&lt;!ATTLIST %SimpleML.element.qname;
          myattribute   CDATA  #IMPLIED
          %SimpleML.Common.attrib;
&gt;
&lt;!ELEMENT <span class="element">%SimpleML.otherelement.qname;</span> EMPTY &gt;
&lt;!ATTLIST %SimpleML.otherelement.qname;
          %SimpleML.Common.attrib;
&gt;

&lt;!ENTITY <span class="entity">% SimpleML.img.myattr.qname</span> &quot;%SimpleML.pfx;myattr&quot; &gt;
&lt;!ATTLIST %img.qname;
          %SimpleML.img.myattr.qname;  CDATA  #IMPLIED
&gt;

&lt;!-- Add our elements to the XHTML content model --&gt;
&lt;!ENTITY <span class="entity">% Misc.class</span>
     &quot;| %SimpleML.element.qname;&quot; &gt;

&lt;!-- Now bring in the XHTML Basic content model --&gt;
&lt;!ENTITY <span class="entity">% xhtml-basic-model.mod</span>
     PUBLIC &quot;-//W3C//ENTITIES XHTML Basic 1.0 Document Model 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-basic/xhtml-basic10-model-1.mod&quot; &gt;
%xhtml-basic-model.mod;

</pre>

<p>Next, define the DTD driver for the new language:</p>

<pre class="dtd">
&lt;!-- file: simpleml-1_0.dtd --&gt;

&lt;!-- Bring in the XHTML datatypes --&gt;
&lt;!ENTITY <span class="entity">% xhtml-datatypes.mod</span>
     PUBLIC &quot;-//W3C//ENTITIES XHTML Datatypes 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-datatypes-1.mod&quot; &gt;
%xhtml-datatypes.mod;

&lt;!-- Declare the actual namespace of this module --&gt;
&lt;!ENTITY <span class="entity">% SimpleML.xmlns</span> &quot;http://www.my.org/xmlns/simpleml1&quot; &gt;

&lt;!-- By default, disable prefixing of new module --&gt;
&lt;!ENTITY <span class="entity">% NS.prefixed</span> &quot;IGNORE&quot; &gt;
&lt;!ENTITY <span class="entity">% SimpleML.prefixed</span> &quot;%NS.prefixed;&quot; &gt; 

&lt;!-- Default prefix for module elements and attributes --&gt;
&lt;!ENTITY <span class="entity">% SimpleML.prefix</span> &quot;simpleml&quot; &gt;

&lt;!-- If this module's namespace is prefixed --&gt;
&lt;![%SimpleML.prefixed;[
  &lt;!ENTITY <span class="entity">% SimpleML.pfx</span>  &quot;%SimpleML.prefix;:&quot; &gt;
]]&gt;
&lt;!ENTITY <span class="entity">% SimpleML.pfx</span>  &quot;&quot; &gt;

&lt;![%SimpleML.prefixed;[
  &lt;!ENTITY <span class="entity">% SimpleML.xmlns.extra.attrib</span> 
       &quot;xmlns:%SimpleML.prefix; %URI.datatype; #FIXED '%SimpleML.xmlns;'&quot; &gt;
]]&gt;
&lt;!ENTITY <span class="entity">% SimpleML.xmlns.extra.attrib</span> &quot;&quot; &gt;

&lt;!ENTITY <span class="entity">% XHTML.xmlns.extra.attrib</span>
       &quot;%SimpleML.xmlns.extra.attrib;&quot;
&gt;
&lt;!-- Set the content model for our language --&gt;
&lt;!ENTITY <span class="entity">% xhtml-model.mod</span>
     SYSTEM &quot;simpleml-model-1.mod&quot; &gt;
&lt;!-- Instantiate xhtml basic's DTD to do all the work --&gt;
&lt;!ENTITY <span class="entity">% xhtml-basic.dtd</span>
     PUBLIC &quot;-//W3C//DTD XHTML Basic 1.0//EN&quot; 
            &quot;http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd&quot; &gt;
%xhtml-basic.dtd;

</pre>

<p>When using this DTD, it is possible to enable the use of XML namespace prefixes. When so doing, the start of a document using this new DTD might look like:</p>

<pre class="dtd">
&lt;!DOCTYPE html SYSTEM &quot;simpleml-1_0.dtd&quot; [
  &lt;!ENTITY <span class="entity">% SimpleML.prefixed</span> &quot;INCLUDE&quot;&gt;
]&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;
      xmlns:simpleml=&quot;http://www.my.org/xmlns/simpleml1&quot; &gt;
&lt;head&gt;
&lt;title&gt;An example using defaults&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;This is content in the XHTML namespace&lt;/p&gt;
&lt;simpleml:element&gt;
  This is content in the SimpleML namespace.
  &lt;simpleml:otherelement /&gt;
&lt;/simpleml:element&gt;
&lt;p&gt;&lt;img src=&quot;missing&quot; alt=&quot;Missing image&quot; simpleml:myattr=&quot;value&quot;/&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;

</pre>

<h3><a name="sec_E.4.2." id="sec_E.4.2.">E.4.2.</a> Creating a DTD by extending XHTML</h3>

<p>Next, there is the situation where a complete, additional, and complex module is added to XHTML (or to a subset of XHTML). In essence, this is the same as in the trivial example above, the only difference being that the module being added is incorporated in the DTD by reference rather than explicitly including the new definitions in the DTD.</p>

<p>One such complex module is the DTD for <a href="#ref_mathml">[MathML]</a>. In order to combine MathML and XHTML into a single DTD, an author would just decide where MathML content should be legal in the document, and add the MathML root element to the content model at that point. First, define a content model module that instantiates the MathML DTD and connects it to the content model:</p>

<pre class="example">
&lt;!-- File: mathml-model.mod --&gt;
&lt;!ENTITY % XHTML1-math
     PUBLIC &quot;-//W3C//MathML 2.0//EN&quot;
            &quot;http://www.w3.org/TR/2000/WD-MathML2-20000328/dtd/mathml2.dtd&quot; &gt;
%XHTML1-math;

&lt;!ENTITY % Inlspecial.extra 
     &quot;%a.qname; | %img.qname; | %object.qname; | %map.qname; 
      | %Mathml.Math.qname;&quot; &gt;
</pre>

<p>Next, define a DTD driver that identifies our new content model module as the content model for the DTD, and hands off processing to the XHTML 1.1 driver (for example):</p>

<pre class="example">
&lt;!-- File: xhtml-mathml.dtd --&gt;
&lt;!ENTITY % xhtml-model.mod
      SYSTEM &quot;mathml-model.mod&quot; &gt;
&lt;!ENTITY % xhtml11.dtd
     PUBLIC &quot;-//W3C//XHTML 1.1//EN&quot;
            &quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot; &gt;
%xhtml11.dtd;
</pre>

<h3><a name="sec_E.4.3." id="sec_E.4.3.">E.4.3.</a> Creating a DTD by removing and replacing XHTML modules</h3>

<p>Another way in which DTD authors may use XHTML modules is to define a DTD that is a subset of an XHTML family document type (because, for example, they are building devices or software that only supports a subset of XHTML). Doing this is only slightly more complex than the previous example. The basic steps to follow are:</p>

<ol>
<li>Take an XHTML family DTD as the basis of the new document type (we will use XHTML 1.1).</li>

<li>Select the modules to remove from that DTD.</li>

<li>Define a new DTD that &quot;IGNOREs&quot; the modules.</li>

<li>Introduce some new modules.</li>
</ol>

<p>For example, consider a device that uses XHTML modules, but without forms or tables. The DTD for such a device would look like this:</p>

<pre class="example">
&lt;!-- File: xhtml-simple.dtd --&gt;
&lt;!ENTITY % xhtml-form.module &quot;IGNORE&quot; &gt;
&lt;!ENTITY % xhtml-table.module &quot;IGNORE&quot; &gt;
&lt;!ENTITY % xhtml-table.module &quot;IGNORE&quot; &gt;
&lt;!-- Bring in the basic tables module --&gt;
&lt;!ENTITY % xhtml-basic-table.mod
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Basic Tables 1.0//EN&quot;
       &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-basic-table-1.mod&quot;
&gt;
%xhtml-basic-table.mod;
&lt;!ENTITY % xhtml11.mod
     PUBLIC &quot;-//W3C//DTD XHTML 1.1//EN&quot;
            &quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot; &gt;
%xhtml11.mod;
</pre>

<p>Note that this does not actually modify the content model for the XHTML 1.1 DTD. However, since XML ignores elements in content models that are not defined, the form and table elements are dropped from the model automatically.</p>

<h3><a name="sec_E.4.4." id="sec_E.4.4.">E.4.4.</a> Creating a new DTD</h3>

<p>Finally, some DTD authors may wish to start from scratch, using the XHTML Modularization framework as a toolkit for building a new markup language. This language must be made up of the minimal, required modules from XHTML. It may also contain other XHTML-defined modules or any other module that the author wishes to employ. In this example, we will take the XHTML required modules, add some XHTML-defined modules, and also add in the module we defined above.</p>

<p>The first step is to use the XHTML-provided <a href="DTD/templates/template-qname-1.mod">template</a> for a new qualified names module, modified to define the qualified names and namespace for our new elements.</p>

<pre class="dtd">
&lt;!-- file: myml-qname-1.mod --&gt;

&lt;!-- Bring in the datatypes - we use the URI.datatype PE for declaring the
     xmlns attributes. --&gt;
&lt;!ENTITY <span class="entity">% MyML-datatypes.mod</span>
         PUBLIC &quot;-//W3C//ENTITIES XHTML Datatypes 1.0//EN&quot;
         &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-datatypes-1.mod&quot; &gt;
%MyML-datatypes.mod;

&lt;!-- By default, disable prefixing of this module --&gt;
&lt;!ENTITY <span class="entity">% NS.prefixed</span> &quot;IGNORE&quot; &gt;
&lt;!ENTITY <span class="entity">% MyML.prefixed</span> &quot;%NS.prefixed;&quot; &gt;

&lt;!-- Declare the actual namespace of this module --&gt;
&lt;!ENTITY <span class="entity">% MyML.xmlns</span> &quot;http://www.my.org/xmlns/myml&quot; &gt;

&lt;!-- Declare the default prefix for this module --&gt;
&lt;!ENTITY <span class="entity">% MyML.prefix</span> &quot;myml&quot; &gt;

&lt;!-- If this module's namespace is prefixed --&gt;
&lt;![%MyML.prefixed;[
  &lt;!ENTITY <span class="entity">% MyML.pfx</span>  &quot;%MyML.prefix;:&quot; &gt;
]]&gt;
&lt;!ENTITY <span class="entity">% MyML.pfx</span>  &quot;&quot; &gt;

&lt;!-- Declare a Parameter Entity (PE) that defines any external namespaces 
     that are used by this module --&gt;
&lt;!ENTITY <span class="entity">% MyML.xmlns.extra.attrib</span> &quot;&quot; &gt;

&lt;!-- Declare a PE that defines the xmlns attributes for use by MyML. --&gt;
&lt;![%MyML.prefixed;[
&lt;!ENTITY <span class="entity">% MyML.xmlns.attrib</span>
   &quot;xmlns:%MyML.prefix;  %URI.datatype;  #FIXED '%MyML.xmlns;'
   %MyML.xmlns.extra.attrib;&quot;
&gt;
]]&gt;
&lt;!ENTITY <span class="entity">% MyML.xmlns.attrib</span>
   &quot;xmlns   %URI.datatype;  #FIXED '%MyML.xmlns;'
    %MyML.xmlns.extra.attrib;&quot;
&gt;

&lt;!-- Make sure that the MyML namespace attributes are included on the XHTML
     attribute set --&gt;
&lt;![%NS.prefixed;[
&lt;!ENTITY <span class="entity">% XHTML.xmlns.extra.attrib</span>
    &quot;%MyML.xmlns.attrib;&quot; &gt;
]]&gt;
&lt;!ENTITY <span class="entity">% XHTML.xmlns.extra.attrib</span>
    &quot;&quot;
&gt;
&lt;!-- Now declare the element names --&gt;

&lt;!ENTITY <span class="entity">% MyML.myelement.qname</span> &quot;%MyML.pfx;myelement&quot; &gt;
&lt;!ENTITY <span class="entity">% MyML.myotherelement.qname</span> &quot;%MyML.pfx;myotherelement&quot; &gt;

</pre>

<p>Next, define a module that defines the elements and attributes using the XHTML provided <a href="DTD/templates/template-1.mod">template</a>.</p>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- My Elements Module ................................................... --&gt;
&lt;!-- file: myml-elements-1_0.mod

     PUBLIC &quot;-//MY COMPANY//ELEMENTS XHTML MyML Elements 1.0//EN&quot;
     SYSTEM &quot;http://example.com/DTDs/myml-elements-1_0.mod&quot;

     xmlns:myml=&quot;http://example.com/DTDs/myml-1_0.dtd&quot;
     ...................................................................... --&gt;

&lt;!-- My Elements Module

     myelement
     myotherelement

     This module has no purpose other than to provide structure for some
     PCDATA content.
--&gt;

&lt;!ELEMENT <span class="element">%MyML.myelement.qname;
</span>     ( #PCDATA | %MyML.myotherelement.qname; )* &gt;
&lt;!ATTLIST %MyML.myelement.qname;
     myattribute    CDATA   #IMPLIED
     %MyML.xmlns.attrib;
&gt;

&lt;!ELEMENT <span class="element">%MyML.myotherelement.qname;</span> EMPTY &gt;
&lt;!ATTLIST %MyML.myotherelement.qname;
      %MyML.xmlns.attrib;
&gt;

&lt;!ENTITY <span class="entity">% MyML.img.myattr.qname</span> &quot;%MyML.pfx;myattr&quot; &gt;
&lt;!ATTLIST %img.qname;
      %MyML.img.myattr.qname;   CDATA  #IMPLIED
      %MyML.xmlns.attrib;
&gt;

&lt;!-- end of myml-elements-1_0.mod --&gt;

</pre>

<p>Now, build a content model description that hooks the new elements and attributes into the other XHTML elements. The following example is patterned after the XHTML Basic content model, but is a complete, free-standing content model module:</p>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- MyML Model Module  ................................................... --&gt;
&lt;!-- file: myml-model-1.mod

     PUBLIC &quot;-//MY COMPANY//ELEMENTS XHTML MyML Model 1.0//EN&quot;
     SYSTEM &quot;http://example.com/DTDs/myml-model-1_0.mod&quot;

     xmlns:myml=&quot;http://www.my.org/xmlns/myml&quot;
     ...................................................................... --&gt;

&lt;!-- Define the content model for Misc.extra --&gt;
&lt;!ENTITY <span class="entity">% Misc.class</span>
     &quot;| %MyML.myelement.qname; &quot;&gt;

&lt;!-- ....................  Inline Elements  ...................... --&gt;

&lt;!ENTITY <span class="entity">% HeadOpts.mix</span>  
     &quot;( %meta.qname; )*&quot; &gt;

&lt;!ENTITY <span class="entity">% I18n.class</span> &quot;&quot; &gt;

&lt;!ENTITY <span class="entity">% InlStruct.class</span> &quot;%br.qname; | %span.qname;&quot; &gt;

&lt;!ENTITY <span class="entity">% InlPhras.class</span>
     &quot;| %em.qname; | %strong.qname; | %dfn.qname; | %code.qname; 
      | %samp.qname; | %kbd.qname; | %var.qname; | %cite.qname; 
      | %abbr.qname; | %acronym.qname; | %q.qname;&quot; &gt;

&lt;!ENTITY <span class="entity">% InlPres.class</span>
     &quot;&quot; &gt;

&lt;!ENTITY <span class="entity">% Anchor.class</span> &quot;| %a.qname;&quot; &gt;

&lt;!ENTITY <span class="entity">% InlSpecial.class</span> &quot;| %img.qname; &quot; &gt;

&lt;!ENTITY <span class="entity">% Inline.extra</span> &quot;&quot; &gt;

&lt;!-- %Inline.class; includes all inline elements,
     used as a component in mixes
--&gt;
&lt;!ENTITY <span class="entity">% Inline.class</span>
     &quot;%InlStruct.class;
      %InlPhras.class;
      %InlPres.class;
      %Anchor.class;
      %InlSpecial.class;&quot;
&gt;

&lt;!-- %InlNoAnchor.class; includes all non-anchor inlines,
     used as a component in mixes
--&gt;
&lt;!ENTITY <span class="entity">% InlNoAnchor.class</span>
     &quot;%InlStruct.class;
      %InlPhras.class;
      %InlPres.class;
      %InlSpecial.class;&quot;
&gt;

&lt;!-- %InlNoAnchor.mix; includes all non-anchor inlines
--&gt;
&lt;!ENTITY <span class="entity">% InlNoAnchor.mix</span>
     &quot;%InlNoAnchor.class;
      %Misc.class;&quot;
&gt;

&lt;!-- %Inline.mix; includes all inline elements, including %Misc.class;
--&gt;
&lt;!ENTITY <span class="entity">% Inline.mix</span>
     &quot;%Inline.class;
      %Misc.class;&quot;
&gt;

&lt;!-- .....................  Block Elements  ...................... --&gt;

&lt;!ENTITY <span class="entity">% Heading.class</span> 
     &quot;%h1.qname; | %h2.qname; | %h3.qname; 
      | %h4.qname; | %h5.qname; | %h6.qname;&quot; &gt;

&lt;!ENTITY <span class="entity">% List.class</span> &quot;%ul.qname; | %ol.qname; | %dl.qname;&quot; &gt;

&lt;!ENTITY <span class="entity">% BlkStruct.class</span> &quot;%p.qname; | %div.qname;&quot; &gt;

&lt;!ENTITY <span class="entity">% BlkPhras.class</span> 
     &quot;| %pre.qname; | %blockquote.qname; | %address.qname;&quot; &gt;

&lt;!ENTITY <span class="entity">% BlkPres.class</span> &quot;&quot; &gt;

&lt;!ENTITY <span class="entity">% Block.extra</span> &quot;&quot; &gt;

&lt;!-- %Block.class; includes all block elements,
     used as an component in mixes
--&gt;
&lt;!ENTITY <span class="entity">% Block.class</span>
     &quot;%BlkStruct.class;
      %BlkPhras.class;
      %BlkPres.class;
      %Block.extra;&quot;
&gt;

&lt;!-- %Block.mix; includes all block elements plus %Misc.class;
--&gt;
&lt;!ENTITY <span class="entity">% Block.mix</span>
     &quot;%Heading.class;
      | %List.class;
      | %Block.class;
      %Misc.class;&quot;
&gt;

&lt;!-- ................  All Content Elements  .................. --&gt;

&lt;!-- %Flow.mix; includes all text content, block and inline
--&gt;
&lt;!ENTITY <span class="entity">% Flow.mix</span>
     &quot;%Heading.class;
      | %List.class;
      | %Block.class;
      | %Inline.class;
      %Misc.class;&quot;
&gt;

&lt;!-- special content model for pre element --&gt;
&lt;!ENTITY <span class="entity">% pre.content</span>
    &quot;( #PCDATA
     | %Inline.class; )*&quot;
&gt;

&lt;!-- end of myml-model-1.mod --&gt;

</pre>

<p>Finally, use the XHTML-provided <a href="DTD/templates/template.dtd">template</a> for a new DTD, modified as appropriate for our new markup language:</p>

<pre class="dtd">
&lt;!-- ....................................................................... --&gt;
&lt;!-- MYML DTD  ............................................................. --&gt;
&lt;!-- file: myml-1_0.dtd --&gt;

&lt;!-- This is the DTD driver for myml 1.0.

     Please use this formal public identifier to identify it:

         &quot;-//MY COMPANY//DTD XHTML MYML 1.0//EN&quot;

     And this namespace for myml-unique elements:

         xmlns:myml=&quot;http://www.my.org/xmlns/myml&quot;
--&gt;
&lt;!ENTITY <span class="entity">% XHTML.version</span>  &quot;-//MY COMPANY//DTD XHTML MYML 1.0//EN&quot; &gt;

&lt;!-- reserved for use with document profiles --&gt;
&lt;!ENTITY <span class="entity">% XHTML.profile</span>  &quot;&quot; &gt;

&lt;!-- Tell the framework to use our qualified names module as an extra qname
driver --&gt;
&lt;!ENTITY <span class="entity">% xhtml-qname-extra.mod</span>
     SYSTEM &quot;myml-qname-1.mod&quot; &gt;

&lt;!-- Define the Content Model for the framework to use --&gt;
&lt;!ENTITY <span class="entity">% xhtml-model.mod</span>
     SYSTEM &quot;myml-model-1.mod&quot; &gt;

&lt;!-- Disable bidirectional text support --&gt;
&lt;!ENTITY <span class="entity">% XHTML.bidi</span>  &quot;IGNORE&quot; &gt;

&lt;!-- Bring in the XHTML Framework --&gt;
&lt;!ENTITY <span class="entity">% xhtml-framework.mod</span>
     PUBLIC &quot;-//W3C//ENTITIES XHTML Modular Framework 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-framework-1.mod&quot; &gt;
%xhtml-framework.mod;

&lt;!-- Basic Text Module (Required)  ............................... --&gt;
&lt;!ENTITY <span class="entity">% xhtml-text.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Basic Text 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-text-1.mod&quot; &gt;
%xhtml-text.mod;

&lt;!-- Hypertext Module (required) ................................. --&gt;
&lt;!ENTITY <span class="entity">% xhtml-hypertext.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Hypertext 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-hypertext-1.mod&quot; &gt;
%xhtml-hypertext.mod;

&lt;!-- Lists Module (required)  .................................... --&gt;
&lt;!ENTITY <span class="entity">% xhtml-list.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Lists 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-list-1.mod&quot; &gt;
%xhtml-list.mod;

&lt;!-- My Elements Module   ........................................ --&gt;
&lt;!ENTITY <span class="entity">% MyML-elements.mod</span>
     SYSTEM &quot;myml-elements-1.mod&quot; &gt;
%MyML-elements.mod;

&lt;!-- XHTML Images module  ........................................ --&gt;
&lt;!ENTITY <span class="entity">% xhtml-image.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Images 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-image-1.mod&quot; &gt;
%xhtml-image.mod;

&lt;!-- Document Metainformation Module  ............................ --&gt;
&lt;!ENTITY <span class="entity">% xhtml-meta.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Metainformation 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-meta-1.mod&quot; &gt;
%xhtml-meta.mod;

&lt;!-- Document Structure Module (required)  ....................... --&gt;
&lt;!ENTITY <span class="entity">% xhtml-struct.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Document Structure 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-struct-1.mod&quot; &gt;
%xhtml-struct.mod;

</pre>

<h2><a name="sec_E.5." id="sec_E.5.">E.5.</a> Using the new DTD</h2>

<p>Once a new DTD has been developed, it can be used in any document. Using the DTD is as simple as just referencing it in the DOCTYPE declaration of a document:</p>

<pre class="dtd">
&lt;!DOCTYPE html SYSTEM &quot;myml-1_0.dtd&quot; &gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;
&lt;head&gt;
&lt;title&gt;An example using defaults&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;This is content in the XHTML namespace&lt;/p&gt;
&lt;myelement&gt;
  This is content in the SimpleML namespace.
  &lt;myotherelement /&gt;
&lt;/myelement&gt;
&lt;p&gt;&lt;img src=&quot;missing&quot; alt=&quot;Missing image&quot; myattr=&quot;value&quot;/&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;

</pre>

<p>The document can also use the elements outside of the XHTML namespace by prefixing them:</p>

<pre class="dtd">
&lt;!DOCTYPE html SYSTEM &quot;myml-1_0.dtd&quot; [
  &lt;!ENTITY <span class="entity">% MyML.prefixed</span> &quot;INCLUDE&quot; &gt;
]&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;
&lt;head&gt;
&lt;title&gt;An example using defaults&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;This is content in the XHTML namespace&lt;/p&gt;
&lt;myml:myelement&gt;
  This is content in the myml namespace.
  &lt;myml:myotherelement /&gt;
&lt;/myml:myelement&gt;
&lt;p&gt;&lt;img src=&quot;missing&quot; alt=&quot;Missing image&quot; myml:myattr=&quot;value&quot; /&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;

</pre>

<!--OddPage-->
<h1><a name="a_dtd_module_defs" id="a_dtd_module_defs">F.</a> XHTML DTD Module Implementations</h1>

<p>This appendix is <em>normative</em>.</p>

<p>This appendix will contain implementations of the modules defined in <a href="#s_xhtmlmodules">XHTML Abstract Modules</a> via XML DTDs. These module implementations can be used by XHTML Family Document Types.</p>

<h2><a name="a_xhtml_character_entities" id="a_xhtml_character_entities">F.1.</a> XHTML Character Entities</h2>

<p>XHTML DTDs make available a standard collection of named character entities. Those entities are defined in this section.</p>

<h3><a name="a_module_XHTML_Latin_1_Character_Entities" id="a_module_XHTML_Latin_1_Character_Entities">F.1.1.</a> XHTML Latin 1 Character Entities</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XML-compatible ISO Latin 1 Character Entity Set for XHTML ............ --&gt;
&lt;!-- file: xhtml-lat1.ent

     Typical invocation:

       &lt;!ENTITY <span class="entity">% xhtml-lat1</span>
           PUBLIC &quot;-//W3C//ENTITIES Latin 1 for XHTML//EN&quot;
                  &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-lat1.ent&quot; &gt;
       %xhtml-lat1;

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

     PUBLIC &quot;-//W3C//ENTITIES Latin 1 for XHTML//EN&quot;
     SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-lat1.ent&quot;

     Revision:  $x36;Id: xhtml-lat1.ent,v 1.2 2000/02/03 15:59:28 ahby Exp $x36; SMI

     Portions (C) International Organization for Standardization 1986:
     Permission to copy in any form is granted for use with conforming 
     SGML systems and applications as defined in ISO 8879, provided 
     this notice is included in all copies.
--&gt;

&lt;!ENTITY nbsp   &quot;&amp;#160;&quot; &gt;&lt;!-- no-break space = non-breaking space,
                                     U+00A0 ISOnum --&gt;
&lt;!ENTITY iexcl  &quot;&amp;#161;&quot; &gt;&lt;!-- inverted exclamation mark,
                                     U+00A1 ISOnum --&gt;
&lt;!ENTITY cent   &quot;&amp;#162;&quot; &gt;&lt;!-- cent sign,
                                     U+00A2 ISOnum --&gt;
&lt;!ENTITY pound  &quot;&amp;#163;&quot; &gt;&lt;!-- pound sign,
                                     U+00A3 ISOnum --&gt;
&lt;!ENTITY curren &quot;&amp;#164;&quot; &gt;&lt;!-- currency sign,
                                     U+00A4 ISOnum --&gt;
&lt;!ENTITY yen    &quot;&amp;#165;&quot; &gt;&lt;!-- yen sign = yuan sign,
                                     U+00A5 ISOnum --&gt;
&lt;!ENTITY brvbar &quot;&amp;#166;&quot; &gt;&lt;!-- broken bar = broken vertical bar,
                                     U+00A6 ISOnum --&gt;
&lt;!ENTITY sect   &quot;&amp;#167;&quot; &gt;&lt;!-- section sign,
                                     U+00A7 ISOnum --&gt;
&lt;!ENTITY uml    &quot;&amp;#168;&quot; &gt;&lt;!-- diaeresis = spacing diaeresis,
                                     U+00A8 ISOdia --&gt;
&lt;!ENTITY copy   &quot;&amp;#169;&quot; &gt;&lt;!-- copyright sign,
                                     U+00A9 ISOnum --&gt;
&lt;!ENTITY ordf   &quot;&amp;#170;&quot; &gt;&lt;!-- feminine ordinal indicator,
                                     U+00AA ISOnum --&gt;
&lt;!ENTITY laquo  &quot;&amp;#171;&quot; &gt;&lt;!-- left-pointing double angle quotation mark
                                     = left pointing guillemet,
                                     U+00AB ISOnum --&gt;
&lt;!ENTITY not    &quot;&amp;#172;&quot; &gt;&lt;!-- not sign,
                                     U+00AC ISOnum --&gt;
&lt;!ENTITY shy    &quot;&amp;#173;&quot; &gt;&lt;!-- soft hyphen = discretionary hyphen,
                                     U+00AD ISOnum --&gt;
&lt;!ENTITY reg    &quot;&amp;#174;&quot; &gt;&lt;!-- registered sign = registered trade mark sign,
                                     U+00AE ISOnum --&gt;
&lt;!ENTITY macr   &quot;&amp;#175;&quot; &gt;&lt;!-- macron = spacing macron = overline
                                     = APL overbar,
                                     U+00AF ISOdia --&gt;
&lt;!ENTITY deg    &quot;&amp;#176;&quot; &gt;&lt;!-- degree sign,
                                     U+00B0 ISOnum --&gt;
&lt;!ENTITY plusmn &quot;&amp;#177;&quot; &gt;&lt;!-- plus-minus sign = plus-or-minus sign,
                                     U+00B1 ISOnum --&gt;
&lt;!ENTITY sup2   &quot;&amp;#178;&quot; &gt;&lt;!-- superscript two = superscript digit two
                                     = squared,
                                     U+00B2 ISOnum --&gt;
&lt;!ENTITY sup3   &quot;&amp;#179;&quot; &gt;&lt;!-- superscript three = superscript digit three
                                     = cubed,
                                     U+00B3 ISOnum --&gt;
&lt;!ENTITY acute  &quot;&amp;#180;&quot; &gt;&lt;!-- acute accent = spacing acute,
                                     U+00B4 ISOdia --&gt;
&lt;!ENTITY micro  &quot;&amp;#181;&quot; &gt;&lt;!-- micro sign,
                                     U+00B5 ISOnum --&gt;
&lt;!ENTITY para   &quot;&amp;#182;&quot; &gt;&lt;!-- pilcrow sign = paragraph sign,
                                     U+00B6 ISOnum --&gt;
&lt;!ENTITY middot &quot;&amp;#183;&quot; &gt;&lt;!-- middle dot = Georgian comma
                                     = Greek middle dot,
                                     U+00B7 ISOnum --&gt;
&lt;!ENTITY cedil  &quot;&amp;#184;&quot; &gt;&lt;!-- cedilla = spacing cedilla,
                                     U+00B8 ISOdia --&gt;
&lt;!ENTITY sup1   &quot;&amp;#185;&quot; &gt;&lt;!-- superscript one = superscript digit one,
                                     U+00B9 ISOnum --&gt;
&lt;!ENTITY ordm   &quot;&amp;#186;&quot; &gt;&lt;!-- masculine ordinal indicator,
                                     U+00BA ISOnum --&gt;
&lt;!ENTITY raquo  &quot;&amp;#187;&quot; &gt;&lt;!-- right-pointing double angle quotation mark
                                     = right pointing guillemet,
                                     U+00BB ISOnum --&gt;
&lt;!ENTITY frac14 &quot;&amp;#188;&quot; &gt;&lt;!-- vulgar fraction one quarter
                                     = fraction one quarter,
                                     U+00BC ISOnum --&gt;
&lt;!ENTITY frac12 &quot;&amp;#189;&quot; &gt;&lt;!-- vulgar fraction one half
                                     = fraction one half,
                                     U+00BD ISOnum --&gt;
&lt;!ENTITY frac34 &quot;&amp;#190;&quot; &gt;&lt;!-- vulgar fraction three quarters
                                     = fraction three quarters,
                                     U+00BE ISOnum --&gt;
&lt;!ENTITY iquest &quot;&amp;#191;&quot; &gt;&lt;!-- inverted question mark
                                     = turned question mark,
                                     U+00BF ISOnum --&gt;
&lt;!ENTITY Agrave &quot;&amp;#192;&quot; &gt;&lt;!-- latin capital letter A with grave
                                     = latin capital letter A grave,
                                     U+00C0 ISOlat1 --&gt;
&lt;!ENTITY Aacute &quot;&amp;#193;&quot; &gt;&lt;!-- latin capital letter A with acute,
                                     U+00C1 ISOlat1 --&gt;
&lt;!ENTITY Acirc  &quot;&amp;#194;&quot; &gt;&lt;!-- latin capital letter A with circumflex,
                                     U+00C2 ISOlat1 --&gt;
&lt;!ENTITY Atilde &quot;&amp;#195;&quot; &gt;&lt;!-- latin capital letter A with tilde,
                                     U+00C3 ISOlat1 --&gt;
&lt;!ENTITY Auml   &quot;&amp;#196;&quot; &gt;&lt;!-- latin capital letter A with diaeresis,
                                     U+00C4 ISOlat1 --&gt;
&lt;!ENTITY Aring  &quot;&amp;#197;&quot; &gt;&lt;!-- latin capital letter A with ring above
                                     = latin capital letter A ring,
                                     U+00C5 ISOlat1 --&gt;
&lt;!ENTITY AElig  &quot;&amp;#198;&quot; &gt;&lt;!-- latin capital letter AE
                                     = latin capital ligature AE,
                                     U+00C6 ISOlat1 --&gt;
&lt;!ENTITY Ccedil &quot;&amp;#199;&quot; &gt;&lt;!-- latin capital letter C with cedilla,
                                     U+00C7 ISOlat1 --&gt;
&lt;!ENTITY Egrave &quot;&amp;#200;&quot; &gt;&lt;!-- latin capital letter E with grave,
                                     U+00C8 ISOlat1 --&gt;
&lt;!ENTITY Eacute &quot;&amp;#201;&quot; &gt;&lt;!-- latin capital letter E with acute,
                                     U+00C9 ISOlat1 --&gt;
&lt;!ENTITY Ecirc  &quot;&amp;#202;&quot; &gt;&lt;!-- latin capital letter E with circumflex,
                                     U+00CA ISOlat1 --&gt;
&lt;!ENTITY Euml   &quot;&amp;#203;&quot; &gt;&lt;!-- latin capital letter E with diaeresis,
                                     U+00CB ISOlat1 --&gt;
&lt;!ENTITY Igrave &quot;&amp;#204;&quot; &gt;&lt;!-- latin capital letter I with grave,
                                     U+00CC ISOlat1 --&gt;
&lt;!ENTITY Iacute &quot;&amp;#205;&quot; &gt;&lt;!-- latin capital letter I with acute,
                                     U+00CD ISOlat1 --&gt;
&lt;!ENTITY Icirc  &quot;&amp;#206;&quot; &gt;&lt;!-- latin capital letter I with circumflex,
                                     U+00CE ISOlat1 --&gt;
&lt;!ENTITY Iuml   &quot;&amp;#207;&quot; &gt;&lt;!-- latin capital letter I with diaeresis,
                                     U+00CF ISOlat1 --&gt;
&lt;!ENTITY ETH    &quot;&amp;#208;&quot; &gt;&lt;!-- latin capital letter ETH,
                                     U+00D0 ISOlat1 --&gt;
&lt;!ENTITY Ntilde &quot;&amp;#209;&quot; &gt;&lt;!-- latin capital letter N with tilde,
                                     U+00D1 ISOlat1 --&gt;
&lt;!ENTITY Ograve &quot;&amp;#210;&quot; &gt;&lt;!-- latin capital letter O with grave,
                                     U+00D2 ISOlat1 --&gt;
&lt;!ENTITY Oacute &quot;&amp;#211;&quot; &gt;&lt;!-- latin capital letter O with acute,
                                     U+00D3 ISOlat1 --&gt;
&lt;!ENTITY Ocirc  &quot;&amp;#212;&quot; &gt;&lt;!-- latin capital letter O with circumflex,
                                     U+00D4 ISOlat1 --&gt;
&lt;!ENTITY Otilde &quot;&amp;#213;&quot; &gt;&lt;!-- latin capital letter O with tilde,
                                     U+00D5 ISOlat1 --&gt;
&lt;!ENTITY Ouml   &quot;&amp;#214;&quot; &gt;&lt;!-- latin capital letter O with diaeresis,
                                     U+00D6 ISOlat1 --&gt;
&lt;!ENTITY times  &quot;&amp;#215;&quot; &gt;&lt;!-- multiplication sign,
                                     U+00D7 ISOnum --&gt;
&lt;!ENTITY Oslash &quot;&amp;#216;&quot; &gt;&lt;!-- latin capital letter O with stroke
                                     = latin capital letter O slash,
                                     U+00D8 ISOlat1 --&gt;
&lt;!ENTITY Ugrave &quot;&amp;#217;&quot; &gt;&lt;!-- latin capital letter U with grave,
                                     U+00D9 ISOlat1 --&gt;
&lt;!ENTITY Uacute &quot;&amp;#218;&quot; &gt;&lt;!-- latin capital letter U with acute,
                                     U+00DA ISOlat1 --&gt;
&lt;!ENTITY Ucirc  &quot;&amp;#219;&quot; &gt;&lt;!-- latin capital letter U with circumflex,
                                     U+00DB ISOlat1 --&gt;
&lt;!ENTITY Uuml   &quot;&amp;#220;&quot; &gt;&lt;!-- latin capital letter U with diaeresis,
                                     U+00DC ISOlat1 --&gt;
&lt;!ENTITY Yacute &quot;&amp;#221;&quot; &gt;&lt;!-- latin capital letter Y with acute,
                                     U+00DD ISOlat1 --&gt;
&lt;!ENTITY THORN  &quot;&amp;#222;&quot; &gt;&lt;!-- latin capital letter THORN,
                                     U+00DE ISOlat1 --&gt;
&lt;!ENTITY szlig  &quot;&amp;#223;&quot; &gt;&lt;!-- latin small letter sharp s = ess-zed,
                                     U+00DF ISOlat1 --&gt;
&lt;!ENTITY agrave &quot;&amp;#224;&quot; &gt;&lt;!-- latin small letter a with grave
                                     = latin small letter a grave,
                                     U+00E0 ISOlat1 --&gt;
&lt;!ENTITY aacute &quot;&amp;#225;&quot; &gt;&lt;!-- latin small letter a with acute,
                                     U+00E1 ISOlat1 --&gt;
&lt;!ENTITY acirc  &quot;&amp;#226;&quot; &gt;&lt;!-- latin small letter a with circumflex,
                                     U+00E2 ISOlat1 --&gt;
&lt;!ENTITY atilde &quot;&amp;#227;&quot; &gt;&lt;!-- latin small letter a with tilde,
                                     U+00E3 ISOlat1 --&gt;
&lt;!ENTITY auml   &quot;&amp;#228;&quot; &gt;&lt;!-- latin small letter a with diaeresis,
                                     U+00E4 ISOlat1 --&gt;
&lt;!ENTITY aring  &quot;&amp;#229;&quot; &gt;&lt;!-- latin small letter a with ring above
                                     = latin small letter a ring,
                                     U+00E5 ISOlat1 --&gt;
&lt;!ENTITY aelig  &quot;&amp;#230;&quot; &gt;&lt;!-- latin small letter ae
                                     = latin small ligature ae,
                                     U+00E6 ISOlat1 --&gt;
&lt;!ENTITY ccedil &quot;&amp;#231;&quot; &gt;&lt;!-- latin small letter c with cedilla,
                                     U+00E7 ISOlat1 --&gt;
&lt;!ENTITY egrave &quot;&amp;#232;&quot; &gt;&lt;!-- latin small letter e with grave,
                                     U+00E8 ISOlat1 --&gt;
&lt;!ENTITY eacute &quot;&amp;#233;&quot; &gt;&lt;!-- latin small letter e with acute,
                                     U+00E9 ISOlat1 --&gt;
&lt;!ENTITY ecirc  &quot;&amp;#234;&quot; &gt;&lt;!-- latin small letter e with circumflex,
                                     U+00EA ISOlat1 --&gt;
&lt;!ENTITY euml   &quot;&amp;#235;&quot; &gt;&lt;!-- latin small letter e with diaeresis,
                                     U+00EB ISOlat1 --&gt;
&lt;!ENTITY igrave &quot;&amp;#236;&quot; &gt;&lt;!-- latin small letter i with grave,
                                     U+00EC ISOlat1 --&gt;
&lt;!ENTITY iacute &quot;&amp;#237;&quot; &gt;&lt;!-- latin small letter i with acute,
                                     U+00ED ISOlat1 --&gt;
&lt;!ENTITY icirc  &quot;&amp;#238;&quot; &gt;&lt;!-- latin small letter i with circumflex,
                                     U+00EE ISOlat1 --&gt;
&lt;!ENTITY iuml   &quot;&amp;#239;&quot; &gt;&lt;!-- latin small letter i with diaeresis,
                                     U+00EF ISOlat1 --&gt;
&lt;!ENTITY eth    &quot;&amp;#240;&quot; &gt;&lt;!-- latin small letter eth,
                                     U+00F0 ISOlat1 --&gt;
&lt;!ENTITY ntilde &quot;&amp;#241;&quot; &gt;&lt;!-- latin small letter n with tilde,
                                     U+00F1 ISOlat1 --&gt;
&lt;!ENTITY ograve &quot;&amp;#242;&quot; &gt;&lt;!-- latin small letter o with grave,
                                     U+00F2 ISOlat1 --&gt;
&lt;!ENTITY oacute &quot;&amp;#243;&quot; &gt;&lt;!-- latin small letter o with acute,
                                     U+00F3 ISOlat1 --&gt;
&lt;!ENTITY ocirc  &quot;&amp;#244;&quot; &gt;&lt;!-- latin small letter o with circumflex,
                                     U+00F4 ISOlat1 --&gt;
&lt;!ENTITY otilde &quot;&amp;#245;&quot; &gt;&lt;!-- latin small letter o with tilde,
                                     U+00F5 ISOlat1 --&gt;
&lt;!ENTITY ouml   &quot;&amp;#246;&quot; &gt;&lt;!-- latin small letter o with diaeresis,
                                     U+00F6 ISOlat1 --&gt;
&lt;!ENTITY divide &quot;&amp;#247;&quot; &gt;&lt;!-- division sign,
                                     U+00F7 ISOnum --&gt;
&lt;!ENTITY oslash &quot;&amp;#248;&quot; &gt;&lt;!-- latin small letter o with stroke,
                                     = latin small letter o slash,
                                     U+00F8 ISOlat1 --&gt;
&lt;!ENTITY ugrave &quot;&amp;#249;&quot; &gt;&lt;!-- latin small letter u with grave,
                                     U+00F9 ISOlat1 --&gt;
&lt;!ENTITY uacute &quot;&amp;#250;&quot; &gt;&lt;!-- latin small letter u with acute,
                                     U+00FA ISOlat1 --&gt;
&lt;!ENTITY ucirc  &quot;&amp;#251;&quot; &gt;&lt;!-- latin small letter u with circumflex,
                                     U+00FB ISOlat1 --&gt;
&lt;!ENTITY uuml   &quot;&amp;#252;&quot; &gt;&lt;!-- latin small letter u with diaeresis,
                                     U+00FC ISOlat1 --&gt;
&lt;!ENTITY yacute &quot;&amp;#253;&quot; &gt;&lt;!-- latin small letter y with acute,
                                     U+00FD ISOlat1 --&gt;
&lt;!ENTITY thorn  &quot;&amp;#254;&quot; &gt;&lt;!-- latin small letter thorn with,
                                     U+00FE ISOlat1 --&gt;
&lt;!ENTITY yuml   &quot;&amp;#255;&quot; &gt;&lt;!-- latin small letter y with diaeresis,
                                     U+00FF ISOlat1 --&gt;
&lt;!-- end of xhtml-lat1.ent --&gt;

</pre>

<h3><a name="a_module_XHTML_Special_Characters" id="a_module_XHTML_Special_Characters">F.1.2.</a> XHTML Special Characters</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XML-compatible ISO Special Character Entity Set for XHTML ............ --&gt;
&lt;!-- file: xhtml-special.ent

     Typical invocation:

       &lt;!ENTITY <span class="entity">% xhtml-special</span>
           PUBLIC &quot;-//W3C//ENTITIES Special for XHTML//EN&quot;
                  &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-special.ent&quot; &gt;
       %xhtml-special;

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

     PUBLIC &quot;-//W3C//ENTITIES Special for XHTML//EN&quot;
     SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-special.ent&quot;

     Revision:  $x36;Id: xhtml-special.ent,v 1.2 2000/02/03 15:59:28 ahby Exp $x36; SMI

     Portions (C) International Organization for Standardization 1986:
     Permission to copy in any form is granted for use with conforming 
     SGML systems and applications as defined in ISO 8879, provided 
     this notice is included in all copies.
--&gt;

&lt;!-- Relevant ISO entity set is given unless names are newly introduced.
     New names (i.e., not in ISO 8879 list) do not clash with any
     existing ISO 8879 entity names. ISO 10646 character numbers
     are given for each character, in hex. CDATA values are decimal
     conversions of the ISO 10646 values and refer to the document
     character set. Names are Unicode 2.0 names.
--&gt;

&lt;!-- C0 Controls and Basic Latin --&gt;
&lt;!ENTITY quot    &quot;&amp;#34;&quot; &gt;&lt;!-- quotation mark = APL quote, U+0022 ISOnum --&gt;
&lt;!ENTITY amp     &quot;&amp;#38;&quot; &gt;&lt;!-- ampersand, U+0026 ISOnum --&gt;
&lt;!ENTITY lt      &quot;&amp;#60;&quot; &gt;&lt;!-- less-than sign, U+003C ISOnum --&gt;
&lt;!ENTITY gt      &quot;&amp;#62;&quot; &gt;&lt;!-- greater-than sign, U+003E ISOnum --&gt;

&lt;!-- Latin Extended-A --&gt;
&lt;!ENTITY OElig   &quot;&amp;#338;&quot; &gt;&lt;!-- latin capital ligature OE, U+0152 ISOlat2 --&gt;
&lt;!ENTITY oelig   &quot;&amp;#339;&quot; &gt;&lt;!-- latin small ligature oe, U+0153 ISOlat2 --&gt;

&lt;!-- ligature is a misnomer, this is a separate character in some languages --&gt;
&lt;!ENTITY Scaron  &quot;&amp;#352;&quot; &gt;&lt;!-- latin capital letter S with caron,
                                      U+0160 ISOlat2 --&gt;
&lt;!ENTITY scaron  &quot;&amp;#353;&quot; &gt;&lt;!-- latin small letter s with caron,
                                      U+0161 ISOlat2 --&gt;
&lt;!ENTITY Yuml    &quot;&amp;#376;&quot; &gt;&lt;!-- latin capital letter Y with diaeresis,
                                      U+0178 ISOlat2 --&gt;

&lt;!-- Spacing Modifier Letters --&gt;
&lt;!ENTITY circ    &quot;&amp;#710;&quot; &gt;&lt;!-- modifier letter circumflex accent,
                                      U+02C6 ISOpub --&gt;
&lt;!ENTITY tilde   &quot;&amp;#732;&quot; &gt;&lt;!-- small tilde, U+02DC ISOdia --&gt;

&lt;!-- General Punctuation --&gt;
&lt;!ENTITY ensp    &quot;&amp;#8194;&quot; &gt;&lt;!-- en space, U+2002 ISOpub --&gt;
&lt;!ENTITY emsp    &quot;&amp;#8195;&quot; &gt;&lt;!-- em space, U+2003 ISOpub --&gt;
&lt;!ENTITY thinsp  &quot;&amp;#8201;&quot; &gt;&lt;!-- thin space, U+2009 ISOpub --&gt;
&lt;!ENTITY zwnj    &quot;&amp;#8204;&quot; &gt;&lt;!-- zero width non-joiner,
                                       U+200C NEW RFC 2070 --&gt;
&lt;!ENTITY zwj     &quot;&amp;#8205;&quot; &gt;&lt;!-- zero width joiner, U+200D NEW RFC 2070 --&gt;
&lt;!ENTITY lrm     &quot;&amp;#8206;&quot; &gt;&lt;!-- left-to-right mark, U+200E NEW RFC 2070 --&gt;
&lt;!ENTITY rlm     &quot;&amp;#8207;&quot; &gt;&lt;!-- right-to-left mark, U+200F NEW RFC 2070 --&gt;
&lt;!ENTITY ndash   &quot;&amp;#8211;&quot; &gt;&lt;!-- en dash, U+2013 ISOpub --&gt;
&lt;!ENTITY mdash   &quot;&amp;#8212;&quot; &gt;&lt;!-- em dash, U+2014 ISOpub --&gt;
&lt;!ENTITY lsquo   &quot;&amp;#8216;&quot; &gt;&lt;!-- left single quotation mark,
                                       U+2018 ISOnum --&gt;
&lt;!ENTITY rsquo   &quot;&amp;#8217;&quot; &gt;&lt;!-- right single quotation mark,
                                       U+2019 ISOnum --&gt;
&lt;!ENTITY sbquo   &quot;&amp;#8218;&quot; &gt;&lt;!-- single low-9 quotation mark, U+201A NEW --&gt;
&lt;!ENTITY ldquo   &quot;&amp;#8220;&quot; &gt;&lt;!-- left double quotation mark,
                                       U+201C ISOnum --&gt;
&lt;!ENTITY rdquo   &quot;&amp;#8221;&quot; &gt;&lt;!-- right double quotation mark,
                                       U+201D ISOnum --&gt;
&lt;!ENTITY bdquo   &quot;&amp;#8222;&quot; &gt;&lt;!-- double low-9 quotation mark, U+201E NEW --&gt;
&lt;!ENTITY dagger  &quot;&amp;#8224;&quot; &gt;&lt;!-- dagger, U+2020 ISOpub --&gt;
&lt;!ENTITY Dagger  &quot;&amp;#8225;&quot; &gt;&lt;!-- double dagger, U+2021 ISOpub --&gt;
&lt;!ENTITY permil  &quot;&amp;#8240;&quot; &gt;&lt;!-- per mille sign, U+2030 ISOtech --&gt;

&lt;!-- lsaquo is proposed but not yet ISO standardized --&gt;
&lt;!ENTITY lsaquo  &quot;&amp;#8249;&quot; &gt;&lt;!-- single left-pointing angle quotation mark,
                                       U+2039 ISO proposed --&gt;
&lt;!-- rsaquo is proposed but not yet ISO standardized --&gt;
&lt;!ENTITY rsaquo  &quot;&amp;#8250;&quot; &gt;&lt;!-- single right-pointing angle quotation mark,
                                       U+203A ISO proposed --&gt;
&lt;!ENTITY euro    &quot;&amp;#8364;&quot; &gt;&lt;!-- euro sign, U+20AC NEW --&gt;

&lt;!-- end of xhtml-special.ent --&gt;

</pre>

<h3><a name="a_module_XHTML_Mathematical__Greek__and_Symbolic_Characters" id="a_module_XHTML_Mathematical__Greek__and_Symbolic_Characters">F.1.3.</a> XHTML Mathematical, Greek, and Symbolic Characters</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- ISO Math, Greek and Symbolic Character Entity Set for XHTML .......... --&gt;
&lt;!-- file: xhtml-symbol.ent

     Typical invocation:

       &lt;!ENTITY <span class="entity">% xhtml-symbol</span>
           PUBLIC &quot;-//W3C//ENTITIES Symbols for XHTML//EN&quot;
                  &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-symbol.ent&quot; &gt;
       %xhtml-symbol;

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES Symbols for XHTML//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-symbol.ent&quot;

     Revision:  $x36;Id: xhtml-symbol.ent,v 1.2 2000/02/03 15:59:28 ahby Exp $x36; SMI

     Portions (C) International Organization for Standardization 1986:
     Permission to copy in any form is granted for use with conforming 
     SGML systems and applications as defined in ISO 8879, provided 
     this notice is included in all copies.
--&gt;

&lt;!-- Relevant ISO entity set is given unless names are newly introduced.
     New names (i.e., not in ISO 8879 list) do not clash with any
     existing ISO 8879 entity names. ISO 10646 character numbers
     are given for each character, in hex. CDATA values are decimal
     conversions of the ISO 10646 values and refer to the document
     character set. Names are Unicode 2.0 names.
--&gt;

&lt;!-- Latin Extended-B --&gt;
&lt;!ENTITY fnof     &quot;&amp;#402;&quot; &gt;&lt;!-- latin small f with hook = function
                              = florin, U+0192 ISOtech --&gt;

&lt;!-- Greek --&gt;
&lt;!ENTITY Alpha    &quot;&amp;#913;&quot; &gt;&lt;!-- greek capital letter alpha, U+0391 --&gt;
&lt;!ENTITY Beta     &quot;&amp;#914;&quot; &gt;&lt;!-- greek capital letter beta, U+0392 --&gt;
&lt;!ENTITY Gamma    &quot;&amp;#915;&quot; &gt;&lt;!-- greek capital letter gamma, U+0393 ISOgrk3 --&gt;
&lt;!ENTITY Delta    &quot;&amp;#916;&quot; &gt;&lt;!-- greek capital letter delta, U+0394 ISOgrk3 --&gt;
&lt;!ENTITY Epsilon  &quot;&amp;#917;&quot; &gt;&lt;!-- greek capital letter epsilon, U+0395 --&gt;
&lt;!ENTITY Zeta     &quot;&amp;#918;&quot; &gt;&lt;!-- greek capital letter zeta, U+0396 --&gt;
&lt;!ENTITY Eta      &quot;&amp;#919;&quot; &gt;&lt;!-- greek capital letter eta, U+0397 --&gt;
&lt;!ENTITY Theta    &quot;&amp;#920;&quot; &gt;&lt;!-- greek capital letter theta, U+0398 ISOgrk3 --&gt;
&lt;!ENTITY Iota     &quot;&amp;#921;&quot; &gt;&lt;!-- greek capital letter iota, U+0399 --&gt;
&lt;!ENTITY Kappa    &quot;&amp;#922;&quot; &gt;&lt;!-- greek capital letter kappa, U+039A --&gt;
&lt;!ENTITY Lambda   &quot;&amp;#923;&quot; &gt;&lt;!-- greek capital letter lambda, U+039B ISOgrk3 --&gt;
&lt;!ENTITY Mu       &quot;&amp;#924;&quot; &gt;&lt;!-- greek capital letter mu, U+039C --&gt;
&lt;!ENTITY Nu       &quot;&amp;#925;&quot; &gt;&lt;!-- greek capital letter nu, U+039D --&gt;
&lt;!ENTITY Xi       &quot;&amp;#926;&quot; &gt;&lt;!-- greek capital letter xi, U+039E ISOgrk3 --&gt;
&lt;!ENTITY Omicron  &quot;&amp;#927;&quot; &gt;&lt;!-- greek capital letter omicron, U+039F --&gt;
&lt;!ENTITY Pi       &quot;&amp;#928;&quot; &gt;&lt;!-- greek capital letter pi, U+03A0 ISOgrk3 --&gt;
&lt;!ENTITY Rho      &quot;&amp;#929;&quot; &gt;&lt;!-- greek capital letter rho, U+03A1 --&gt;
&lt;!-- there is no Sigmaf, and no U+03A2 character either --&gt;
&lt;!ENTITY Sigma    &quot;&amp;#931;&quot; &gt;&lt;!-- greek capital letter sigma, U+03A3 ISOgrk3 --&gt;
&lt;!ENTITY Tau      &quot;&amp;#932;&quot; &gt;&lt;!-- greek capital letter tau, U+03A4 --&gt;
&lt;!ENTITY Upsilon  &quot;&amp;#933;&quot; &gt;&lt;!-- greek capital letter upsilon,
                              U+03A5 ISOgrk3 --&gt;
&lt;!ENTITY Phi      &quot;&amp;#934;&quot; &gt;&lt;!-- greek capital letter phi, U+03A6 ISOgrk3 --&gt;
&lt;!ENTITY Chi      &quot;&amp;#935;&quot; &gt;&lt;!-- greek capital letter chi, U+03A7 --&gt;
&lt;!ENTITY Psi      &quot;&amp;#936;&quot; &gt;&lt;!-- greek capital letter psi, U+03A8 ISOgrk3 --&gt;
&lt;!ENTITY Omega    &quot;&amp;#937;&quot; &gt;&lt;!-- greek capital letter omega, U+03A9 ISOgrk3 --&gt;
&lt;!ENTITY alpha    &quot;&amp;#945;&quot; &gt;&lt;!-- greek small letter alpha, U+03B1 ISOgrk3 --&gt;
&lt;!ENTITY beta     &quot;&amp;#946;&quot; &gt;&lt;!-- greek small letter beta, U+03B2 ISOgrk3 --&gt;
&lt;!ENTITY gamma    &quot;&amp;#947;&quot; &gt;&lt;!-- greek small letter gamma, U+03B3 ISOgrk3 --&gt;
&lt;!ENTITY delta    &quot;&amp;#948;&quot; &gt;&lt;!-- greek small letter delta, U+03B4 ISOgrk3 --&gt;
&lt;!ENTITY epsilon  &quot;&amp;#949;&quot; &gt;&lt;!-- greek small letter epsilon, U+03B5 ISOgrk3 --&gt;
&lt;!ENTITY zeta     &quot;&amp;#950;&quot; &gt;&lt;!-- greek small letter zeta, U+03B6 ISOgrk3 --&gt;
&lt;!ENTITY eta      &quot;&amp;#951;&quot; &gt;&lt;!-- greek small letter eta, U+03B7 ISOgrk3 --&gt;
&lt;!ENTITY theta    &quot;&amp;#952;&quot; &gt;&lt;!-- greek small letter theta, U+03B8 ISOgrk3 --&gt;
&lt;!ENTITY iota     &quot;&amp;#953;&quot; &gt;&lt;!-- greek small letter iota, U+03B9 ISOgrk3 --&gt;
&lt;!ENTITY kappa    &quot;&amp;#954;&quot; &gt;&lt;!-- greek small letter kappa, U+03BA ISOgrk3 --&gt;
&lt;!ENTITY lambda   &quot;&amp;#955;&quot; &gt;&lt;!-- greek small letter lambda, U+03BB ISOgrk3 --&gt;
&lt;!ENTITY mu       &quot;&amp;#956;&quot; &gt;&lt;!-- greek small letter mu, U+03BC ISOgrk3 --&gt;
&lt;!ENTITY nu       &quot;&amp;#957;&quot; &gt;&lt;!-- greek small letter nu, U+03BD ISOgrk3 --&gt;
&lt;!ENTITY xi       &quot;&amp;#958;&quot; &gt;&lt;!-- greek small letter xi, U+03BE ISOgrk3 --&gt;
&lt;!ENTITY omicron  &quot;&amp;#959;&quot; &gt;&lt;!-- greek small letter omicron, U+03BF NEW --&gt;
&lt;!ENTITY pi       &quot;&amp;#960;&quot; &gt;&lt;!-- greek small letter pi, U+03C0 ISOgrk3 --&gt;
&lt;!ENTITY rho      &quot;&amp;#961;&quot; &gt;&lt;!-- greek small letter rho, U+03C1 ISOgrk3 --&gt;
&lt;!ENTITY sigmaf   &quot;&amp;#962;&quot; &gt;&lt;!-- greek small letter final sigma,
                              U+03C2 ISOgrk3 --&gt;
&lt;!ENTITY sigma    &quot;&amp;#963;&quot; &gt;&lt;!-- greek small letter sigma, U+03C3 ISOgrk3 --&gt;
&lt;!ENTITY tau      &quot;&amp;#964;&quot; &gt;&lt;!-- greek small letter tau, U+03C4 ISOgrk3 --&gt;
&lt;!ENTITY upsilon  &quot;&amp;#965;&quot; &gt;&lt;!-- greek small letter upsilon,
                              U+03C5 ISOgrk3 --&gt;
&lt;!ENTITY phi      &quot;&amp;#966;&quot; &gt;&lt;!-- greek small letter phi, U+03C6 ISOgrk3 --&gt;
&lt;!ENTITY chi      &quot;&amp;#967;&quot; &gt;&lt;!-- greek small letter chi, U+03C7 ISOgrk3 --&gt;
&lt;!ENTITY psi      &quot;&amp;#968;&quot; &gt;&lt;!-- greek small letter psi, U+03C8 ISOgrk3 --&gt;
&lt;!ENTITY omega    &quot;&amp;#969;&quot; &gt;&lt;!-- greek small letter omega, U+03C9 ISOgrk3 --&gt;
&lt;!ENTITY thetasym &quot;&amp;#977;&quot; &gt;&lt;!-- greek small letter theta symbol,
                              U+03D1 NEW --&gt;
&lt;!ENTITY upsih    &quot;&amp;#978;&quot; &gt;&lt;!-- greek upsilon with hook symbol,
                              U+03D2 NEW --&gt;
&lt;!ENTITY piv      &quot;&amp;#982;&quot; &gt;&lt;!-- greek pi symbol, U+03D6 ISOgrk3 --&gt;

&lt;!-- General Punctuation --&gt;
&lt;!ENTITY bull     &quot;&amp;#8226;&quot; &gt;&lt;!-- bullet = black small circle,
                               U+2022 ISOpub  --&gt;
&lt;!-- bullet is NOT the same as bullet operator, U+2219 --&gt;
&lt;!ENTITY hellip   &quot;&amp;#8230;&quot; &gt;&lt;!-- horizontal ellipsis = three dot leader,
                               U+2026 ISOpub  --&gt;
&lt;!ENTITY prime    &quot;&amp;#8242;&quot; &gt;&lt;!-- prime = minutes = feet, U+2032 ISOtech --&gt;
&lt;!ENTITY Prime    &quot;&amp;#8243;&quot; &gt;&lt;!-- double prime = seconds = inches,
                               U+2033 ISOtech --&gt;
&lt;!ENTITY oline    &quot;&amp;#8254;&quot; &gt;&lt;!-- overline = spacing overscore,
                               U+203E NEW --&gt;
&lt;!ENTITY frasl    &quot;&amp;#8260;&quot; &gt;&lt;!-- fraction slash, U+2044 NEW --&gt;

&lt;!-- Letterlike Symbols --&gt;
&lt;!ENTITY weierp   &quot;&amp;#8472;&quot; &gt;&lt;!-- script capital P = power set
                               = Weierstrass p, U+2118 ISOamso --&gt;
&lt;!ENTITY image    &quot;&amp;#8465;&quot; &gt;&lt;!-- blackletter capital I = imaginary part,
                               U+2111 ISOamso --&gt;
&lt;!ENTITY real     &quot;&amp;#8476;&quot; &gt;&lt;!-- blackletter capital R = real part symbol,
                               U+211C ISOamso --&gt;
&lt;!ENTITY trade    &quot;&amp;#8482;&quot; &gt;&lt;!-- trade mark sign, U+2122 ISOnum --&gt;
&lt;!ENTITY alefsym  &quot;&amp;#8501;&quot; &gt;&lt;!-- alef symbol = first transfinite cardinal,
                               U+2135 NEW --&gt;
&lt;!-- alef symbol is NOT the same as hebrew letter alef,
     U+05D0 although the same glyph could be used to depict both characters --&gt;

&lt;!-- Arrows --&gt;
&lt;!ENTITY larr     &quot;&amp;#8592;&quot; &gt;&lt;!-- leftwards arrow, U+2190 ISOnum --&gt;
&lt;!ENTITY uarr     &quot;&amp;#8593;&quot; &gt;&lt;!-- upwards arrow, U+2191 ISOnum--&gt;
&lt;!ENTITY rarr     &quot;&amp;#8594;&quot; &gt;&lt;!-- rightwards arrow, U+2192 ISOnum --&gt;
&lt;!ENTITY darr     &quot;&amp;#8595;&quot; &gt;&lt;!-- downwards arrow, U+2193 ISOnum --&gt;
&lt;!ENTITY harr     &quot;&amp;#8596;&quot; &gt;&lt;!-- left right arrow, U+2194 ISOamsa --&gt;
&lt;!ENTITY crarr    &quot;&amp;#8629;&quot; &gt;&lt;!-- downwards arrow with corner leftwards
                               = carriage return, U+21B5 NEW --&gt;
&lt;!ENTITY lArr     &quot;&amp;#8656;&quot; &gt;&lt;!-- leftwards double arrow, U+21D0 ISOtech --&gt;
&lt;!-- Unicode does not say that lArr is the same as the 'is implied by' arrow
    but also does not have any other character for that function. So ? lArr can
    be used for 'is implied by' as ISOtech suggests --&gt;
&lt;!ENTITY uArr     &quot;&amp;#8657;&quot; &gt;&lt;!-- upwards double arrow, U+21D1 ISOamsa --&gt;
&lt;!ENTITY rArr     &quot;&amp;#8658;&quot; &gt;&lt;!-- rightwards double arrow,
                               U+21D2 ISOtech --&gt;
&lt;!-- Unicode does not say this is the 'implies' character but does not have
     another character with this function so ?
     rArr can be used for 'implies' as ISOtech suggests --&gt;
&lt;!ENTITY dArr     &quot;&amp;#8659;&quot; &gt;&lt;!-- downwards double arrow, U+21D3 ISOamsa --&gt;
&lt;!ENTITY hArr     &quot;&amp;#8660;&quot; &gt;&lt;!-- left right double arrow,
                               U+21D4 ISOamsa --&gt;

&lt;!-- Mathematical Operators --&gt;
&lt;!ENTITY forall   &quot;&amp;#8704;&quot; &gt;&lt;!-- for all, U+2200 ISOtech --&gt;
&lt;!ENTITY part     &quot;&amp;#8706;&quot; &gt;&lt;!-- partial differential, U+2202 ISOtech  --&gt;
&lt;!ENTITY exist    &quot;&amp;#8707;&quot; &gt;&lt;!-- there exists, U+2203 ISOtech --&gt;
&lt;!ENTITY empty    &quot;&amp;#8709;&quot; &gt;&lt;!-- empty set = null set = diameter,
                               U+2205 ISOamso --&gt;
&lt;!ENTITY nabla    &quot;&amp;#8711;&quot; &gt;&lt;!-- nabla = backward difference,
                               U+2207 ISOtech --&gt;
&lt;!ENTITY isin     &quot;&amp;#8712;&quot; &gt;&lt;!-- element of, U+2208 ISOtech --&gt;
&lt;!ENTITY notin    &quot;&amp;#8713;&quot; &gt;&lt;!-- not an element of, U+2209 ISOtech --&gt;
&lt;!ENTITY ni       &quot;&amp;#8715;&quot; &gt;&lt;!-- contains as member, U+220B ISOtech --&gt;
&lt;!-- should there be a more memorable name than 'ni'? --&gt;
&lt;!ENTITY prod     &quot;&amp;#8719;&quot; &gt;&lt;!-- n-ary product = product sign,
                               U+220F ISOamsb --&gt;
&lt;!-- prod is NOT the same character as U+03A0 'greek capital letter pi' though
     the same glyph might be used for both --&gt;
&lt;!ENTITY sum      &quot;&amp;#8721;&quot; &gt;&lt;!-- n-ary sumation, U+2211 ISOamsb --&gt;
&lt;!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'
     though the same glyph might be used for both --&gt;
&lt;!ENTITY minus    &quot;&amp;#8722;&quot; &gt;&lt;!-- minus sign, U+2212 ISOtech --&gt;
&lt;!ENTITY lowast   &quot;&amp;#8727;&quot; &gt;&lt;!-- asterisk operator, U+2217 ISOtech --&gt;
&lt;!ENTITY radic    &quot;&amp;#8730;&quot; &gt;&lt;!-- square root = radical sign,
                               U+221A ISOtech --&gt;
&lt;!ENTITY prop     &quot;&amp;#8733;&quot; &gt;&lt;!-- proportional to, U+221D ISOtech --&gt;
&lt;!ENTITY infin    &quot;&amp;#8734;&quot; &gt;&lt;!-- infinity, U+221E ISOtech --&gt;
&lt;!ENTITY ang      &quot;&amp;#8736;&quot; &gt;&lt;!-- angle, U+2220 ISOamso --&gt;
&lt;!ENTITY and      &quot;&amp;#8743;&quot; &gt;&lt;!-- logical and = wedge, U+2227 ISOtech --&gt;
&lt;!ENTITY or       &quot;&amp;#8744;&quot; &gt;&lt;!-- logical or = vee, U+2228 ISOtech --&gt;
&lt;!ENTITY cap      &quot;&amp;#8745;&quot; &gt;&lt;!-- intersection = cap, U+2229 ISOtech --&gt;
&lt;!ENTITY cup      &quot;&amp;#8746;&quot; &gt;&lt;!-- union = cup, U+222A ISOtech --&gt;
&lt;!ENTITY int      &quot;&amp;#8747;&quot; &gt;&lt;!-- integral, U+222B ISOtech --&gt;
&lt;!ENTITY there4   &quot;&amp;#8756;&quot; &gt;&lt;!-- therefore, U+2234 ISOtech --&gt;
&lt;!ENTITY sim      &quot;&amp;#8764;&quot; &gt;&lt;!-- tilde operator = varies with = similar to,
                               U+223C ISOtech --&gt;
&lt;!-- tilde operator is NOT the same character as the tilde, U+007E,
     although the same glyph might be used to represent both  --&gt;
&lt;!ENTITY cong     &quot;&amp;#8773;&quot; &gt;&lt;!-- approximately equal to, U+2245 ISOtech --&gt;
&lt;!ENTITY asymp    &quot;&amp;#8776;&quot; &gt;&lt;!-- almost equal to = asymptotic to,
                               U+2248 ISOamsr --&gt;
&lt;!ENTITY ne       &quot;&amp;#8800;&quot; &gt;&lt;!-- not equal to, U+2260 ISOtech --&gt;
&lt;!ENTITY equiv    &quot;&amp;#8801;&quot; &gt;&lt;!-- identical to, U+2261 ISOtech --&gt;
&lt;!ENTITY le       &quot;&amp;#8804;&quot; &gt;&lt;!-- less-than or equal to, U+2264 ISOtech --&gt;
&lt;!ENTITY ge       &quot;&amp;#8805;&quot; &gt;&lt;!-- greater-than or equal to,
                               U+2265 ISOtech --&gt;
&lt;!ENTITY sub      &quot;&amp;#8834;&quot; &gt;&lt;!-- subset of, U+2282 ISOtech --&gt;
&lt;!ENTITY sup      &quot;&amp;#8835;&quot; &gt;&lt;!-- superset of, U+2283 ISOtech --&gt;
&lt;!-- note that nsup, 'not a superset of, U+2283' is not covered by the Symbol
     font encoding and is not included. Should it be, for symmetry?
     It is in ISOamsn  --&gt;
&lt;!ENTITY nsub     &quot;&amp;#8836;&quot; &gt;&lt;!-- not a subset of, U+2284 ISOamsn --&gt;
&lt;!ENTITY sube     &quot;&amp;#8838;&quot; &gt;&lt;!-- subset of or equal to, U+2286 ISOtech --&gt;
&lt;!ENTITY supe     &quot;&amp;#8839;&quot; &gt;&lt;!-- superset of or equal to,
                               U+2287 ISOtech --&gt;
&lt;!ENTITY oplus    &quot;&amp;#8853;&quot; &gt;&lt;!-- circled plus = direct sum,
                               U+2295 ISOamsb --&gt;
&lt;!ENTITY otimes   &quot;&amp;#8855;&quot; &gt;&lt;!-- circled times = vector product,
                               U+2297 ISOamsb --&gt;
&lt;!ENTITY perp     &quot;&amp;#8869;&quot; &gt;&lt;!-- up tack = orthogonal to = perpendicular,
                               U+22A5 ISOtech --&gt;
&lt;!ENTITY sdot     &quot;&amp;#8901;&quot; &gt;&lt;!-- dot operator, U+22C5 ISOamsb --&gt;
&lt;!-- dot operator is NOT the same character as U+00B7 middle dot --&gt;

&lt;!-- Miscellaneous Technical --&gt;
&lt;!ENTITY lceil    &quot;&amp;#8968;&quot; &gt;&lt;!-- left ceiling = apl upstile,
                               U+2308 ISOamsc  --&gt;
&lt;!ENTITY rceil    &quot;&amp;#8969;&quot; &gt;&lt;!-- right ceiling, U+2309 ISOamsc  --&gt;
&lt;!ENTITY lfloor   &quot;&amp;#8970;&quot; &gt;&lt;!-- left floor = apl downstile,
                               U+230A ISOamsc  --&gt;
&lt;!ENTITY rfloor   &quot;&amp;#8971;&quot; &gt;&lt;!-- right floor, U+230B ISOamsc  --&gt;
&lt;!ENTITY lang     &quot;&amp;#9001;&quot; &gt;&lt;!-- left-pointing angle bracket = bra,
                               U+2329 ISOtech --&gt;
&lt;!-- lang is NOT the same character as U+003C 'less than'
     or U+2039 'single left-pointing angle quotation mark' --&gt;
&lt;!ENTITY rang     &quot;&amp;#9002;&quot; &gt;&lt;!-- right-pointing angle bracket = ket,
                               U+232A ISOtech --&gt;
&lt;!-- rang is NOT the same character as U+003E 'greater than'
     or U+203A 'single right-pointing angle quotation mark' --&gt;

&lt;!-- Geometric Shapes --&gt;
&lt;!ENTITY loz      &quot;&amp;#9674;&quot; &gt;&lt;!-- lozenge, U+25CA ISOpub --&gt;

&lt;!-- Miscellaneous Symbols --&gt;
&lt;!ENTITY spades   &quot;&amp;#9824;&quot; &gt;&lt;!-- black spade suit, U+2660 ISOpub --&gt;
&lt;!-- black here seems to mean filled as opposed to hollow --&gt;
&lt;!ENTITY clubs    &quot;&amp;#9827;&quot; &gt;&lt;!-- black club suit = shamrock,
                               U+2663 ISOpub --&gt;
&lt;!ENTITY hearts   &quot;&amp;#9829;&quot; &gt;&lt;!-- black heart suit = valentine,
                               U+2665 ISOpub --&gt;
&lt;!ENTITY diams    &quot;&amp;#9830;&quot; &gt;&lt;!-- black diamond suit, U+2666 ISOpub --&gt;

&lt;!-- end of xhtml-symbol.ent --&gt;

</pre>

<h2><a name="a_xhtml_framework" id="a_xhtml_framework">F.2.</a> XHTML Modular Framework</h2>

<p>In order to take advantage of the XHTML DTD Modules, DTD authors need to define the content model for their DTD. XHTML provides a variety of tools to ease this effort. They are defined in a set of support modules, instantiated by a main Framework module:</p>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Modular Framework Module  ...................................... --&gt;
&lt;!-- file: xhtml-framework-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-framework-1.mod,v 3.1 2000/11/15 22:02:08 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES XHTML Modular Framework 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-framework-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Modular Framework

     This required module instantiates the modules needed
     to support the XHTML modularization model, including:

        +  notations
        +  datatypes
        +  namespace-qualified names
        +  common attributes
        +  document model
        +  character entities

     The Intrinsic Events module is ignored by default but
     occurs in this module because it must be instantiated
     prior to Attributes but after Datatypes.
--&gt;

&lt;!ENTITY <span class="entity">% xhtml-arch.module</span> &quot;IGNORE&quot; &gt;
&lt;![%xhtml-arch.module;[
&lt;!ENTITY <span class="entity">% xhtml-arch.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Base Architecture 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-arch-1.mod&quot; &gt;
%xhtml-arch.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-notations.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-notations.module;[
&lt;!ENTITY <span class="entity">% xhtml-notations.mod</span>
     PUBLIC &quot;-//W3C//NOTATIONS XHTML Notations 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-notations-1.mod&quot; &gt;
%xhtml-notations.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-datatypes.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-datatypes.module;[
&lt;!ENTITY <span class="entity">% xhtml-datatypes.mod</span>
     PUBLIC &quot;-//W3C//ENTITIES XHTML Datatypes 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-datatypes-1.mod&quot; &gt;
%xhtml-datatypes.mod;]]&gt;

&lt;!-- placeholder for XLink support module --&gt;
&lt;!ENTITY <span class="entity">% xhtml-xlink.mod</span> &quot;&quot; &gt;
%xhtml-xlink.mod;

&lt;!ENTITY <span class="entity">% xhtml-qname.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-qname.module;[
&lt;!ENTITY <span class="entity">% xhtml-qname.mod</span>
     PUBLIC &quot;-//W3C//ENTITIES XHTML Qualified Names 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-qname-1.mod&quot; &gt;
%xhtml-qname.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-events.module</span> &quot;IGNORE&quot; &gt;
&lt;![%xhtml-events.module;[
&lt;!ENTITY <span class="entity">% xhtml-events.mod</span>
     PUBLIC &quot;-//W3C//ENTITIES XHTML Intrinsic Events 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-events-1.mod&quot; &gt;
%xhtml-events.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-attribs.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-attribs.module;[
&lt;!ENTITY <span class="entity">% xhtml-attribs.mod</span>
     PUBLIC &quot;-//W3C//ENTITIES XHTML Common Attributes 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-attribs-1.mod&quot; &gt;
%xhtml-attribs.mod;]]&gt;

&lt;!-- placeholder for content model redeclarations --&gt;
&lt;!ENTITY <span class="entity">% xhtml-model.redecl</span> &quot;&quot; &gt;
%xhtml-model.redecl;

&lt;!ENTITY <span class="entity">% xhtml-model.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-model.module;[
&lt;!-- instantiate the Document Model module declared in the DTD driver
--&gt;
%xhtml-model.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-charent.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-charent.module;[
&lt;!ENTITY <span class="entity">% xhtml-charent.mod</span>
     PUBLIC &quot;-//W3C//ENTITIES XHTML Character Entities 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-charent-1.mod&quot; &gt;
%xhtml-charent.mod;]]&gt;

&lt;!-- end of xhtml-framework-1.mod --&gt;

</pre>

<p>Note that the module above references a content model module. This module is defined on a per-document type basis in addition to the document type driver file. The Modular framework also relies upon the following component modules:</p>

<h3><a name="a_module_XHTML_Base_Architecture" id="a_module_XHTML_Base_Architecture">F.2.1.</a> XHTML Base Architecture</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Base Architecture Module  ...................................... --&gt;
&lt;!-- file: xhtml-arch-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-arch-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Base Architecture 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-arch-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- This optional module includes declarations that enable XHTML to be used
     as a base architecture according to the 'Architectural Forms Definition
     Requirements' (Annex A.3, ISO/IEC 10744, 2nd edition). For more information
     on use of architectural forms, see the HyTime web site at:

         http://www.hytime.org/
--&gt;

&lt;?IS10744 ArcBase xhtml ?&gt;

&lt;!NOTATION xhtml PUBLIC &quot;-//W3C//NOTATION AFDR ARCBASE XHTML 1.1//EN&quot; &gt;

&lt;!-- Entity declaration for associated Architectural DTD
--&gt;
&lt;!ENTITY xhtml-arch.dtd
      PUBLIC &quot;-//W3C//DTD XHTML Architecture 1.1//EN&quot;
             &quot;xhtml11-arch.dtd&quot; &gt;

&lt;?IS10744:arch xhtml
    public-id       =  &quot;-//W3C//NOTATION AFDR ARCBASE XHTML 1.1//EN&quot;
    dtd-public-id   =  &quot;-//W3C//DTD XHTML 1.1//EN&quot;
    dtd-system-id   =  &quot;xhtml11.dtd&quot;
    doc-elem-form   =  &quot;html&quot;
    form-att        =  &quot;html&quot;
    renamer-att     =  &quot;htnames&quot;
    suppressor-att  =  &quot;htsupp&quot;
    data-ignore-att =  &quot;htign&quot;
    auto            =  &quot;ArcAuto&quot;
    options         =  &quot;HtModReq HtModOpt&quot;
    HtModReq        =  &quot;Framework Text Hypertext Lists Structure&quot;
    HtModOpt        =  &quot;Standard&quot;
?&gt;

&lt;!-- end of xhtml-arch-1.mod --&gt;

</pre>

<h3><a name="a_module_XHTML_Notations" id="a_module_XHTML_Notations">F.2.2.</a> XHTML Notations</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Notations Module  .............................................. --&gt;
&lt;!-- file: xhtml-notations-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-notations-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36;

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//NOTATIONS XHTML Notations 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-notations-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Notations

     defines the following notations, many of these imported from 
     other specifications and standards. When an existing FPI is
     known, it is incorporated here.
--&gt;

&lt;!-- XML Notations ..................................... --&gt;
&lt;!-- SGML and XML Notations ............................ --&gt;

&lt;!-- W3C XML 1.0 Recommendation --&gt;
&lt;!NOTATION w3c-xml 
     PUBLIC &quot;ISO 8879//NOTATION Extensible Markup Language (XML) 1.0//EN&quot; &gt;

&lt;!-- XML 1.0 CDATA --&gt;
&lt;!NOTATION cdata 
     PUBLIC &quot;-//W3C//NOTATION XML 1.0: CDATA//EN&quot; &gt;

&lt;!-- SGML Formal Public Identifiers --&gt;
&lt;!NOTATION fpi
     PUBLIC &quot;ISO 8879:1986//NOTATION Formal Public Identifier//EN&quot; &gt;

&lt;!-- XHTML Notations ................................... --&gt;

&lt;!-- Length defined for cellpadding/cellspacing --&gt;

&lt;!-- nn for pixels or nn% for percentage length --&gt;
&lt;!NOTATION length 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Length//EN&quot; &gt;

&lt;!-- space-separated list of link types --&gt;
&lt;!NOTATION linkTypes 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: LinkTypes//EN&quot; &gt;

&lt;!-- single or comma-separated list of media descriptors --&gt;
&lt;!NOTATION mediaDesc 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: MediaDesc//EN&quot; &gt;

&lt;!-- pixel, percentage, or relative --&gt;
&lt;!NOTATION multiLength 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: MultiLength//EN&quot; &gt;

&lt;!-- one or more digits (NUMBER) --&gt;
&lt;!NOTATION number 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Number//EN&quot; &gt;

&lt;!-- integer representing length in pixels --&gt;
&lt;!NOTATION pixels 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Pixels//EN&quot; &gt;

&lt;!-- script expression --&gt;
&lt;!NOTATION script 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Script//EN&quot; &gt;

&lt;!-- textual content --&gt;
&lt;!NOTATION text 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Text//EN&quot; &gt;

&lt;!-- Imported Notations ................................ --&gt;

&lt;!-- a single character from [ISO10646] --&gt;
&lt;!NOTATION character 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Character//EN&quot; &gt;

&lt;!-- a character encoding, as per [RFC2045] --&gt;
&lt;!NOTATION charset 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Charset//EN&quot; &gt;

&lt;!-- a space separated list of character encodings, as per [RFC2045] --&gt;
&lt;!NOTATION charsets 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Charsets//EN&quot; &gt;

&lt;!-- media type, as per [RFC2045] --&gt;
&lt;!NOTATION contentType 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: ContentType//EN&quot; &gt;

&lt;!-- comma-separated list of media types, as per [RFC2045] --&gt;
&lt;!NOTATION contentTypes 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: ContentTypes//EN&quot; &gt;

&lt;!-- date and time information. ISO date format --&gt;
&lt;!NOTATION datetime 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: Datetime//EN&quot; &gt;

&lt;!-- a language code, as per [RFC1766] --&gt;
&lt;!NOTATION languageCode 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: LanguageCode//EN&quot; &gt;

&lt;!-- a Uniform Resource Identifier, see [URI] --&gt;
&lt;!NOTATION uri 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: URI//EN&quot; &gt;

&lt;!-- a space-separated list of Uniform Resource Identifiers, see [URI] --&gt;
&lt;!NOTATION uris 
    PUBLIC &quot;-//W3C//NOTATION XHTML Datatype: URIs//EN&quot; &gt;

&lt;!-- end of xhtml-notations-1.mod --&gt;

</pre>

<h3><a name="a_module_XHTML_Datatypes" id="a_module_XHTML_Datatypes">F.2.3.</a> XHTML Datatypes</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Datatypes Module  .............................................. --&gt;
&lt;!-- file: xhtml-datatypes-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-datatypes-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES XHTML Datatypes 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-datatypes-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Datatypes

     defines containers for the following datatypes, many of
     these imported from other specifications and standards.
--&gt;

&lt;!-- Length defined for cellpadding/cellspacing --&gt;

&lt;!-- nn for pixels or nn% for percentage length --&gt;
&lt;!ENTITY <span class="entity">% Length.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- space-separated list of link types --&gt;
&lt;!ENTITY <span class="entity">% LinkTypes.datatype</span> &quot;NMTOKENS&quot; &gt;

&lt;!-- single or comma-separated list of media descriptors --&gt;
&lt;!ENTITY <span class="entity">% MediaDesc.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- pixel, percentage, or relative --&gt;
&lt;!ENTITY <span class="entity">% MultiLength.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- one or more digits (NUMBER) --&gt;
&lt;!ENTITY <span class="entity">% Number.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- integer representing length in pixels --&gt;
&lt;!ENTITY <span class="entity">% Pixels.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- script expression --&gt;
&lt;!ENTITY <span class="entity">% Script.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- textual content --&gt;
&lt;!ENTITY <span class="entity">% Text.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- Imported Datatypes ................................ --&gt;

&lt;!-- a single character from [ISO10646] --&gt;
&lt;!ENTITY <span class="entity">% Character.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- a character encoding, as per [RFC2045] --&gt;
&lt;!ENTITY <span class="entity">% Charset.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- a space separated list of character encodings, as per [RFC2045] --&gt;
&lt;!ENTITY <span class="entity">% Charsets.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- media type, as per [RFC2045] --&gt;
&lt;!ENTITY <span class="entity">% ContentType.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- comma-separated list of media types, as per [RFC2045] --&gt;
&lt;!ENTITY <span class="entity">% ContentTypes.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- date and time information. ISO date format --&gt;
&lt;!ENTITY <span class="entity">% Datetime.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- formal public identifier, as per [ISO8879] --&gt;
&lt;!ENTITY <span class="entity">% FPI.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- a language code, as per [RFC1766] --&gt;
&lt;!ENTITY <span class="entity">% LanguageCode.datatype</span> &quot;NMTOKEN&quot; &gt;

&lt;!-- a Uniform Resource Identifier, see [URI] --&gt;
&lt;!ENTITY <span class="entity">% URI.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- a space-separated list of Uniform Resource Identifiers, see [URI] --&gt;
&lt;!ENTITY <span class="entity">% URIs.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- end of xhtml-datatypes-1.mod --&gt;

</pre>

<h3><a name="a_module_XHTML_Common_Attribute_Definitions" id="a_module_XHTML_Common_Attribute_Definitions">F.2.4.</a> XHTML Common Attribute Definitions</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Common Attributes Module  ...................................... --&gt;
&lt;!-- file: xhtml-attribs-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-attribs-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES XHTML Common Attributes 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-attribs-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Common Attributes

     This module declares many of the common attributes for the XHTML DTD.
     %NS.decl.attrib; is declared in the XHTML Qname module.
--&gt;

&lt;!ENTITY <span class="entity">% id.attrib</span>
     &quot;id           ID                       #IMPLIED&quot;
&gt;

&lt;!ENTITY <span class="entity">% class.attrib</span>
     &quot;class        NMTOKENS                 #IMPLIED&quot;
&gt;

&lt;!ENTITY <span class="entity">% title.attrib</span>
     &quot;title        %Text.datatype;          #IMPLIED&quot;
&gt;

&lt;!ENTITY <span class="entity">% Core.extra.attrib</span> &quot;&quot; &gt;

&lt;!ENTITY <span class="entity">% Core.attrib</span>
     &quot;%XHTML.xmlns.attrib;
      %id.attrib;
      %class.attrib;
      %title.attrib;
      %Core.extra.attrib;&quot;
&gt;

&lt;!ENTITY <span class="entity">% lang.attrib</span>
     &quot;xml:lang     %LanguageCode.datatype;  #IMPLIED&quot;
&gt;

&lt;![%XHTML.bidi;[
&lt;!ENTITY <span class="entity">% dir.attrib</span>
     &quot;dir          ( ltr | rtl )            #IMPLIED&quot;
&gt;

&lt;!ENTITY <span class="entity">% I18n.attrib</span>
     &quot;%dir.attrib;
      %lang.attrib;&quot;
&gt;

]]&gt;
&lt;!ENTITY <span class="entity">% I18n.attrib</span>
     &quot;%lang.attrib;&quot;
&gt;

&lt;!ENTITY <span class="entity">% Common.extra.attrib</span> &quot;&quot; &gt;

&lt;!-- intrinsic event attributes declared previously
--&gt;
&lt;!ENTITY <span class="entity">% Events.attrib</span> &quot;&quot; &gt;

&lt;!ENTITY <span class="entity">% Common.attrib</span>
     &quot;%Core.attrib;
      %I18n.attrib;
      %Events.attrib;
      %Common.extra.attrib;&quot;
&gt;

&lt;!-- end of xhtml-attribs-1.mod --&gt;

</pre>

<h3><a name="a_module_XHTML_Qualified_Names" id="a_module_XHTML_Qualified_Names">F.2.5.</a> XHTML Qualified Names</h3>

<pre class="dtd">
&lt;!-- ....................................................................... --&gt;
&lt;!-- XHTML Qname Module  ................................................... --&gt;
&lt;!-- file: xhtml-qname-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-qname-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES XHTML Qualified Names 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-qname-1.mod&quot;

     Revisions:
2000-10-22: added qname declarations for ruby elements
     ....................................................................... --&gt;

&lt;!-- XHTML Qname (Qualified Name) Module

     This module is contained in two parts, labeled Section 'A' and 'B':

       Section A declares parameter entities to support namespace-
       qualified names, namespace declarations, and name prefixing 
       for XHTML and extensions.
    
       Section B declares parameter entities used to provide
       namespace-qualified names for all XHTML element types:

         %applet.qname;   the xmlns-qualified name for &lt;applet&gt;
         %base.qname;     the xmlns-qualified name for &lt;base&gt;
         ...

     XHTML extensions would create a module similar to this one. 
     Included in the XHTML distribution is a template module 
     ('template-qname-1.mod') suitable for this purpose.
--&gt;

&lt;!-- Section A: XHTML XML Namespace Framework :::::::::::::::::::: --&gt;

&lt;!-- 1. Declare a %XHTML.prefixed; conditional section keyword, used
        to activate namespace prefixing. The default value should 
        inherit '%NS.prefixed;' from the DTD driver, so that unless 
        overridden, the default behaviour follows the overall DTD 
        prefixing scheme.
--&gt;
&lt;!ENTITY <span class="entity">% NS.prefixed</span> &quot;IGNORE&quot; &gt;
&lt;!ENTITY <span class="entity">% XHTML.prefixed</span> &quot;%NS.prefixed;&quot; &gt;

&lt;!-- 2. Declare a parameter entity (eg., %XHTML.xmlns;) containing 
        the URI reference used to identify the XHTML namespace:
--&gt;
&lt;!ENTITY <span class="entity">% XHTML.xmlns</span>  &quot;http://www.w3.org/1999/xhtml&quot; &gt;

&lt;!-- 3. Declare parameter entities (eg., %XHTML.prefix;) containing
        the default namespace prefix string(s) to use when prefixing 
        is enabled. This may be overridden in the DTD driver or the
        internal subset of an document instance. If no default prefix
        is desired, this may be declared as an empty string.

     NOTE: As specified in [XMLNAMES], the namespace prefix serves 
     as a proxy for the URI reference, and is not in itself significant.
--&gt;
&lt;!ENTITY <span class="entity">% XHTML.prefix</span>  &quot;&quot; &gt;

&lt;!-- 4. Declare parameter entities (eg., %XHTML.pfx;) containing the 
        colonized prefix(es) (eg., '%XHTML.prefix;:') used when 
        prefixing is active, an empty string when it is not.
--&gt;
&lt;![%XHTML.prefixed;[
&lt;!ENTITY <span class="entity">% XHTML.pfx</span>  &quot;%XHTML.prefix;:&quot; &gt;
]]&gt;
&lt;!ENTITY <span class="entity">% XHTML.pfx</span>  &quot;&quot; &gt;

&lt;!-- declare qualified name extensions here ............ --&gt;
&lt;!ENTITY <span class="entity">% xhtml-qname-extra.mod</span> &quot;&quot; &gt;
%xhtml-qname-extra.mod;

&lt;!-- 5. The parameter entity %XHTML.xmlns.extra.attrib; may be
        redeclared to contain any non-XHTML namespace declaration 
        attributes for namespaces embedded in XHTML. The default 
        is an empty string.  XLink should be included here if used 
        in the DTD.
--&gt;
&lt;!ENTITY <span class="entity">% XHTML.xmlns.extra.attrib</span> &quot;&quot; &gt;

&lt;!-- The remainder of Section A is only followed in XHTML, not extensions. --&gt;

&lt;!-- Declare a parameter entity %NS.decl.attrib; containing
     all XML Namespace declarations used in the DTD, plus the
     xmlns declaration for XHTML, its form dependent on whether 
     prefixing is active. 
--&gt;
&lt;![%XHTML.prefixed;[
&lt;!ENTITY <span class="entity">% NS.decl.attrib</span>
     &quot;xmlns:%XHTML.prefix;  %URI.datatype;   #FIXED '%XHTML.xmlns;'
      %XHTML.xmlns.extra.attrib;&quot;
&gt;
]]&gt;
&lt;!ENTITY <span class="entity">% NS.decl.attrib</span>
     &quot;%XHTML.xmlns.extra.attrib;&quot;
&gt;

&lt;!-- This is a placeholder for future XLink support.
--&gt;
&lt;!ENTITY <span class="entity">% XLINK.xmlns.attrib</span> &quot;&quot; &gt;

&lt;!-- Declare a parameter entity %NS.decl.attrib; containing all 
     XML namespace declaration attributes used by XHTML, including
     a default xmlns attribute when prefixing is inactive.
--&gt;
&lt;![%XHTML.prefixed;[
&lt;!ENTITY <span class="entity">% XHTML.xmlns.attrib</span>
     &quot;%NS.decl.attrib;
      %XLINK.xmlns.attrib;&quot;
&gt;
]]&gt;
&lt;!ENTITY <span class="entity">% XHTML.xmlns.attrib</span>
     &quot;xmlns        %URI.datatype;           #FIXED '%XHTML.xmlns;'
      %NS.decl.attrib;
      %XLINK.xmlns.attrib;&quot;
&gt;

&lt;!-- placeholder for qualified name redeclarations --&gt;
&lt;!ENTITY <span class="entity">% xhtml-qname.redecl</span> &quot;&quot; &gt;
%xhtml-qname.redecl;

&lt;!-- Section B: XHTML Qualified Names ::::::::::::::::::::::::::::: --&gt;

&lt;!-- 6. This section declares parameter entities used to provide
        namespace-qualified names for all XHTML element types.
--&gt;

&lt;!-- module:  xhtml-applet-1.mod --&gt;
&lt;!ENTITY <span class="entity">% applet.qname</span>  &quot;%XHTML.pfx;applet&quot; &gt;

&lt;!-- module:  xhtml-base-1.mod --&gt;
&lt;!ENTITY <span class="entity">% base.qname</span>    &quot;%XHTML.pfx;base&quot; &gt;

&lt;!-- module:  xhtml-bdo-1.mod --&gt;
&lt;!ENTITY <span class="entity">% bdo.qname</span>     &quot;%XHTML.pfx;bdo&quot; &gt;

&lt;!-- module:  xhtml-blkphras-1.mod --&gt;
&lt;!ENTITY <span class="entity">% address.qname</span> &quot;%XHTML.pfx;address&quot; &gt;
&lt;!ENTITY <span class="entity">% blockquote.qname</span>  &quot;%XHTML.pfx;blockquote&quot; &gt;
&lt;!ENTITY <span class="entity">% pre.qname</span>     &quot;%XHTML.pfx;pre&quot; &gt;
&lt;!ENTITY <span class="entity">% h1.qname</span>      &quot;%XHTML.pfx;h1&quot; &gt;
&lt;!ENTITY <span class="entity">% h2.qname</span>      &quot;%XHTML.pfx;h2&quot; &gt;
&lt;!ENTITY <span class="entity">% h3.qname</span>      &quot;%XHTML.pfx;h3&quot; &gt;
&lt;!ENTITY <span class="entity">% h4.qname</span>      &quot;%XHTML.pfx;h4&quot; &gt;
&lt;!ENTITY <span class="entity">% h5.qname</span>      &quot;%XHTML.pfx;h5&quot; &gt;
&lt;!ENTITY <span class="entity">% h6.qname</span>      &quot;%XHTML.pfx;h6&quot; &gt;

&lt;!-- module:  xhtml-blkpres-1.mod --&gt;
&lt;!ENTITY <span class="entity">% hr.qname</span>      &quot;%XHTML.pfx;hr&quot; &gt;

&lt;!-- module:  xhtml-blkstruct-1.mod --&gt;
&lt;!ENTITY <span class="entity">% div.qname</span>     &quot;%XHTML.pfx;div&quot; &gt;
&lt;!ENTITY <span class="entity">% p.qname</span>       &quot;%XHTML.pfx;p&quot; &gt;

&lt;!-- module:  xhtml-edit-1.mod --&gt;
&lt;!ENTITY <span class="entity">% ins.qname</span>     &quot;%XHTML.pfx;ins&quot; &gt;
&lt;!ENTITY <span class="entity">% del.qname</span>     &quot;%XHTML.pfx;del&quot; &gt;

&lt;!-- module:  xhtml-form-1.mod --&gt;
&lt;!ENTITY <span class="entity">% form.qname</span>    &quot;%XHTML.pfx;form&quot; &gt;
&lt;!ENTITY <span class="entity">% label.qname</span>   &quot;%XHTML.pfx;label&quot; &gt;
&lt;!ENTITY <span class="entity">% input.qname</span>   &quot;%XHTML.pfx;input&quot; &gt;
&lt;!ENTITY <span class="entity">% select.qname</span>  &quot;%XHTML.pfx;select&quot; &gt;
&lt;!ENTITY <span class="entity">% optgroup.qname</span>  &quot;%XHTML.pfx;optgroup&quot; &gt;
&lt;!ENTITY <span class="entity">% option.qname</span>  &quot;%XHTML.pfx;option&quot; &gt;
&lt;!ENTITY <span class="entity">% textarea.qname</span>  &quot;%XHTML.pfx;textarea&quot; &gt;
&lt;!ENTITY <span class="entity">% fieldset.qname</span>  &quot;%XHTML.pfx;fieldset&quot; &gt;
&lt;!ENTITY <span class="entity">% legend.qname</span>  &quot;%XHTML.pfx;legend&quot; &gt;
&lt;!ENTITY <span class="entity">% button.qname</span>  &quot;%XHTML.pfx;button&quot; &gt;

&lt;!-- module:  xhtml-hypertext-1.mod --&gt;
&lt;!ENTITY <span class="entity">% a.qname</span>       &quot;%XHTML.pfx;a&quot; &gt;

&lt;!-- module:  xhtml-image-1.mod --&gt;
&lt;!ENTITY <span class="entity">% img.qname</span>     &quot;%XHTML.pfx;img&quot; &gt;

&lt;!-- module:  xhtml-inlphras-1.mod --&gt;
&lt;!ENTITY <span class="entity">% abbr.qname</span>    &quot;%XHTML.pfx;abbr&quot; &gt;
&lt;!ENTITY <span class="entity">% acronym.qname</span> &quot;%XHTML.pfx;acronym&quot; &gt;
&lt;!ENTITY <span class="entity">% cite.qname</span>    &quot;%XHTML.pfx;cite&quot; &gt;
&lt;!ENTITY <span class="entity">% code.qname</span>    &quot;%XHTML.pfx;code&quot; &gt;
&lt;!ENTITY <span class="entity">% dfn.qname</span>     &quot;%XHTML.pfx;dfn&quot; &gt;
&lt;!ENTITY <span class="entity">% em.qname</span>      &quot;%XHTML.pfx;em&quot; &gt;
&lt;!ENTITY <span class="entity">% kbd.qname</span>     &quot;%XHTML.pfx;kbd&quot; &gt;
&lt;!ENTITY <span class="entity">% q.qname</span>       &quot;%XHTML.pfx;q&quot; &gt;
&lt;!ENTITY <span class="entity">% samp.qname</span>    &quot;%XHTML.pfx;samp&quot; &gt;
&lt;!ENTITY <span class="entity">% strong.qname</span>  &quot;%XHTML.pfx;strong&quot; &gt;
&lt;!ENTITY <span class="entity">% var.qname</span>     &quot;%XHTML.pfx;var&quot; &gt;

&lt;!-- module:  xhtml-inlpres-1.mod --&gt;
&lt;!ENTITY <span class="entity">% b.qname</span>       &quot;%XHTML.pfx;b&quot; &gt;
&lt;!ENTITY <span class="entity">% big.qname</span>     &quot;%XHTML.pfx;big&quot; &gt;
&lt;!ENTITY <span class="entity">% i.qname</span>       &quot;%XHTML.pfx;i&quot; &gt;
&lt;!ENTITY <span class="entity">% small.qname</span>   &quot;%XHTML.pfx;small&quot; &gt;
&lt;!ENTITY <span class="entity">% sub.qname</span>     &quot;%XHTML.pfx;sub&quot; &gt;
&lt;!ENTITY <span class="entity">% sup.qname</span>     &quot;%XHTML.pfx;sup&quot; &gt;
&lt;!ENTITY <span class="entity">% tt.qname</span>      &quot;%XHTML.pfx;tt&quot; &gt;

&lt;!-- module:  xhtml-inlstruct-1.mod --&gt;
&lt;!ENTITY <span class="entity">% br.qname</span>      &quot;%XHTML.pfx;br&quot; &gt;
&lt;!ENTITY <span class="entity">% span.qname</span>    &quot;%XHTML.pfx;span&quot; &gt;

&lt;!-- module:  xhtml-ismap-1.mod (also csismap, ssismap) --&gt;
&lt;!ENTITY <span class="entity">% map.qname</span>     &quot;%XHTML.pfx;map&quot; &gt;
&lt;!ENTITY <span class="entity">% area.qname</span>    &quot;%XHTML.pfx;area&quot; &gt;

&lt;!-- module:  xhtml-link-1.mod --&gt;
&lt;!ENTITY <span class="entity">% link.qname</span>    &quot;%XHTML.pfx;link&quot; &gt;

&lt;!-- module:  xhtml-list-1.mod --&gt;
&lt;!ENTITY <span class="entity">% dl.qname</span>      &quot;%XHTML.pfx;dl&quot; &gt;
&lt;!ENTITY <span class="entity">% dt.qname</span>      &quot;%XHTML.pfx;dt&quot; &gt;
&lt;!ENTITY <span class="entity">% dd.qname</span>      &quot;%XHTML.pfx;dd&quot; &gt;
&lt;!ENTITY <span class="entity">% ol.qname</span>      &quot;%XHTML.pfx;ol&quot; &gt;
&lt;!ENTITY <span class="entity">% ul.qname</span>      &quot;%XHTML.pfx;ul&quot; &gt;
&lt;!ENTITY <span class="entity">% li.qname</span>      &quot;%XHTML.pfx;li&quot; &gt;

&lt;!-- module:  xhtml-meta-1.mod --&gt;
&lt;!ENTITY <span class="entity">% meta.qname</span>    &quot;%XHTML.pfx;meta&quot; &gt;

&lt;!-- module:  xhtml-param-1.mod --&gt;
&lt;!ENTITY <span class="entity">% param.qname</span>   &quot;%XHTML.pfx;param&quot; &gt;

&lt;!-- module:  xhtml-object-1.mod --&gt;
&lt;!ENTITY <span class="entity">% object.qname</span>  &quot;%XHTML.pfx;object&quot; &gt;

&lt;!-- module:  xhtml-script-1.mod --&gt;
&lt;!ENTITY <span class="entity">% script.qname</span>  &quot;%XHTML.pfx;script&quot; &gt;
&lt;!ENTITY <span class="entity">% noscript.qname</span>  &quot;%XHTML.pfx;noscript&quot; &gt;

&lt;!-- module:  xhtml-struct-1.mod --&gt;
&lt;!ENTITY <span class="entity">% html.qname</span>    &quot;%XHTML.pfx;html&quot; &gt;
&lt;!ENTITY <span class="entity">% head.qname</span>    &quot;%XHTML.pfx;head&quot; &gt;
&lt;!ENTITY <span class="entity">% title.qname</span>   &quot;%XHTML.pfx;title&quot; &gt;
&lt;!ENTITY <span class="entity">% body.qname</span>    &quot;%XHTML.pfx;body&quot; &gt;

&lt;!-- module:  xhtml-style-1.mod --&gt;
&lt;!ENTITY <span class="entity">% style.qname</span>   &quot;%XHTML.pfx;style&quot; &gt;

&lt;!-- module:  xhtml-table-1.mod --&gt;
&lt;!ENTITY <span class="entity">% table.qname</span>   &quot;%XHTML.pfx;table&quot; &gt;
&lt;!ENTITY <span class="entity">% caption.qname</span> &quot;%XHTML.pfx;caption&quot; &gt;
&lt;!ENTITY <span class="entity">% thead.qname</span>   &quot;%XHTML.pfx;thead&quot; &gt;
&lt;!ENTITY <span class="entity">% tfoot.qname</span>   &quot;%XHTML.pfx;tfoot&quot; &gt;
&lt;!ENTITY <span class="entity">% tbody.qname</span>   &quot;%XHTML.pfx;tbody&quot; &gt;
&lt;!ENTITY <span class="entity">% colgroup.qname</span>  &quot;%XHTML.pfx;colgroup&quot; &gt;
&lt;!ENTITY <span class="entity">% col.qname</span>     &quot;%XHTML.pfx;col&quot; &gt;
&lt;!ENTITY <span class="entity">% tr.qname</span>      &quot;%XHTML.pfx;tr&quot; &gt;
&lt;!ENTITY <span class="entity">% th.qname</span>      &quot;%XHTML.pfx;th&quot; &gt;
&lt;!ENTITY <span class="entity">% td.qname</span>      &quot;%XHTML.pfx;td&quot; &gt;

&lt;!-- module:  xhtml-ruby-1.mod --&gt;

&lt;!ENTITY <span class="entity">% ruby.qname</span>    &quot;%XHTML.pfx;ruby&quot; &gt;
&lt;!ENTITY <span class="entity">% rbc.qname</span>     &quot;%XHTML.pfx;rbc&quot; &gt;
&lt;!ENTITY <span class="entity">% rtc.qname</span>     &quot;%XHTML.pfx;rtc&quot; &gt;
&lt;!ENTITY <span class="entity">% rb.qname</span>      &quot;%XHTML.pfx;rb&quot; &gt;
&lt;!ENTITY <span class="entity">% rt.qname</span>      &quot;%XHTML.pfx;rt&quot; &gt;
&lt;!ENTITY <span class="entity">% rp.qname</span>      &quot;%XHTML.pfx;rp&quot; &gt;

&lt;!-- Provisional XHTML 2.0 Qualified Names  ...................... --&gt;

&lt;!-- module:  xhtml-image-2.mod --&gt;
&lt;!ENTITY <span class="entity">% alt.qname</span>     &quot;%XHTML.pfx;alt&quot; &gt;

&lt;!-- end of xhtml-qname-1.mod --&gt;

</pre>

<h3><a name="a_module_Qualified_Names" id="a_module_Qualified_Names">F.2.6.</a> Qualified Names</h3>

<pre class="dtd">
&lt;!-- ....................................................................... --&gt;
&lt;!-- XHTML Qname Module  ................................................... --&gt;
&lt;!-- file: xhtml-qname-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-qname-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES XHTML Qualified Names 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-qname-1.mod&quot;

     Revisions:
2000-10-22: added qname declarations for ruby elements
     ....................................................................... --&gt;

&lt;!-- XHTML Qname (Qualified Name) Module

     This module is contained in two parts, labeled Section 'A' and 'B':

       Section A declares parameter entities to support namespace-
       qualified names, namespace declarations, and name prefixing 
       for XHTML and extensions.
    
       Section B declares parameter entities used to provide
       namespace-qualified names for all XHTML element types:

         %applet.qname;   the xmlns-qualified name for &lt;applet&gt;
         %base.qname;     the xmlns-qualified name for &lt;base&gt;
         ...

     XHTML extensions would create a module similar to this one. 
     Included in the XHTML distribution is a template module 
     ('template-qname-1.mod') suitable for this purpose.
--&gt;

&lt;!-- Section A: XHTML XML Namespace Framework :::::::::::::::::::: --&gt;

&lt;!-- 1. Declare a %XHTML.prefixed; conditional section keyword, used
        to activate namespace prefixing. The default value should 
        inherit '%NS.prefixed;' from the DTD driver, so that unless 
        overridden, the default behaviour follows the overall DTD 
        prefixing scheme.
--&gt;
&lt;!ENTITY <span class="entity">% NS.prefixed</span> &quot;IGNORE&quot; &gt;
&lt;!ENTITY <span class="entity">% XHTML.prefixed</span> &quot;%NS.prefixed;&quot; &gt;

&lt;!-- 2. Declare a parameter entity (eg., %XHTML.xmlns;) containing 
        the URI reference used to identify the XHTML namespace:
--&gt;
&lt;!ENTITY <span class="entity">% XHTML.xmlns</span>  &quot;http://www.w3.org/1999/xhtml&quot; &gt;

&lt;!-- 3. Declare parameter entities (eg., %XHTML.prefix;) containing
        the default namespace prefix string(s) to use when prefixing 
        is enabled. This may be overridden in the DTD driver or the
        internal subset of an document instance. If no default prefix
        is desired, this may be declared as an empty string.

     NOTE: As specified in [XMLNAMES], the namespace prefix serves 
     as a proxy for the URI reference, and is not in itself significant.
--&gt;
&lt;!ENTITY <span class="entity">% XHTML.prefix</span>  &quot;&quot; &gt;

&lt;!-- 4. Declare parameter entities (eg., %XHTML.pfx;) containing the 
        colonized prefix(es) (eg., '%XHTML.prefix;:') used when 
        prefixing is active, an empty string when it is not.
--&gt;
&lt;![%XHTML.prefixed;[
&lt;!ENTITY <span class="entity">% XHTML.pfx</span>  &quot;%XHTML.prefix;:&quot; &gt;
]]&gt;
&lt;!ENTITY <span class="entity">% XHTML.pfx</span>  &quot;&quot; &gt;

&lt;!-- declare qualified name extensions here ............ --&gt;
&lt;!ENTITY <span class="entity">% xhtml-qname-extra.mod</span> &quot;&quot; &gt;
%xhtml-qname-extra.mod;

&lt;!-- 5. The parameter entity %XHTML.xmlns.extra.attrib; may be
        redeclared to contain any non-XHTML namespace declaration 
        attributes for namespaces embedded in XHTML. The default 
        is an empty string.  XLink should be included here if used 
        in the DTD.
--&gt;
&lt;!ENTITY <span class="entity">% XHTML.xmlns.extra.attrib</span> &quot;&quot; &gt;

&lt;!-- The remainder of Section A is only followed in XHTML, not extensions. --&gt;

&lt;!-- Declare a parameter entity %NS.decl.attrib; containing
     all XML Namespace declarations used in the DTD, plus the
     xmlns declaration for XHTML, its form dependent on whether 
     prefixing is active. 
--&gt;
&lt;![%XHTML.prefixed;[
&lt;!ENTITY <span class="entity">% NS.decl.attrib</span>
     &quot;xmlns:%XHTML.prefix;  %URI.datatype;   #FIXED '%XHTML.xmlns;'
      %XHTML.xmlns.extra.attrib;&quot;
&gt;
]]&gt;
&lt;!ENTITY <span class="entity">% NS.decl.attrib</span>
     &quot;%XHTML.xmlns.extra.attrib;&quot;
&gt;

&lt;!-- This is a placeholder for future XLink support.
--&gt;
&lt;!ENTITY <span class="entity">% XLINK.xmlns.attrib</span> &quot;&quot; &gt;

&lt;!-- Declare a parameter entity %NS.decl.attrib; containing all 
     XML namespace declaration attributes used by XHTML, including
     a default xmlns attribute when prefixing is inactive.
--&gt;
&lt;![%XHTML.prefixed;[
&lt;!ENTITY <span class="entity">% XHTML.xmlns.attrib</span>
     &quot;%NS.decl.attrib;
      %XLINK.xmlns.attrib;&quot;
&gt;
]]&gt;
&lt;!ENTITY <span class="entity">% XHTML.xmlns.attrib</span>
     &quot;xmlns        %URI.datatype;           #FIXED '%XHTML.xmlns;'
      %NS.decl.attrib;
      %XLINK.xmlns.attrib;&quot;
&gt;

&lt;!-- placeholder for qualified name redeclarations --&gt;
&lt;!ENTITY <span class="entity">% xhtml-qname.redecl</span> &quot;&quot; &gt;
%xhtml-qname.redecl;

&lt;!-- Section B: XHTML Qualified Names ::::::::::::::::::::::::::::: --&gt;

&lt;!-- 6. This section declares parameter entities used to provide
        namespace-qualified names for all XHTML element types.
--&gt;

&lt;!-- module:  xhtml-applet-1.mod --&gt;
&lt;!ENTITY <span class="entity">% applet.qname</span>  &quot;%XHTML.pfx;applet&quot; &gt;

&lt;!-- module:  xhtml-base-1.mod --&gt;
&lt;!ENTITY <span class="entity">% base.qname</span>    &quot;%XHTML.pfx;base&quot; &gt;

&lt;!-- module:  xhtml-bdo-1.mod --&gt;
&lt;!ENTITY <span class="entity">% bdo.qname</span>     &quot;%XHTML.pfx;bdo&quot; &gt;

&lt;!-- module:  xhtml-blkphras-1.mod --&gt;
&lt;!ENTITY <span class="entity">% address.qname</span> &quot;%XHTML.pfx;address&quot; &gt;
&lt;!ENTITY <span class="entity">% blockquote.qname</span>  &quot;%XHTML.pfx;blockquote&quot; &gt;
&lt;!ENTITY <span class="entity">% pre.qname</span>     &quot;%XHTML.pfx;pre&quot; &gt;
&lt;!ENTITY <span class="entity">% h1.qname</span>      &quot;%XHTML.pfx;h1&quot; &gt;
&lt;!ENTITY <span class="entity">% h2.qname</span>      &quot;%XHTML.pfx;h2&quot; &gt;
&lt;!ENTITY <span class="entity">% h3.qname</span>      &quot;%XHTML.pfx;h3&quot; &gt;
&lt;!ENTITY <span class="entity">% h4.qname</span>      &quot;%XHTML.pfx;h4&quot; &gt;
&lt;!ENTITY <span class="entity">% h5.qname</span>      &quot;%XHTML.pfx;h5&quot; &gt;
&lt;!ENTITY <span class="entity">% h6.qname</span>      &quot;%XHTML.pfx;h6&quot; &gt;

&lt;!-- module:  xhtml-blkpres-1.mod --&gt;
&lt;!ENTITY <span class="entity">% hr.qname</span>      &quot;%XHTML.pfx;hr&quot; &gt;

&lt;!-- module:  xhtml-blkstruct-1.mod --&gt;
&lt;!ENTITY <span class="entity">% div.qname</span>     &quot;%XHTML.pfx;div&quot; &gt;
&lt;!ENTITY <span class="entity">% p.qname</span>       &quot;%XHTML.pfx;p&quot; &gt;

&lt;!-- module:  xhtml-edit-1.mod --&gt;
&lt;!ENTITY <span class="entity">% ins.qname</span>     &quot;%XHTML.pfx;ins&quot; &gt;
&lt;!ENTITY <span class="entity">% del.qname</span>     &quot;%XHTML.pfx;del&quot; &gt;

&lt;!-- module:  xhtml-form-1.mod --&gt;
&lt;!ENTITY <span class="entity">% form.qname</span>    &quot;%XHTML.pfx;form&quot; &gt;
&lt;!ENTITY <span class="entity">% label.qname</span>   &quot;%XHTML.pfx;label&quot; &gt;
&lt;!ENTITY <span class="entity">% input.qname</span>   &quot;%XHTML.pfx;input&quot; &gt;
&lt;!ENTITY <span class="entity">% select.qname</span>  &quot;%XHTML.pfx;select&quot; &gt;
&lt;!ENTITY <span class="entity">% optgroup.qname</span>  &quot;%XHTML.pfx;optgroup&quot; &gt;
&lt;!ENTITY <span class="entity">% option.qname</span>  &quot;%XHTML.pfx;option&quot; &gt;
&lt;!ENTITY <span class="entity">% textarea.qname</span>  &quot;%XHTML.pfx;textarea&quot; &gt;
&lt;!ENTITY <span class="entity">% fieldset.qname</span>  &quot;%XHTML.pfx;fieldset&quot; &gt;
&lt;!ENTITY <span class="entity">% legend.qname</span>  &quot;%XHTML.pfx;legend&quot; &gt;
&lt;!ENTITY <span class="entity">% button.qname</span>  &quot;%XHTML.pfx;button&quot; &gt;

&lt;!-- module:  xhtml-hypertext-1.mod --&gt;
&lt;!ENTITY <span class="entity">% a.qname</span>       &quot;%XHTML.pfx;a&quot; &gt;

&lt;!-- module:  xhtml-image-1.mod --&gt;
&lt;!ENTITY <span class="entity">% img.qname</span>     &quot;%XHTML.pfx;img&quot; &gt;

&lt;!-- module:  xhtml-inlphras-1.mod --&gt;
&lt;!ENTITY <span class="entity">% abbr.qname</span>    &quot;%XHTML.pfx;abbr&quot; &gt;
&lt;!ENTITY <span class="entity">% acronym.qname</span> &quot;%XHTML.pfx;acronym&quot; &gt;
&lt;!ENTITY <span class="entity">% cite.qname</span>    &quot;%XHTML.pfx;cite&quot; &gt;
&lt;!ENTITY <span class="entity">% code.qname</span>    &quot;%XHTML.pfx;code&quot; &gt;
&lt;!ENTITY <span class="entity">% dfn.qname</span>     &quot;%XHTML.pfx;dfn&quot; &gt;
&lt;!ENTITY <span class="entity">% em.qname</span>      &quot;%XHTML.pfx;em&quot; &gt;
&lt;!ENTITY <span class="entity">% kbd.qname</span>     &quot;%XHTML.pfx;kbd&quot; &gt;
&lt;!ENTITY <span class="entity">% q.qname</span>       &quot;%XHTML.pfx;q&quot; &gt;
&lt;!ENTITY <span class="entity">% samp.qname</span>    &quot;%XHTML.pfx;samp&quot; &gt;
&lt;!ENTITY <span class="entity">% strong.qname</span>  &quot;%XHTML.pfx;strong&quot; &gt;
&lt;!ENTITY <span class="entity">% var.qname</span>     &quot;%XHTML.pfx;var&quot; &gt;

&lt;!-- module:  xhtml-inlpres-1.mod --&gt;
&lt;!ENTITY <span class="entity">% b.qname</span>       &quot;%XHTML.pfx;b&quot; &gt;
&lt;!ENTITY <span class="entity">% big.qname</span>     &quot;%XHTML.pfx;big&quot; &gt;
&lt;!ENTITY <span class="entity">% i.qname</span>       &quot;%XHTML.pfx;i&quot; &gt;
&lt;!ENTITY <span class="entity">% small.qname</span>   &quot;%XHTML.pfx;small&quot; &gt;
&lt;!ENTITY <span class="entity">% sub.qname</span>     &quot;%XHTML.pfx;sub&quot; &gt;
&lt;!ENTITY <span class="entity">% sup.qname</span>     &quot;%XHTML.pfx;sup&quot; &gt;
&lt;!ENTITY <span class="entity">% tt.qname</span>      &quot;%XHTML.pfx;tt&quot; &gt;

&lt;!-- module:  xhtml-inlstruct-1.mod --&gt;
&lt;!ENTITY <span class="entity">% br.qname</span>      &quot;%XHTML.pfx;br&quot; &gt;
&lt;!ENTITY <span class="entity">% span.qname</span>    &quot;%XHTML.pfx;span&quot; &gt;

&lt;!-- module:  xhtml-ismap-1.mod (also csismap, ssismap) --&gt;
&lt;!ENTITY <span class="entity">% map.qname</span>     &quot;%XHTML.pfx;map&quot; &gt;
&lt;!ENTITY <span class="entity">% area.qname</span>    &quot;%XHTML.pfx;area&quot; &gt;

&lt;!-- module:  xhtml-link-1.mod --&gt;
&lt;!ENTITY <span class="entity">% link.qname</span>    &quot;%XHTML.pfx;link&quot; &gt;

&lt;!-- module:  xhtml-list-1.mod --&gt;
&lt;!ENTITY <span class="entity">% dl.qname</span>      &quot;%XHTML.pfx;dl&quot; &gt;
&lt;!ENTITY <span class="entity">% dt.qname</span>      &quot;%XHTML.pfx;dt&quot; &gt;
&lt;!ENTITY <span class="entity">% dd.qname</span>      &quot;%XHTML.pfx;dd&quot; &gt;
&lt;!ENTITY <span class="entity">% ol.qname</span>      &quot;%XHTML.pfx;ol&quot; &gt;
&lt;!ENTITY <span class="entity">% ul.qname</span>      &quot;%XHTML.pfx;ul&quot; &gt;
&lt;!ENTITY <span class="entity">% li.qname</span>      &quot;%XHTML.pfx;li&quot; &gt;

&lt;!-- module:  xhtml-meta-1.mod --&gt;
&lt;!ENTITY <span class="entity">% meta.qname</span>    &quot;%XHTML.pfx;meta&quot; &gt;

&lt;!-- module:  xhtml-param-1.mod --&gt;
&lt;!ENTITY <span class="entity">% param.qname</span>   &quot;%XHTML.pfx;param&quot; &gt;

&lt;!-- module:  xhtml-object-1.mod --&gt;
&lt;!ENTITY <span class="entity">% object.qname</span>  &quot;%XHTML.pfx;object&quot; &gt;

&lt;!-- module:  xhtml-script-1.mod --&gt;
&lt;!ENTITY <span class="entity">% script.qname</span>  &quot;%XHTML.pfx;script&quot; &gt;
&lt;!ENTITY <span class="entity">% noscript.qname</span>  &quot;%XHTML.pfx;noscript&quot; &gt;

&lt;!-- module:  xhtml-struct-1.mod --&gt;
&lt;!ENTITY <span class="entity">% html.qname</span>    &quot;%XHTML.pfx;html&quot; &gt;
&lt;!ENTITY <span class="entity">% head.qname</span>    &quot;%XHTML.pfx;head&quot; &gt;
&lt;!ENTITY <span class="entity">% title.qname</span>   &quot;%XHTML.pfx;title&quot; &gt;
&lt;!ENTITY <span class="entity">% body.qname</span>    &quot;%XHTML.pfx;body&quot; &gt;

&lt;!-- module:  xhtml-style-1.mod --&gt;
&lt;!ENTITY <span class="entity">% style.qname</span>   &quot;%XHTML.pfx;style&quot; &gt;

&lt;!-- module:  xhtml-table-1.mod --&gt;
&lt;!ENTITY <span class="entity">% table.qname</span>   &quot;%XHTML.pfx;table&quot; &gt;
&lt;!ENTITY <span class="entity">% caption.qname</span> &quot;%XHTML.pfx;caption&quot; &gt;
&lt;!ENTITY <span class="entity">% thead.qname</span>   &quot;%XHTML.pfx;thead&quot; &gt;
&lt;!ENTITY <span class="entity">% tfoot.qname</span>   &quot;%XHTML.pfx;tfoot&quot; &gt;
&lt;!ENTITY <span class="entity">% tbody.qname</span>   &quot;%XHTML.pfx;tbody&quot; &gt;
&lt;!ENTITY <span class="entity">% colgroup.qname</span>  &quot;%XHTML.pfx;colgroup&quot; &gt;
&lt;!ENTITY <span class="entity">% col.qname</span>     &quot;%XHTML.pfx;col&quot; &gt;
&lt;!ENTITY <span class="entity">% tr.qname</span>      &quot;%XHTML.pfx;tr&quot; &gt;
&lt;!ENTITY <span class="entity">% th.qname</span>      &quot;%XHTML.pfx;th&quot; &gt;
&lt;!ENTITY <span class="entity">% td.qname</span>      &quot;%XHTML.pfx;td&quot; &gt;

&lt;!-- module:  xhtml-ruby-1.mod --&gt;

&lt;!ENTITY <span class="entity">% ruby.qname</span>    &quot;%XHTML.pfx;ruby&quot; &gt;
&lt;!ENTITY <span class="entity">% rbc.qname</span>     &quot;%XHTML.pfx;rbc&quot; &gt;
&lt;!ENTITY <span class="entity">% rtc.qname</span>     &quot;%XHTML.pfx;rtc&quot; &gt;
&lt;!ENTITY <span class="entity">% rb.qname</span>      &quot;%XHTML.pfx;rb&quot; &gt;
&lt;!ENTITY <span class="entity">% rt.qname</span>      &quot;%XHTML.pfx;rt&quot; &gt;
&lt;!ENTITY <span class="entity">% rp.qname</span>      &quot;%XHTML.pfx;rp&quot; &gt;

&lt;!-- Provisional XHTML 2.0 Qualified Names  ...................... --&gt;

&lt;!-- module:  xhtml-image-2.mod --&gt;
&lt;!ENTITY <span class="entity">% alt.qname</span>     &quot;%XHTML.pfx;alt&quot; &gt;

&lt;!-- end of xhtml-qname-1.mod --&gt;

</pre>

<h3><a name="a_module_XHTML_Character_Entities" id="a_module_XHTML_Character_Entities">F.2.7.</a> XHTML Character Entities</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Character Entities Module  ......................................... --&gt;
&lt;!-- file: xhtml-charent-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-charent-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES XHTML Character Entities 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-charent-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Character Entities for XHTML

     This module declares the set of character entities for XHTML,
     including the Latin 1, Symbol and Special character collections.
--&gt;

&lt;!ENTITY <span class="entity">% xhtml-lat1</span>
    PUBLIC &quot;-//W3C//ENTITIES Latin 1 for XHTML//EN&quot;
           &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent&quot; &gt;
&lt;!ENTITY <span class="entity">% xhtml-symbol</span>
    PUBLIC &quot;-//W3C//ENTITIES Symbols for XHTML//EN&quot;
           &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent&quot; &gt;
&lt;!ENTITY <span class="entity">% xhtml-special</span>
    PUBLIC &quot;-//W3C//ENTITIES Special for XHTML//EN&quot;
           &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent&quot; &gt;

%xhtml-lat1;
%xhtml-symbol;
%xhtml-special;

&lt;!-- end of xhtml-charent-1.mod --&gt;

</pre>

<h2><a name="a_dtdspecial" id="a_dtdspecial">F.3.</a> XHTML Module Implementations</h2>

<p>This section contains the formal definition of each of the XHTML Abstract Modules as a DTD module.</p>

<h3><a name="a_modules_basicmods" id="a_modules_basicmods">F.3.1.</a> XHTML Core Modules</h3>

<h4><a name="a_module_Structure" id="a_module_Structure">F.3.1.1.</a> Structure</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Structure Module  .............................................. --&gt;
&lt;!-- file: xhtml-struct-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-struct-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Document Structure 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-struct-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Document Structure

        title, head, body, html

     The Structure Module defines the major structural elements and 
     their attributes.

     Note that the content model of the head element type is redeclared 
     when the Base Module is included in the DTD.

     The parameter entity containing the XML namespace URI value used 
     for XHTML is '%XHTML.xmlns;', defined in the Qualified Names module.
--&gt;

&lt;!-- title: Document Title ............................. --&gt;

&lt;!-- The title element is not considered part of the flow of text.
     It should be displayed, for example as the page header or
     window title. Exactly one title is required per document.
--&gt;

&lt;!ENTITY <span class="entity">% title.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%title.element;[
&lt;!ENTITY <span class="entity">% title.content</span>  &quot;( #PCDATA )&quot; &gt;
&lt;!ENTITY <span class="entity">% title.qname</span>  &quot;title&quot; &gt;
&lt;!ELEMENT <span class="element">%title.qname;</span>  %title.content; &gt;
&lt;!-- end of title.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% title.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%title.attlist;[
&lt;!ATTLIST %title.qname;
      %XHTML.xmlns.attrib; 
      %I18n.attrib;
&gt;
&lt;!-- end of title.attlist --&gt;]]&gt;

&lt;!-- head: Document Head ............................... --&gt;

&lt;!ENTITY <span class="entity">% head.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%head.element;[
&lt;!ENTITY <span class="entity">% head.content</span>
    &quot;( %HeadOpts.mix;, %title.qname;, %HeadOpts.mix; )&quot;
&gt;
&lt;!ENTITY <span class="entity">% head.qname</span>  &quot;head&quot; &gt;
&lt;!ELEMENT <span class="element">%head.qname;</span>  %head.content; &gt;
&lt;!-- end of head.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% head.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%head.attlist;[
&lt;!-- reserved for future use with document profiles
--&gt;
&lt;!ENTITY <span class="entity">% profile.attrib</span>
     &quot;profile      %URI.datatype;           '%XHTML.profile;'&quot;
&gt;

&lt;!ATTLIST %head.qname;
      %XHTML.xmlns.attrib; 
      %I18n.attrib;
      %profile.attrib;
&gt;
&lt;!-- end of head.attlist --&gt;]]&gt;

&lt;!-- body: Document Body ............................... --&gt;

&lt;!ENTITY <span class="entity">% body.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%body.element;[
&lt;!ENTITY <span class="entity">% body.content</span>
     &quot;( %Block.mix; )+&quot;
&gt;
&lt;!ENTITY <span class="entity">% body.qname</span>  &quot;body&quot; &gt;
&lt;!ELEMENT <span class="element">%body.qname;</span>  %body.content; &gt;
&lt;!-- end of body.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% body.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%body.attlist;[
&lt;!ATTLIST %body.qname;
      %Common.attrib;
&gt;
&lt;!-- end of body.attlist --&gt;]]&gt;

&lt;!-- html: XHTML Document Element ...................... --&gt;

&lt;!ENTITY <span class="entity">% html.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%html.element;[
&lt;!ENTITY <span class="entity">% html.content</span>  &quot;( %head.qname;, %body.qname; )&quot; &gt;
&lt;!ENTITY <span class="entity">% html.qname</span>  &quot;html&quot; &gt;
&lt;!ELEMENT <span class="element">%html.qname;</span>  %html.content; &gt;
&lt;!-- end of html.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% html.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%html.attlist;[
&lt;!-- version attribute value defined in driver
--&gt;
&lt;!ENTITY <span class="entity">% XHTML.version.attrib</span>
     &quot;version      %FPI.datatype;           #FIXED '%XHTML.version;'&quot;
&gt;

&lt;!-- see the Qualified Names module for information 
     on how to extend XHTML using XML namespaces 
--&gt;
&lt;!ATTLIST %html.qname;
      %XHTML.xmlns.attrib; 
      %XHTML.version.attrib;
      %I18n.attrib;
&gt;
&lt;!-- end of html.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-struct-1.mod --&gt;

</pre>

<h4><a name="a_module_Text" id="a_module_Text">F.3.1.2.</a> Text</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Text Module  ................................................... --&gt;
&lt;!-- file: xhtml-text-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-text-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Text 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-text-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Textual Content

     The Text module includes declarations for all core 
     text container elements and their attributes.
--&gt;

&lt;!ENTITY <span class="entity">% xhtml-inlstruct.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-inlstruct.module;[
&lt;!ENTITY <span class="entity">% xhtml-inlstruct.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Inline Structural 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-inlstruct-1.mod&quot; &gt;
%xhtml-inlstruct.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-inlphras.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-inlphras.module;[
&lt;!ENTITY <span class="entity">% xhtml-inlphras.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Inline Phrasal 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-inlphras-1.mod&quot; &gt;
%xhtml-inlphras.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-blkstruct.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-blkstruct.module;[
&lt;!ENTITY <span class="entity">% xhtml-blkstruct.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Block Structural 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-blkstruct-1.mod&quot; &gt;
%xhtml-blkstruct.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-blkphras.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-blkphras.module;[
&lt;!ENTITY <span class="entity">% xhtml-blkphras.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Block Phrasal 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-blkphras-1.mod&quot; &gt;
%xhtml-blkphras.mod;]]&gt;

&lt;!-- end of xhtml-text-1.mod --&gt;

</pre>

<h4><a name="a_module_Hypertext" id="a_module_Hypertext">F.3.1.3.</a> Hypertext</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Hypertext Module  .............................................. --&gt;
&lt;!-- file: xhtml-hypertext-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-hypertext-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Hypertext 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-hypertext-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Hypertext

        a

     This module declares the anchor ('a') element type, which
     defines the source of a hypertext link. The destination
     (or link 'target') is identified via its 'id' attribute 
     rather than the 'name' attribute as was used in HTML.
--&gt;

&lt;!-- ............  Anchor Element  ............ --&gt;

&lt;!ENTITY <span class="entity">% a.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%a.element;[
&lt;!ENTITY <span class="entity">% a.content</span>
     &quot;( #PCDATA | %InlNoAnchor.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% a.qname</span>  &quot;a&quot; &gt;
&lt;!ELEMENT <span class="element">%a.qname;</span>  %a.content; &gt;
&lt;!-- end of a.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% a.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%a.attlist;[
&lt;!ATTLIST %a.qname;
      %Common.attrib;
      href         %URI.datatype;           #IMPLIED
      charset      %Charset.datatype;       #IMPLIED
      type         %ContentType.datatype;   #IMPLIED
      hreflang     %LanguageCode.datatype;  #IMPLIED
      rel          %LinkTypes.datatype;     #IMPLIED
      rev          %LinkTypes.datatype;     #IMPLIED
      accesskey    %Character.datatype;     #IMPLIED
      tabindex     %Number.datatype;        #IMPLIED
&gt;
&lt;!-- end of a.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-hypertext-1.mod --&gt;

</pre>

<h4><a name="a_module_Lists" id="a_module_Lists">F.3.1.4.</a> Lists</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Lists Module  .................................................. --&gt;
&lt;!-- file: xhtml-list-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-list-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Lists 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-list-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Lists

        dl, dt, dd, ol, ul, li

     This module declares the list-oriented element types
     and their attributes.
--&gt;

&lt;!ENTITY <span class="entity">% dl.qname</span>  &quot;dl&quot; &gt;
&lt;!ENTITY <span class="entity">% dt.qname</span>  &quot;dt&quot; &gt;
&lt;!ENTITY <span class="entity">% dd.qname</span>  &quot;dd&quot; &gt;
&lt;!ENTITY <span class="entity">% ol.qname</span>  &quot;ol&quot; &gt;
&lt;!ENTITY <span class="entity">% ul.qname</span>  &quot;ul&quot; &gt;
&lt;!ENTITY <span class="entity">% li.qname</span>  &quot;li&quot; &gt;

&lt;!-- dl: Definition List ............................... --&gt;

&lt;!ENTITY <span class="entity">% dl.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dl.element;[
&lt;!ENTITY <span class="entity">% dl.content</span>  &quot;( %dt.qname; | %dd.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%dl.qname;</span>  %dl.content; &gt;
&lt;!-- end of dl.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% dl.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dl.attlist;[
&lt;!ATTLIST %dl.qname;
      %Common.attrib;
&gt;
&lt;!-- end of dl.attlist --&gt;]]&gt;

&lt;!-- dt: Definition Term ............................... --&gt;

&lt;!ENTITY <span class="entity">% dt.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dt.element;[
&lt;!ENTITY <span class="entity">% dt.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%dt.qname;</span>  %dt.content; &gt;
&lt;!-- end of dt.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% dt.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dt.attlist;[
&lt;!ATTLIST %dt.qname;
      %Common.attrib;
&gt;
&lt;!-- end of dt.attlist --&gt;]]&gt;

&lt;!-- dd: Definition Description ........................ --&gt;

&lt;!ENTITY <span class="entity">% dd.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dd.element;[
&lt;!ENTITY <span class="entity">% dd.content</span>
     &quot;( #PCDATA | %Flow.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%dd.qname;</span>  %dd.content; &gt;
&lt;!-- end of dd.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% dd.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dd.attlist;[
&lt;!ATTLIST %dd.qname;
      %Common.attrib;
&gt;
&lt;!-- end of dd.attlist --&gt;]]&gt;

&lt;!-- ol: Ordered List (numbered styles) ................ --&gt;

&lt;!ENTITY <span class="entity">% ol.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%ol.element;[
&lt;!ENTITY <span class="entity">% ol.content</span>  &quot;( %li.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%ol.qname;</span>  %ol.content; &gt;
&lt;!-- end of ol.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% ol.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%ol.attlist;[
&lt;!ATTLIST %ol.qname;
      %Common.attrib;
&gt;
&lt;!-- end of ol.attlist --&gt;]]&gt;

&lt;!-- ul: Unordered List (bullet styles) ................ --&gt;

&lt;!ENTITY <span class="entity">% ul.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%ul.element;[
&lt;!ENTITY <span class="entity">% ul.content</span>  &quot;( %li.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%ul.qname;</span>  %ul.content; &gt;
&lt;!-- end of ul.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% ul.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%ul.attlist;[
&lt;!ATTLIST %ul.qname;
      %Common.attrib;
&gt;
&lt;!-- end of ul.attlist --&gt;]]&gt;

&lt;!-- li: List Item ..................................... --&gt;

&lt;!ENTITY <span class="entity">% li.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%li.element;[
&lt;!ENTITY <span class="entity">% li.content</span>
     &quot;( #PCDATA | %Flow.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%li.qname;</span>  %li.content; &gt;
&lt;!-- end of li.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% li.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%li.attlist;[
&lt;!ATTLIST %li.qname;
      %Common.attrib;
&gt;
&lt;!-- end of li.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-list-1.mod --&gt;

</pre>

<h3><a name="a_module_Applet" id="a_module_Applet">F.3.2.</a> Applet</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Java Applet Module  ............................................ --&gt;
&lt;!-- file: xhtml-applet-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-applet-1.mod,v 3.1 2000/11/15 22:02:08 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Java Applets 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-applet-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Java Applets

        applet

     This module declares the applet element type and its attributes, 
     used to provide support for Java applets. The 'alt' attribute 
     is now required (as it is on images). One of either code or 
     object attributes must be present. In the document, place param 
     elements before other content within the &lt;applet&gt; element.

     Note that use of this module requires instantiation of the 
     Param Element Module.
--&gt;

&lt;!-- applet: Java Applet ............................... --&gt;

&lt;!ENTITY <span class="entity">% applet.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%applet.element;[
&lt;!ENTITY <span class="entity">% applet.content</span>
     &quot;( %param.qname; | %Flow.mix; | #PCDATA )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% applet.qname</span>  &quot;applet&quot; &gt;
&lt;!ELEMENT <span class="element">%applet.qname;</span>  %applet.content; &gt;
&lt;!-- end of applet.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% applet.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%applet.attlist;[
&lt;!ATTLIST %applet.qname;
      %Core.attrib;
      alt          %Text.datatype;          #REQUIRED
      archive      CDATA                    #IMPLIED
      code         CDATA                    #IMPLIED
      codebase     %URI.datatype;           #IMPLIED
      object       CDATA                    #IMPLIED
      width        %Length.datatype;        #REQUIRED
      height       %Length.datatype;        #REQUIRED
&gt;
&lt;!-- end of applet.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-applet-1.mod --&gt;

</pre>

<h3><a name="a_textmodule" id="a_textmodule">F.3.3.</a> Text Modules</h3>

<h4><a name="a_module_Presentation" id="a_module_Presentation">F.3.3.1.</a> Presentation</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Presentation Module ............................................ --&gt;
&lt;!-- file: xhtml-pres-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-pres-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Presentation 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-pres-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Presentational Elements

     This module defines elements and their attributes for
     simple presentation-related markup.
--&gt;

&lt;!ENTITY <span class="entity">% xhtml-inlpres.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-inlpres.module;[
&lt;!ENTITY <span class="entity">% xhtml-inlpres.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Inline Presentation 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-inlpres-1.mod&quot; &gt;
%xhtml-inlpres.mod;]]&gt;

&lt;!ENTITY <span class="entity">% xhtml-blkpres.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-blkpres.module;[
&lt;!ENTITY <span class="entity">% xhtml-blkpres.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Block Presentation 1.0//EN&quot;
            &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-blkpres-1.mod&quot; &gt;
%xhtml-blkpres.mod;]]&gt;

&lt;!-- end of xhtml-pres-1.mod --&gt;

</pre>

<h4><a name="a_module_Edit" id="a_module_Edit">F.3.3.2.</a> Edit</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Editing Elements Module  ....................................... --&gt;
&lt;!-- file: xhtml-edit-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-edit-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Editing Markup 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-edit-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Editing Elements

        ins, del

     This module declares element types and attributes used to indicate
     inserted and deleted content while editing a document.
--&gt;

&lt;!-- ins: Inserted Text  ............................... --&gt;

&lt;!ENTITY <span class="entity">% ins.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%ins.element;[
&lt;!ENTITY <span class="entity">% ins.content</span>
     &quot;( #PCDATA | %Flow.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% ins.qname</span>  &quot;ins&quot; &gt;
&lt;!ELEMENT <span class="element">%ins.qname;</span>  %ins.content; &gt;
&lt;!-- end of ins.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% ins.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%ins.attlist;[
&lt;!ATTLIST %ins.qname;
      %Common.attrib;
      cite         %URI.datatype;           #IMPLIED
      datetime     %Datetime.datatype;      #IMPLIED
&gt;
&lt;!-- end of ins.attlist --&gt;]]&gt;

&lt;!-- del: Deleted Text  ................................ --&gt;

&lt;!ENTITY <span class="entity">% del.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%del.element;[
&lt;!ENTITY <span class="entity">% del.content</span>
     &quot;( #PCDATA | %Flow.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% del.qname</span>  &quot;del&quot; &gt;
&lt;!ELEMENT <span class="element">%del.qname;</span>  %del.content; &gt;
&lt;!-- end of del.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% del.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%del.attlist;[
&lt;!ATTLIST %del.qname;
      %Common.attrib;
      cite         %URI.datatype;           #IMPLIED
      datetime     %Datetime.datatype;      #IMPLIED
&gt;
&lt;!-- end of del.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-edit-1.mod --&gt;

</pre>

<h4><a name="a_module_Bi-directional_Text" id="a_module_Bi-directional_Text">F.3.3.3.</a> Bi-directional Text</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML BDO Element Module ............................................. --&gt;
&lt;!-- file: xhtml-bdo-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-bdo-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML BDO Element 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-bdo-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Bidirectional Override (bdo) Element

     This modules declares the element 'bdo', used to override the
     Unicode bidirectional algorithm for selected fragments of text.

     DEPENDENCIES:
     Relies on the conditional section keyword %XHTML.bidi; declared
     as &quot;INCLUDE&quot;. Bidirectional text support includes both the bdo 
     element and the 'dir' attribute.
--&gt;

&lt;!ENTITY <span class="entity">% bdo.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%bdo.element;[
&lt;!ENTITY <span class="entity">% bdo.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% bdo.qname</span>  &quot;bdo&quot; &gt;
&lt;!ELEMENT <span class="element">%bdo.qname;</span>  %bdo.content; &gt;
&lt;!-- end of bdo.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% bdo.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%bdo.attlist;[
&lt;!ATTLIST %bdo.qname;
      %Core.attrib;
      xml:lang     %LanguageCode.datatype;  #IMPLIED
      dir          ( ltr | rtl )            #REQUIRED
&gt;
]]&gt;

&lt;!-- end of xhtml-bdo-1.mod --&gt;

</pre>

<h3><a name="sec_F.3.4." id="sec_F.3.4.">F.3.4.</a> Forms</h3>

<h4><a name="a_module_Basic_Forms" id="a_module_Basic_Forms">F.3.4.1.</a> Basic Forms</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Simplified Forms Module  ....................................... --&gt;
&lt;!-- file: xhtml-basic-form-1.mod

     This is XHTML Basic, a proper subset of XHTML.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-basic-form-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Basic Forms 1.0//EN&quot;  
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-basic-form-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Basic Forms

     This forms module is based on the HTML 3.2 forms model, with
     the WAI-requested addition of the label element. While this 
     module essentially mimics the content model and attributes of 
     HTML 3.2 forms, the element types declared herein also include
     all HTML 4 common attributes.

        form, label, input, select, option, textarea
--&gt;

&lt;!-- declare qualified element type names:
--&gt;
&lt;!ENTITY <span class="entity">% form.qname</span>  &quot;form&quot; &gt;
&lt;!ENTITY <span class="entity">% label.qname</span>  &quot;label&quot; &gt;
&lt;!ENTITY <span class="entity">% input.qname</span>  &quot;input&quot; &gt;
&lt;!ENTITY <span class="entity">% select.qname</span>  &quot;select&quot; &gt;
&lt;!ENTITY <span class="entity">% option.qname</span>  &quot;option&quot; &gt;
&lt;!ENTITY <span class="entity">% textarea.qname</span>  &quot;textarea&quot; &gt;

&lt;!-- %BlkNoForm.mix; includes all non-form block elements,
     plus %Misc.class;
--&gt;
&lt;!ENTITY <span class="entity">% BlkNoForm.mix</span>
     &quot;%Heading.class;
      | %List.class;
      | %BlkStruct.class;
      %BlkPhras.class;
      %BlkPres.class;
      | %table.qname; 
      %Block.extra;
      %Misc.class;&quot;
&gt;

&lt;!-- form: Form Element ................................ --&gt;

&lt;!ENTITY <span class="entity">% form.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%form.element;[
&lt;!ENTITY <span class="entity">% form.content</span>
     &quot;( %BlkNoForm.mix; )+&quot;
&gt;
&lt;!ELEMENT <span class="element">%form.qname;</span>  %form.content; &gt;
&lt;!-- end of form.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% form.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%form.attlist;[
&lt;!ATTLIST %form.qname;
      %Common.attrib;
      action       %URI.datatype;           #REQUIRED
      method       ( get | post )           'get'
      enctype      %ContentType.datatype;   'application/x-www-form-urlencoded'
&gt;
&lt;!-- end of form.attlist --&gt;]]&gt;

&lt;!-- label: Form Field Label Text ...................... --&gt;

&lt;!ENTITY <span class="entity">% label.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%label.element;[
&lt;!-- Each label must not contain more than ONE field
--&gt;
&lt;!ENTITY <span class="entity">% label.content</span>
     &quot;( #PCDATA 
      | %input.qname; | %select.qname; | %textarea.qname;
      | %InlStruct.class;
      %InlPhras.class;
      %I18n.class;
      %InlPres.class;
      %InlSpecial.class;
      %Misc.class; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%label.qname;</span>  %label.content; &gt;
&lt;!-- end of label.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% label.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%label.attlist;[
&lt;!ATTLIST %label.qname;
      %Common.attrib;
      for          IDREF                    #IMPLIED
      accesskey    %Character.datatype;     #IMPLIED
&gt;
&lt;!-- end of label.attlist --&gt;]]&gt;

&lt;!-- input: Form Control ............................... --&gt;

&lt;!ENTITY <span class="entity">% input.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%input.element;[
&lt;!ENTITY <span class="entity">% input.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ELEMENT <span class="element">%input.qname;</span>  %input.content; &gt;
&lt;!-- end of input.element --&gt;]]&gt;

&lt;!-- Basic Forms removes 'image' and 'file' input types.
--&gt;
&lt;!ENTITY <span class="entity">% input.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%input.attlist;[
&lt;!ENTITY <span class="entity">% InputType.class</span>
     &quot;( text | password | checkbox | radio 
      | submit | reset | hidden )&quot;
&gt;
&lt;!-- attribute name required for all but submit &amp; reset
--&gt;
&lt;!ATTLIST %input.qname;
      %Common.attrib;
      type         %InputType.class;        'text'
      name         CDATA                    #IMPLIED
      value        CDATA                    #IMPLIED
      checked      ( checked )              #IMPLIED
      size         CDATA                    #IMPLIED
      maxlength    %Number.datatype;        #IMPLIED
      src          %URI.datatype;           #IMPLIED
      accesskey    %Character.datatype;     #IMPLIED
&gt;
&lt;!-- end of input.attlist --&gt;]]&gt;

&lt;!-- select: Option Selector ........................... --&gt;

&lt;!ENTITY <span class="entity">% select.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%select.element;[
&lt;!ENTITY <span class="entity">% select.content</span>  &quot;( %option.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%select.qname;</span>  %select.content; &gt;
&lt;!-- end of select.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% select.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%select.attlist;[
&lt;!ATTLIST %select.qname;
      %Common.attrib;
      name         CDATA                    #IMPLIED
      size         %Number.datatype;        #IMPLIED
      multiple     ( multiple )             #IMPLIED
&gt;
&lt;!-- end of select.attlist --&gt;]]&gt;

&lt;!-- option: Selectable Choice ......................... --&gt;

&lt;!ENTITY <span class="entity">% option.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%option.element;[
&lt;!ENTITY <span class="entity">% option.content</span>  &quot;( #PCDATA )&quot; &gt;
&lt;!ELEMENT <span class="element">%option.qname;</span>  %option.content; &gt;
&lt;!-- end of option.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% option.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%option.attlist;[
&lt;!ATTLIST %option.qname;
      %Common.attrib;
      selected     ( selected )             #IMPLIED
      value        CDATA                    #IMPLIED
&gt;
&lt;!-- end of option.attlist --&gt;]]&gt;

&lt;!-- textarea: Multi-Line Text Field ................... --&gt;

&lt;!ENTITY <span class="entity">% textarea.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%textarea.element;[
&lt;!ENTITY <span class="entity">% textarea.content</span>  &quot;( #PCDATA )&quot; &gt;
&lt;!ELEMENT <span class="element">%textarea.qname;</span>  %textarea.content; &gt;
&lt;!-- end of textarea.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% textarea.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%textarea.attlist;[
&lt;!ATTLIST %textarea.qname;
      %Common.attrib;
      name         CDATA                    #IMPLIED
      rows         %Number.datatype;        #REQUIRED
      cols         %Number.datatype;        #REQUIRED
      accesskey    %Character.datatype;     #IMPLIED
&gt;
&lt;!-- end of textarea.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-basic-form-1.mod --&gt;

</pre>

<h4><a name="a_module_Forms" id="a_module_Forms">F.3.4.2.</a> Forms</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Forms Module  .................................................. --&gt;
&lt;!-- file: xhtml-form-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-form-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Forms 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-form-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Forms

        form, label, input, select, optgroup, option,
        textarea, fieldset, legend, button

     This module declares markup to provide support for online
     forms, based on the features found in HTML 4.0 forms.
--&gt;

&lt;!-- declare qualified element type names:
--&gt;
&lt;!ENTITY <span class="entity">% form.qname</span>  &quot;form&quot; &gt;
&lt;!ENTITY <span class="entity">% label.qname</span>  &quot;label&quot; &gt;
&lt;!ENTITY <span class="entity">% input.qname</span>  &quot;input&quot; &gt;
&lt;!ENTITY <span class="entity">% select.qname</span>  &quot;select&quot; &gt;
&lt;!ENTITY <span class="entity">% optgroup.qname</span>  &quot;optgroup&quot; &gt;
&lt;!ENTITY <span class="entity">% option.qname</span>  &quot;option&quot; &gt;
&lt;!ENTITY <span class="entity">% textarea.qname</span>  &quot;textarea&quot; &gt;
&lt;!ENTITY <span class="entity">% fieldset.qname</span>  &quot;fieldset&quot; &gt;
&lt;!ENTITY <span class="entity">% legend.qname</span>  &quot;legend&quot; &gt;
&lt;!ENTITY <span class="entity">% button.qname</span>  &quot;button&quot; &gt;

&lt;!-- %BlkNoForm.mix; includes all non-form block elements,
     plus %Misc.class;
--&gt;
&lt;!ENTITY <span class="entity">% BlkNoForm.mix</span>
     &quot;%Heading.class;
      | %List.class;
      | %BlkStruct.class;
      %BlkPhras.class;
      %BlkPres.class;
      %Table.class; 
      %Block.extra;
      %Misc.class;&quot;
&gt;

&lt;!-- form: Form Element ................................ --&gt;

&lt;!ENTITY <span class="entity">% form.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%form.element;[
&lt;!ENTITY <span class="entity">% form.content</span>
     &quot;( %BlkNoForm.mix;
      | %fieldset.qname; )+&quot;
&gt;
&lt;!ELEMENT <span class="element">%form.qname;</span>  %form.content; &gt;
&lt;!-- end of form.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% form.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%form.attlist;[
&lt;!ATTLIST %form.qname;
      %Common.attrib;
      action       %URI.datatype;           #REQUIRED
      method       ( get | post )           'get'
      enctype      %ContentType.datatype;   'application/x-www-form-urlencoded'
      accept-charset %Charsets.datatype;    #IMPLIED
      accept       %ContentTypes.datatype;  #IMPLIED
&gt;
&lt;!-- end of form.attlist --&gt;]]&gt;

&lt;!-- label: Form Field Label Text ...................... --&gt;

&lt;!-- Each label must not contain more than ONE field
--&gt;

&lt;!ENTITY <span class="entity">% label.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%label.element;[
&lt;!ENTITY <span class="entity">% label.content</span>
     &quot;( #PCDATA 
      | %input.qname; | %select.qname; | %textarea.qname; | %button.qname;
      | %InlStruct.class;
      %InlPhras.class;
      %I18n.class;
      %InlPres.class;
      %Anchor.class;
      %InlSpecial.class;
      %Inline.extra;
      %Misc.class; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%label.qname;</span>  %label.content; &gt;
&lt;!-- end of label.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% label.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%label.attlist;[
&lt;!ATTLIST %label.qname;
      %Common.attrib;
      for          IDREF                    #IMPLIED
      accesskey    %Character.datatype;     #IMPLIED
&gt;
&lt;!-- end of label.attlist --&gt;]]&gt;

&lt;!-- input: Form Control ............................... --&gt;

&lt;!ENTITY <span class="entity">% input.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%input.element;[
&lt;!ENTITY <span class="entity">% input.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ELEMENT <span class="element">%input.qname;</span>  %input.content; &gt;
&lt;!-- end of input.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% input.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%input.attlist;[
&lt;!ENTITY <span class="entity">% InputType.class</span>
     &quot;( text | password | checkbox | radio | submit 
      | reset | file | hidden | image | button )&quot;
&gt;
&lt;!-- attribute 'name' required for all but submit &amp; reset
--&gt;
&lt;!ATTLIST %input.qname;
      %Common.attrib;
      type         %InputType.class;        'text'
      name         CDATA                    #IMPLIED
      value        CDATA                    #IMPLIED
      checked      ( checked )              #IMPLIED
      disabled     ( disabled )             #IMPLIED
      readonly     ( readonly )             #IMPLIED
      size         %Number.datatype;        #IMPLIED
      maxlength    %Number.datatype;        #IMPLIED
      src          %URI.datatype;           #IMPLIED
      alt          CDATA                    #IMPLIED
      tabindex     %Number.datatype;        #IMPLIED
      accesskey    %Character.datatype;     #IMPLIED
      accept       %ContentTypes.datatype;  #IMPLIED
&gt;
&lt;!-- end of input.attlist --&gt;]]&gt;

&lt;!-- select: Option Selector ........................... --&gt;

&lt;!ENTITY <span class="entity">% select.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%select.element;[
&lt;!ENTITY <span class="entity">% select.content</span>
     &quot;( %optgroup.qname; | %option.qname; )+&quot;
&gt;
&lt;!ELEMENT <span class="element">%select.qname;</span>  %select.content; &gt;
&lt;!-- end of select.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% select.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%select.attlist;[
&lt;!ATTLIST %select.qname;
      %Common.attrib;
      name         CDATA                    #IMPLIED
      size         %Number.datatype;        #IMPLIED
      multiple     ( multiple )             #IMPLIED
      disabled     ( disabled )             #IMPLIED
      tabindex     %Number.datatype;        #IMPLIED
&gt;
&lt;!-- end of select.attlist --&gt;]]&gt;

&lt;!-- optgroup: Option Group ............................ --&gt;

&lt;!ENTITY <span class="entity">% optgroup.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%optgroup.element;[
&lt;!ENTITY <span class="entity">% optgroup.content</span>  &quot;( %option.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%optgroup.qname;</span>  %optgroup.content; &gt;
&lt;!-- end of optgroup.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% optgroup.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%optgroup.attlist;[
&lt;!ATTLIST %optgroup.qname;
      %Common.attrib;
      disabled     ( disabled )             #IMPLIED
      label        %Text.datatype;          #REQUIRED
&gt;
&lt;!-- end of optgroup.attlist --&gt;]]&gt;

&lt;!-- option: Selectable Choice ......................... --&gt;

&lt;!ENTITY <span class="entity">% option.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%option.element;[
&lt;!ENTITY <span class="entity">% option.content</span>  &quot;( #PCDATA )&quot; &gt;
&lt;!ELEMENT <span class="element">%option.qname;</span>  %option.content; &gt;
&lt;!-- end of option.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% option.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%option.attlist;[
&lt;!ATTLIST %option.qname;
      %Common.attrib;
      selected     ( selected )             #IMPLIED
      disabled     ( disabled )             #IMPLIED
      label        %Text.datatype;          #IMPLIED
      value        CDATA                    #IMPLIED
&gt;
&lt;!-- end of option.attlist --&gt;]]&gt;

&lt;!-- textarea: Multi-Line Text Field ................... --&gt;

&lt;!ENTITY <span class="entity">% textarea.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%textarea.element;[
&lt;!ENTITY <span class="entity">% textarea.content</span>  &quot;( #PCDATA )&quot; &gt;
&lt;!ELEMENT <span class="element">%textarea.qname;</span>  %textarea.content; &gt;
&lt;!-- end of textarea.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% textarea.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%textarea.attlist;[
&lt;!ATTLIST %textarea.qname;
      %Common.attrib;
      name         CDATA                    #IMPLIED
      rows         %Number.datatype;        #REQUIRED
      cols         %Number.datatype;        #REQUIRED
      disabled     ( disabled )             #IMPLIED
      readonly     ( readonly )             #IMPLIED
      tabindex     %Number.datatype;        #IMPLIED
      accesskey    %Character.datatype;     #IMPLIED
&gt;
&lt;!-- end of textarea.attlist --&gt;]]&gt;

&lt;!-- fieldset: Form Control Group ...................... --&gt;

&lt;!-- #PCDATA is to solve the mixed content problem,
     per specification only whitespace is allowed
--&gt;

&lt;!ENTITY <span class="entity">% fieldset.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%fieldset.element;[
&lt;!ENTITY <span class="entity">% fieldset.content</span>
     &quot;( #PCDATA | %legend.qname; | %Flow.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%fieldset.qname;</span>  %fieldset.content; &gt;
&lt;!-- end of fieldset.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% fieldset.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%fieldset.attlist;[
&lt;!ATTLIST %fieldset.qname;
      %Common.attrib;
&gt;
&lt;!-- end of fieldset.attlist --&gt;]]&gt;

&lt;!-- legend: Fieldset Legend ........................... --&gt;

&lt;!ENTITY <span class="entity">% legend.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%legend.element;[
&lt;!ENTITY <span class="entity">% legend.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%legend.qname;</span>  %legend.content; &gt;
&lt;!-- end of legend.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% legend.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%legend.attlist;[
&lt;!ATTLIST %legend.qname;
      %Common.attrib;
      accesskey    %Character.datatype;     #IMPLIED
&gt;
&lt;!-- end of legend.attlist --&gt;]]&gt;

&lt;!-- button: Push Button ............................... --&gt;

&lt;!ENTITY <span class="entity">% button.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%button.element;[
&lt;!ENTITY <span class="entity">% button.content</span>
     &quot;( #PCDATA
      | %BlkNoForm.mix;
      | %InlStruct.class;
      %InlPhras.class;
      %InlPres.class;
      %I18n.class;
      %InlSpecial.class;
      %Inline.extra; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%button.qname;</span>  %button.content; &gt;
&lt;!-- end of button.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% button.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%button.attlist;[
&lt;!ATTLIST %button.qname;
      %Common.attrib;
      name         CDATA                    #IMPLIED
      value        CDATA                    #IMPLIED
      type         ( button | submit | reset ) 'submit'
      disabled     ( disabled )             #IMPLIED
      tabindex     %Number.datatype;        #IMPLIED
      accesskey    %Character.datatype;     #IMPLIED
&gt;
&lt;!-- end of button.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-form-1.mod --&gt;

</pre>

<h3><a name="sec_F.3.5." id="sec_F.3.5.">F.3.5.</a> Tables</h3>

<h4><a name="a_module_Basic_Tables" id="a_module_Basic_Tables">F.3.5.1.</a> Basic Tables</h4>

<pre class="dtd">
&lt;!-- ....................................................................... --&gt;
&lt;!-- XHTML Basic Table Module  ............................................. --&gt;
&lt;!-- file: xhtml-basic-table-1.mod

     This is XHTML Basic, a proper subset of XHTML.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-basic-table-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Basic Tables 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-basic-table-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Basic Tables

        table, caption, tr, th, td

     This table module declares elements and attributes defining
     a table model based fundamentally on features found in the
     widely-deployed HTML 3.2 table model.  While this module
     mimics the content model and table attributes of HTML 3.2
     tables, the element types declared herein also includes all
     HTML 4 common and most of the HTML 4 table attributes.
--&gt;

&lt;!-- declare qualified element type names:
--&gt;
&lt;!ENTITY <span class="entity">% table.qname</span>  &quot;table&quot; &gt;
&lt;!ENTITY <span class="entity">% caption.qname</span>  &quot;caption&quot; &gt;
&lt;!ENTITY <span class="entity">% tr.qname</span>  &quot;tr&quot; &gt;
&lt;!ENTITY <span class="entity">% th.qname</span>  &quot;th&quot; &gt;
&lt;!ENTITY <span class="entity">% td.qname</span>  &quot;td&quot; &gt;

&lt;!-- horizontal alignment attributes for cell contents
--&gt;
&lt;!ENTITY <span class="entity">% CellHAlign.attrib</span>
     &quot;align        ( left
                   | center
                   | right )                #IMPLIED&quot;
&gt;

&lt;!-- vertical alignment attributes for cell contents
--&gt;
&lt;!ENTITY <span class="entity">% CellVAlign.attrib</span>
     &quot;valign       ( top
                   | middle
                   | bottom )               #IMPLIED&quot;
&gt;

&lt;!-- scope is simpler than axes attribute for common tables
--&gt;
&lt;!ENTITY <span class="entity">% scope.attrib</span>
     &quot;scope        ( row | col  )           #IMPLIED&quot;
&gt;

&lt;!-- table: Table Element .............................. --&gt;

&lt;!ENTITY <span class="entity">% table.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%table.element;[
&lt;!ENTITY <span class="entity">% table.content</span>
     &quot;( %caption.qname;?, %tr.qname;+ )&quot;
&gt;
&lt;!ELEMENT <span class="element">%table.qname;</span>  %table.content; &gt;
&lt;!-- end of table.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% table.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%table.attlist;[
&lt;!ATTLIST %table.qname;
      %Common.attrib;
      summary      %Text.datatype;          #IMPLIED
&gt;
&lt;!-- end of table.attlist --&gt;]]&gt;

&lt;!-- caption: Table Caption ............................ --&gt;

&lt;!ENTITY <span class="entity">% caption.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%caption.element;[
&lt;!ENTITY <span class="entity">% caption.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%caption.qname;</span>  %caption.content; &gt;
&lt;!-- end of caption.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% caption.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%caption.attlist;[
&lt;!ATTLIST %caption.qname;
      %Common.attrib;
&gt;
&lt;!-- end of caption.attlist --&gt;]]&gt;

&lt;!-- tr: Table Row ..................................... --&gt;

&lt;!ENTITY <span class="entity">% tr.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tr.element;[
&lt;!ENTITY <span class="entity">% tr.content</span>  &quot;( %th.qname; | %td.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%tr.qname;</span>  %tr.content; &gt;
&lt;!-- end of tr.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% tr.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tr.attlist;[
&lt;!ATTLIST %tr.qname;
      %Common.attrib;
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of tr.attlist --&gt;]]&gt;

&lt;!-- th: Table Header Cell ............................. --&gt;

&lt;!-- th is for header cells, td for data,
     but for cells acting as both use td
--&gt;

&lt;!ENTITY <span class="entity">% th.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%th.element;[
&lt;!ENTITY <span class="entity">% th.content</span>
     &quot;( #PCDATA | %FlowNoTable.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%th.qname;</span>  %th.content; &gt;
&lt;!-- end of th.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% th.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%th.attlist;[
&lt;!ATTLIST %th.qname;
      %Common.attrib;
      abbr         %Text.datatype;          #IMPLIED
      axis         CDATA                    #IMPLIED
      headers      IDREFS                   #IMPLIED
      %scope.attrib;
      rowspan      %Number.datatype;        '1'
      colspan      %Number.datatype;        '1'
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of th.attlist --&gt;]]&gt;

&lt;!-- td: Table Data Cell ............................... --&gt;

&lt;!ENTITY <span class="entity">% td.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%td.element;[
&lt;!ENTITY <span class="entity">% td.content</span>
     &quot;( #PCDATA | %FlowNoTable.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%td.qname;</span>  %td.content; &gt;
&lt;!-- end of td.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% td.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%td.attlist;[
&lt;!ATTLIST %td.qname;
      %Common.attrib;
      abbr         %Text.datatype;          #IMPLIED
      axis         CDATA                    #IMPLIED
      headers      IDREFS                   #IMPLIED
      %scope.attrib;
      rowspan      %Number.datatype;        '1'
      colspan      %Number.datatype;        '1'
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of td.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-basic-table-1.mod --&gt;

</pre>

<h4><a name="a_module_Tables" id="a_module_Tables">F.3.5.2.</a> Tables</h4>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Table Module  .................................................. --&gt;
&lt;!-- file: xhtml-table-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-table-1.mod,v 3.1 2000/11/15 22:02:08 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Tables 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-table-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Tables

        table, caption, thead, tfoot, tbody, colgroup, col, tr, th, td

     This module declares element types and attributes used to provide
     table markup similar to HTML 4.0, including features that enable
     better accessibility for non-visual user agents.
--&gt;

&lt;!-- declare qualified element type names:
--&gt;
&lt;!ENTITY <span class="entity">% table.qname</span>  &quot;table&quot; &gt;
&lt;!ENTITY <span class="entity">% caption.qname</span>  &quot;caption&quot; &gt;
&lt;!ENTITY <span class="entity">% thead.qname</span>  &quot;thead&quot; &gt;
&lt;!ENTITY <span class="entity">% tfoot.qname</span>  &quot;tfoot&quot; &gt;
&lt;!ENTITY <span class="entity">% tbody.qname</span>  &quot;tbody&quot; &gt;
&lt;!ENTITY <span class="entity">% colgroup.qname</span>  &quot;colgroup&quot; &gt;
&lt;!ENTITY <span class="entity">% col.qname</span>  &quot;col&quot; &gt;
&lt;!ENTITY <span class="entity">% tr.qname</span>  &quot;tr&quot; &gt;
&lt;!ENTITY <span class="entity">% th.qname</span>  &quot;th&quot; &gt;
&lt;!ENTITY <span class="entity">% td.qname</span>  &quot;td&quot; &gt;

&lt;!-- The frame attribute specifies which parts of the frame around
     the table should be rendered. The values are not the same as
     CALS to avoid a name clash with the valign attribute.
--&gt;
&lt;!ENTITY <span class="entity">% frame.attrib</span>
     &quot;frame        ( void
                   | above
                   | below
                   | hsides
                   | lhs
                   | rhs
                   | vsides
                   | box
                   | border )               #IMPLIED&quot;
&gt;

&lt;!-- The rules attribute defines which rules to draw between cells:

     If rules is absent then assume:

       &quot;none&quot; if border is absent or border=&quot;0&quot; otherwise &quot;all&quot;
--&gt;
&lt;!ENTITY <span class="entity">% rules.attrib</span>
     &quot;rules        ( none
                   | groups
                   | rows
                   | cols
                   | all )                  #IMPLIED&quot;
&gt;

&lt;!-- horizontal alignment attributes for cell contents
--&gt;
&lt;!ENTITY <span class="entity">% CellHAlign.attrib</span>
     &quot;align        ( left
                   | center
                   | right
                   | justify
                   | char )                 #IMPLIED
      char         %Character.datatype;     #IMPLIED
      charoff      %Length.datatype;        #IMPLIED&quot;
&gt;

&lt;!-- vertical alignment attribute for cell contents
--&gt;
&lt;!ENTITY <span class="entity">% CellVAlign.attrib</span>
     &quot;valign       ( top
                   | middle
                   | bottom
                   | baseline )             #IMPLIED&quot;
&gt;

&lt;!-- scope is simpler than axes attribute for common tables
--&gt;
&lt;!ENTITY <span class="entity">% scope.attrib</span>
     &quot;scope        ( row
                   | col
                   | rowgroup
                   | colgroup )             #IMPLIED&quot;
&gt;

&lt;!-- table: Table Element .............................. --&gt;

&lt;!ENTITY <span class="entity">% table.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%table.element;[
&lt;!ENTITY <span class="entity">% table.content</span>
     &quot;( %caption.qname;?, ( %col.qname;* | %colgroup.qname;* ),
      (( %thead.qname;?, %tfoot.qname;?, %tbody.qname;+ ) | ( %tr.qname;+ )))&quot;
&gt;
&lt;!ELEMENT <span class="element">%table.qname;</span>  %table.content; &gt;
&lt;!-- end of table.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% table.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%table.attlist;[
&lt;!ATTLIST %table.qname;
      %Common.attrib;
      summary      %Text.datatype;          #IMPLIED
      width        %Length.datatype;        #IMPLIED
      border       %Pixels.datatype;        #IMPLIED
      %frame.attrib;
      %rules.attrib;
      cellspacing  %Length.datatype;        #IMPLIED
      cellpadding  %Length.datatype;        #IMPLIED
&gt;
&lt;!-- end of table.attlist --&gt;]]&gt;

&lt;!-- caption: Table Caption ............................ --&gt;

&lt;!ENTITY <span class="entity">% caption.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%caption.element;[
&lt;!ENTITY <span class="entity">% caption.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%caption.qname;</span>  %caption.content; &gt;
&lt;!-- end of caption.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% caption.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%caption.attlist;[
&lt;!ATTLIST %caption.qname;
      %Common.attrib;
&gt;
&lt;!-- end of caption.attlist --&gt;]]&gt;

&lt;!-- thead: Table Header ............................... --&gt;

&lt;!-- Use thead to duplicate headers when breaking table
     across page boundaries, or for static headers when
     tbody sections are rendered in scrolling panel.
--&gt;

&lt;!ENTITY <span class="entity">% thead.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%thead.element;[
&lt;!ENTITY <span class="entity">% thead.content</span>  &quot;( %tr.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%thead.qname;</span>  %thead.content; &gt;
&lt;!-- end of thead.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% thead.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%thead.attlist;[
&lt;!ATTLIST %thead.qname;
      %Common.attrib;
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of thead.attlist --&gt;]]&gt;

&lt;!-- tfoot: Table Footer ............................... --&gt;

&lt;!-- Use tfoot to duplicate footers when breaking table
     across page boundaries, or for static footers when
     tbody sections are rendered in scrolling panel.
--&gt;

&lt;!ENTITY <span class="entity">% tfoot.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tfoot.element;[
&lt;!ENTITY <span class="entity">% tfoot.content</span>  &quot;( %tr.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%tfoot.qname;</span>  %tfoot.content; &gt;
&lt;!-- end of tfoot.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% tfoot.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tfoot.attlist;[
&lt;!ATTLIST %tfoot.qname;
      %Common.attrib;
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of tfoot.attlist --&gt;]]&gt;

&lt;!-- tbody: Table Body ................................. --&gt;

&lt;!-- Use multiple tbody sections when rules are needed
     between groups of table rows.
--&gt;

&lt;!ENTITY <span class="entity">% tbody.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tbody.element;[
&lt;!ENTITY <span class="entity">% tbody.content</span>  &quot;( %tr.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%tbody.qname;</span>  %tbody.content; &gt;
&lt;!-- end of tbody.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% tbody.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tbody.attlist;[
&lt;!ATTLIST %tbody.qname;
      %Common.attrib;
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of tbody.attlist --&gt;]]&gt;

&lt;!-- colgroup: Table Column Group ...................... --&gt;

&lt;!-- colgroup groups a set of col elements. It allows you
     to group several semantically-related columns together.
--&gt;

&lt;!ENTITY <span class="entity">% colgroup.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%colgroup.element;[
&lt;!ENTITY <span class="entity">% colgroup.content</span>  &quot;( %col.qname; )*&quot; &gt;
&lt;!ELEMENT <span class="element">%colgroup.qname;</span>  %colgroup.content; &gt;
&lt;!-- end of colgroup.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% colgroup.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%colgroup.attlist;[
&lt;!ATTLIST %colgroup.qname;
      %Common.attrib;
      span         %Number.datatype;        '1'
      width        %MultiLength.datatype;   #IMPLIED
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of colgroup.attlist --&gt;]]&gt;

&lt;!-- col: Table Column ................................. --&gt;

&lt;!-- col elements define the alignment properties for
     cells in one or more columns.

     The width attribute specifies the width of the
     columns, e.g.

       width=&quot;64&quot;        width in screen pixels
       width=&quot;0.5*&quot;      relative width of 0.5

     The span attribute causes the attributes of one
     col element to apply to more than one column.
--&gt;

&lt;!ENTITY <span class="entity">% col.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%col.element;[
&lt;!ENTITY <span class="entity">% col.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ELEMENT <span class="element">%col.qname;</span>  %col.content; &gt;
&lt;!-- end of col.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% col.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%col.attlist;[
&lt;!ATTLIST %col.qname;
      %Common.attrib;
      span         %Number.datatype;        '1'
      width        %MultiLength.datatype;   #IMPLIED
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of col.attlist --&gt;]]&gt;

&lt;!-- tr: Table Row ..................................... --&gt;

&lt;!ENTITY <span class="entity">% tr.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tr.element;[
&lt;!ENTITY <span class="entity">% tr.content</span>  &quot;( %th.qname; | %td.qname; )+&quot; &gt;
&lt;!ELEMENT <span class="element">%tr.qname;</span>  %tr.content; &gt;
&lt;!-- end of tr.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% tr.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tr.attlist;[
&lt;!ATTLIST %tr.qname;
      %Common.attrib;
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of tr.attlist --&gt;]]&gt;

&lt;!-- th: Table Header Cell ............................. --&gt;

&lt;!-- th is for header cells, td for data,
     but for cells acting as both use td
--&gt;

&lt;!ENTITY <span class="entity">% th.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%th.element;[
&lt;!ENTITY <span class="entity">% th.content</span>
     &quot;( #PCDATA | %Flow.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%th.qname;</span>  %th.content; &gt;
&lt;!-- end of th.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% th.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%th.attlist;[
&lt;!ATTLIST %th.qname;
      %Common.attrib;
      abbr         %Text.datatype;          #IMPLIED
      axis         CDATA                    #IMPLIED
      headers      IDREFS                   #IMPLIED
      %scope.attrib;
      rowspan      %Number.datatype;        '1'
      colspan      %Number.datatype;        '1'
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of th.attlist --&gt;]]&gt;

&lt;!-- td: Table Data Cell ............................... --&gt;

&lt;!ENTITY <span class="entity">% td.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%td.element;[
&lt;!ENTITY <span class="entity">% td.content</span>
     &quot;( #PCDATA | %Flow.mix; )*&quot;
&gt;
&lt;!ELEMENT <span class="element">%td.qname;</span>  %td.content; &gt;
&lt;!-- end of td.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% td.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%td.attlist;[
&lt;!ATTLIST %td.qname;
      %Common.attrib;
      abbr         %Text.datatype;          #IMPLIED
      axis         CDATA                    #IMPLIED
      headers      IDREFS                   #IMPLIED
      %scope.attrib;
      rowspan      %Number.datatype;        '1'
      colspan      %Number.datatype;        '1'
      %CellHAlign.attrib;
      %CellVAlign.attrib;
&gt;
&lt;!-- end of td.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-table-1.mod --&gt;

</pre>

<h3><a name="a_module_Image" id="a_module_Image">F.3.6.</a> Image</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Images Module  ................................................. --&gt;
&lt;!-- file: xhtml-image-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Rovision: $x36;Id: xhtml-image-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Images 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-image-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Images

        img

     This module provides markup to support basic image embedding.
--&gt;

&lt;!-- To avoid problems with text-only UAs as well as to make
     image content understandable and navigable to users of
     non-visual UAs, you need to provide a description with
     the 'alt' attribute, and avoid server-side image maps.
--&gt;

&lt;!ENTITY <span class="entity">% img.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%img.element;[
&lt;!ENTITY <span class="entity">% img.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% img.qname</span>  &quot;img&quot; &gt;
&lt;!ELEMENT <span class="element">%img.qname;</span>  %img.content; &gt;
&lt;!-- end of img.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% img.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%img.attlist;[
&lt;!ATTLIST %img.qname;
      %Common.attrib;
      src          %URI.datatype;           #REQUIRED
      alt          %Text.datatype;          #REQUIRED
      longdesc     %URI.datatype;           #IMPLIED
      height       %Length.datatype;        #IMPLIED
      width        %Length.datatype;        #IMPLIED
&gt;
&lt;!-- end of img.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-image-1.mod --&gt;

</pre>

<h3><a name="a_module_Client-side_Image_Map" id="a_module_Client-side_Image_Map">F.3.7.</a> Client-side Image Map</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Client-side Image Map Module  .................................. --&gt;
&lt;!-- file: xhtml-csismap-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-csismap-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Client-side Image Maps 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-csismap-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Client-side Image Maps

        area, map

     This module declares elements and attributes to support client-side
     image maps. This requires that the Image Module (or a module
     declaring the img element type) be included in the DTD.

     These can be placed in the same document or grouped in a
     separate document, although the latter isn't widely supported
--&gt;

&lt;!ENTITY <span class="entity">% area.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%area.element;[
&lt;!ENTITY <span class="entity">% area.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% area.qname</span>  &quot;area&quot; &gt;
&lt;!ELEMENT <span class="element">%area.qname;</span>  %area.content; &gt;
&lt;!-- end of area.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% Shape.datatype</span> &quot;( rect | circle | poly | default )&quot;&gt;
&lt;!ENTITY <span class="entity">% Coords.datatype</span> &quot;CDATA&quot; &gt;

&lt;!ENTITY <span class="entity">% area.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%area.attlist;[
&lt;!ATTLIST %area.qname;
      %Common.attrib;
      href         %URI.datatype;           #IMPLIED
      shape        %Shape.datatype;         'rect'
      coords       %Coords.datatype;        #IMPLIED
      nohref       ( nohref )               #IMPLIED
      alt          %Text.datatype;          #REQUIRED
      tabindex     %Number.datatype;        #IMPLIED
      accesskey    %Character.datatype;     #IMPLIED
&gt;
&lt;!-- end of area.attlist --&gt;]]&gt;

&lt;!-- modify anchor attribute definition list
     to allow for client-side image maps
--&gt;
&lt;!ATTLIST %a.qname;
      shape        %Shape.datatype;         'rect'
      coords       %Coords.datatype;        #IMPLIED
&gt;

&lt;!-- modify img attribute definition list
     to allow for client-side image maps
--&gt;
&lt;!ATTLIST %img.qname;
      usemap       IDREF                    #IMPLIED
&gt;

&lt;!-- modify form input attribute definition list
     to allow for client-side image maps
--&gt;
&lt;!ATTLIST %input.qname;
      usemap       IDREF                    #IMPLIED
&gt;

&lt;!-- modify object attribute definition list
     to allow for client-side image maps
--&gt;
&lt;!ATTLIST %object.qname;
      usemap       IDREF                    #IMPLIED
&gt;

&lt;!-- 'usemap' points to the 'id' attribute of a &lt;map&gt; element,
     which must be in the same document; support for external
     document maps was not widely supported in HTML and is
     eliminated in XHTML.

     It is considered an error for the element pointed to by
     a usemap IDREF to occur in anything but a &lt;map&gt; element.
--&gt;

&lt;!ENTITY <span class="entity">% map.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%map.element;[
&lt;!ENTITY <span class="entity">% map.content</span>
     &quot;(( %Block.mix; ) | %area.qname; )+&quot;
&gt;
&lt;!ENTITY <span class="entity">% map.qname</span>  &quot;map&quot; &gt;
&lt;!ELEMENT <span class="element">%map.qname;</span>  %map.content; &gt;
&lt;!-- end of map.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% map.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%map.attlist;[
&lt;!ATTLIST %map.qname;
      %XHTML.xmlns.attrib; 
      id           ID                       #REQUIRED
      %class.attrib;
      %title.attrib;
      %Core.extra.attrib;
      %I18n.attrib;
      %Events.attrib;
&gt;
&lt;!-- end of map.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-csismap-1.mod --&gt;

</pre>

<h3><a name="a_module_Server-side_Image_Map" id="a_module_Server-side_Image_Map">F.3.8.</a> Server-side Image Map</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Server-side Image Map Module  .................................. --&gt;
&lt;!-- file: xhtml-ssismap-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-ssismap-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Server-side Image Maps 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-ssismap-1.mod&quot;

     Revisions:
2000-10-22: added declaration for 'ismap' on &lt;input&gt;
     ....................................................................... --&gt;

&lt;!-- Server-side Image Maps

     This adds the 'ismap' attribute to the img and input elements
     to support server-side processing of a user selection.
--&gt;

&lt;!ATTLIST %img.qname;
      ismap        ( ismap )                #IMPLIED
&gt;

&lt;!ATTLIST %input.qname;
      ismap        ( ismap )                #IMPLIED
&gt;

&lt;!-- end of xhtml-ssismap-1.mod --&gt;

</pre>

<h3><a name="a_module_Object" id="a_module_Object">F.3.9.</a> Object</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Embedded Object Module  ........................................ --&gt;
&lt;!-- file: xhtml-object-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-object-1.mod,v 3.1 2000/11/15 22:02:08 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Embedded Object 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-object-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Embedded Objects

        object

     This module declares the object element type and its attributes,
     used to embed external objects as part of XHTML pages. In the
     document, place param elements prior to other content within
     the object element.

     Note that use of this module requires instantiation of the 
     Param Element Module.
--&gt;

&lt;!-- object: Generic Embedded Object ................... --&gt;

&lt;!ENTITY <span class="entity">% object.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%object.element;[
&lt;!ENTITY <span class="entity">% object.content</span>
     &quot;( #PCDATA | %Flow.mix; | %param.qname; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% object.qname</span>  &quot;object&quot; &gt;
&lt;!ELEMENT <span class="element">%object.qname;</span>  %object.content; &gt;
&lt;!-- end of object.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% object.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%object.attlist;[
&lt;!ATTLIST %object.qname;
      %Common.attrib;
      declare      ( declare )              #IMPLIED
      classid      %URI.datatype;           #IMPLIED
      codebase     %URI.datatype;           #IMPLIED
      data         %URI.datatype;           #IMPLIED
      type         %ContentType.datatype;   #IMPLIED
      codetype     %ContentType.datatype;   #IMPLIED
      archive      %URIs.datatype;          #IMPLIED
      standby      %Text.datatype;          #IMPLIED
      height       %Length.datatype;        #IMPLIED
      width        %Length.datatype;        #IMPLIED
      name         CDATA                    #IMPLIED
      tabindex     %Number.datatype;        #IMPLIED
&gt;
&lt;!-- end of object.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-object-1.mod --&gt;

</pre>

<h3><a name="a_module_Frames" id="a_module_Frames">F.3.10.</a> Frames</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Frames Module  ................................................. --&gt;
&lt;!-- file: xhtml-frames-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-frames-1.mod,v 3.1 2000/11/15 22:02:08 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Frames 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-frames-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Frames 

        frameset, frame, noframes

     This module declares frame-related element types and attributes.
--&gt;

&lt;!ENTITY <span class="entity">% frameset.qname</span>  &quot;frameset&quot; &gt;
&lt;!ENTITY <span class="entity">% frame.qname</span>  &quot;frame&quot; &gt;
&lt;!ENTITY <span class="entity">% noframes.qname</span>  &quot;noframes&quot; &gt;

&lt;!-- comma-separated list of MultiLength --&gt;
&lt;!ENTITY <span class="entity">% MultiLengths.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- The content model for XHTML documents depends on whether 
     the &lt;head&gt; is followed by a &lt;frameset&gt; or &lt;body&gt; element. 
--&gt; 
 
&lt;!ENTITY <span class="entity">% frameset.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%frameset.element;[
&lt;!ENTITY <span class="entity">% frameset.content</span> 
     &quot;(( %frameset.qname; | %frame.qname; )+, %noframes.qname;? )&quot; &gt;
&lt;!ELEMENT <span class="element">%frameset.qname;</span>  %frameset.content; &gt;
&lt;!-- end of frameset.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% frameset.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%frameset.attlist;[
&lt;!ATTLIST %frameset.qname; 
      %Core.attrib;
      rows         %MultiLengths.datatype;  #IMPLIED
      cols         %MultiLengths.datatype;  #IMPLIED
&gt; 
&lt;!-- end of frameset.attlist --&gt;]]&gt;
&lt;![%xhtml-events.module;[
&lt;!ATTLIST %frameset.qname;
      onload       %Script.datatype;        #IMPLIED
      onunload     %Script.datatype;        #IMPLIED
&gt;
]]&gt;
 
&lt;!-- reserved frame names start with &quot;_&quot; otherwise starts with letter --&gt; 

&lt;!ENTITY <span class="entity">% frame.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%frame.element;[
&lt;!ENTITY <span class="entity">% frame.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ELEMENT <span class="element">%frame.qname;</span>  %frame.content; &gt;
&lt;!-- end of frame.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% frame.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%frame.attlist;[
&lt;!ATTLIST %frame.qname; 
      %Core.attrib;
      longdesc     %URI.datatype;           #IMPLIED
      src          %URI.datatype;           #IMPLIED
      frameborder  ( 1 | 0 )                '1'
      marginwidth  %Pixels.datatype;        #IMPLIED
      marginheight %Pixels.datatype;        #IMPLIED
      noresize     ( noresize )             #IMPLIED
      scrolling    ( yes | no | auto )      'auto'
&gt; 
&lt;!-- end of frame.attlist --&gt;]]&gt;
 
&lt;!-- changes to other declarations .................... --&gt;

&lt;!-- redefine content model for html element,
     substituting frameset for body  --&gt;
&lt;!ENTITY <span class="entity">% html.content</span>  
     &quot;( %head.qname;, %frameset.qname; )&quot;
&gt;

&lt;!-- alternate content container for non frame-based rendering --&gt; 
 
&lt;!ENTITY <span class="entity">% noframes.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%noframes.element;[
&lt;!ENTITY <span class="entity">% noframes.content</span> &quot;( %body.qname; )&quot;&gt; 
&lt;!ELEMENT <span class="element">%noframes.qname;</span>  %noframes.content; &gt;
&lt;!-- end of noframes.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% noframes.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%noframes.attlist;[
&lt;!ATTLIST %noframes.qname; 
      %Common.attrib;
&gt; 
&lt;!-- end of noframes.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-frames-1.mod --&gt;

</pre>

<h3><a name="a_module_Target" id="a_module_Target">F.3.11.</a> Target</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Target Module  ................................................. --&gt;
&lt;!-- file: xhtml-target-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-target-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Target 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-target-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Target 

    target

     This module declares the 'target' attribute used for opening windows
--&gt;

&lt;!-- render in this frame --&gt; 
&lt;!ENTITY <span class="entity">% FrameTarget.datatype</span> &quot;CDATA&quot; &gt;

&lt;!-- add 'target' attribute to 'a' element --&gt;
&lt;!ATTLIST %a.qname;
      target       %FrameTarget.datatype;   #IMPLIED
&gt;

&lt;!-- add 'target' attribute to 'area' element --&gt;
&lt;!ATTLIST %area.qname;
      target       %FrameTarget.datatype;   #IMPLIED
&gt;

&lt;!-- add 'target' attribute to 'link' element --&gt;
&lt;!ATTLIST %link.qname;
      target       %FrameTarget.datatype;   #IMPLIED
&gt;

&lt;!-- add 'target' attribute to 'form' element --&gt;
&lt;!ATTLIST %form.qname;
      target       %FrameTarget.datatype;   #IMPLIED
&gt;

&lt;!-- add 'target' attribute to 'base' element --&gt;
&lt;!ATTLIST %base.qname;
      target       %FrameTarget.datatype;   #IMPLIED
&gt;

&lt;!-- end of xhtml-target-1.mod --&gt;

</pre>

<h3><a name="a_module_Iframe" id="a_module_Iframe">F.3.12.</a> Iframe</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML IFrame Module  ................................................. --&gt;
&lt;!-- file: xhtml-iframe-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-iframe-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Inline Frame Element 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-iframe-1.mod&quot;

     Revisions:
2000-10-22: added #PCDATA to &lt;iframe&gt; content model as per HTML 4
     ....................................................................... --&gt;

&lt;!-- Inline Frames 

        iframe

     This module declares the iframe element type and its attributes,
     used to create an inline frame within a document. 
--&gt;

&lt;!-- Inline Frames .................................... --&gt;

&lt;!ENTITY <span class="entity">% iframe.content</span>  &quot;( #PCDATA | %Flow.mix; )*&quot; &gt; 
&lt;!ENTITY <span class="entity">% iframe.qname</span>  &quot;iframe&quot; &gt;
&lt;!ELEMENT <span class="element">%iframe.qname;</span>  %iframe.content; &gt; 
&lt;!ATTLIST %iframe.qname; 
      %Core.attrib;
      longdesc     %URI.datatype;           #IMPLIED
      src          %URI.datatype;           #IMPLIED
      frameborder  ( 1 | 0 )                '1'
      marginwidth  %Pixels.datatype;        #IMPLIED
      marginheight %Pixels.datatype;        #IMPLIED
      scrolling    ( yes | no | auto )      'auto'
      height       %Length.datatype;        #IMPLIED
      width        %Length.datatype;        #IMPLIED
&gt; 

&lt;!-- end of xhtml-iframe-1.mod --&gt;

</pre>

<h3><a name="a_module_Intrinsic_Events" id="a_module_Intrinsic_Events">F.3.13.</a> Intrinsic Events</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Intrinsic Events Module  ....................................... --&gt;
&lt;!-- file: xhtml-events-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-events-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES XHTML Intrinsic Events 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-events-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Intrinsic Event Attributes

     These are the event attributes defined in HTML 4.0,
     Section 18.2.3 &quot;Intrinsic Events&quot;. This module must be
     instantiated prior to the Attributes Module but after
     the Datatype Module in the Modular Framework module.

    &quot;Note: Authors of HTML documents are advised that changes
     are likely to occur in the realm of intrinsic events
     (e.g., how scripts are bound to events). Research in
     this realm is carried on by members of the W3C Document
     Object Model Working Group (see the W3C Web site at
     http://www.w3.org/ for more information).&quot;
--&gt;
&lt;!-- NOTE: Because the ATTLIST declarations in this module occur
     before their respective ELEMENT declarations in other
     modules, there may be a dependency on this module that
     should be considered if any of the parameter entities used
     for element type names (eg., %foo.qname;) are redeclared.
--&gt;

&lt;!ENTITY <span class="entity">% Events.attrib</span>
     &quot;onclick      %Script.datatype;        #IMPLIED
      ondblclick   %Script.datatype;        #IMPLIED
      onmousedown  %Script.datatype;        #IMPLIED
      onmouseup    %Script.datatype;        #IMPLIED
      onmouseover  %Script.datatype;        #IMPLIED
      onmousemove  %Script.datatype;        #IMPLIED
      onmouseout   %Script.datatype;        #IMPLIED
      onkeypress   %Script.datatype;        #IMPLIED
      onkeydown    %Script.datatype;        #IMPLIED
      onkeyup      %Script.datatype;        #IMPLIED&quot;
&gt;

&lt;!-- additional attributes on anchor element
--&gt;
&lt;!ATTLIST %a.qname;
     onfocus      %Script.datatype;         #IMPLIED
     onblur       %Script.datatype;         #IMPLIED
&gt;

&lt;!-- additional attributes on form element
--&gt;
&lt;!ATTLIST %form.qname;
      onsubmit     %Script.datatype;        #IMPLIED
      onreset      %Script.datatype;        #IMPLIED
&gt;

&lt;!-- additional attributes on label element
--&gt;
&lt;!ATTLIST %label.qname;
      onfocus      %Script.datatype;        #IMPLIED
      onblur       %Script.datatype;        #IMPLIED
&gt;

&lt;!-- additional attributes on input element
--&gt;
&lt;!ATTLIST %input.qname;
      onfocus      %Script.datatype;        #IMPLIED
      onblur       %Script.datatype;        #IMPLIED
      onselect     %Script.datatype;        #IMPLIED
      onchange     %Script.datatype;        #IMPLIED
&gt;

&lt;!-- additional attributes on select element
--&gt;
&lt;!ATTLIST %select.qname;
      onfocus      %Script.datatype;        #IMPLIED
      onblur       %Script.datatype;        #IMPLIED
      onchange     %Script.datatype;        #IMPLIED
&gt;

&lt;!-- additional attributes on textarea element
--&gt;
&lt;!ATTLIST %textarea.qname;
      onfocus      %Script.datatype;        #IMPLIED
      onblur       %Script.datatype;        #IMPLIED
      onselect     %Script.datatype;        #IMPLIED
      onchange     %Script.datatype;        #IMPLIED
&gt;

&lt;!-- additional attributes on button element
--&gt;
&lt;!ATTLIST %button.qname;
      onfocus      %Script.datatype;        #IMPLIED
      onblur       %Script.datatype;        #IMPLIED
&gt;

&lt;!-- additional attributes on body element
--&gt;
&lt;!ATTLIST %body.qname;
      onload       %Script.datatype;        #IMPLIED
      onunload     %Script.datatype;        #IMPLIED
&gt;

&lt;!-- additional attributes on area element
--&gt;
&lt;!ATTLIST %area.qname;
      onfocus      %Script.datatype;        #IMPLIED
      onblur       %Script.datatype;        #IMPLIED
&gt;

&lt;!-- end of xhtml-events-1.mod --&gt;

</pre>

<h3><a name="a_module_Metainformation" id="a_module_Metainformation">F.3.14.</a> Metainformation</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Document Metainformation Module  ............................... --&gt;
&lt;!-- file: xhtml-meta-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-meta-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Metainformation 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-meta-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Meta Information

        meta

     This module declares the meta element type and its attributes,
     used to provide declarative document metainformation.
--&gt;

&lt;!-- meta: Generic Metainformation ..................... --&gt;

&lt;!ENTITY <span class="entity">% meta.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%meta.element;[
&lt;!ENTITY <span class="entity">% meta.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% meta.qname</span>  &quot;meta&quot; &gt;
&lt;!ELEMENT <span class="element">%meta.qname;</span>  %meta.content; &gt;
&lt;!-- end of meta.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% meta.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%meta.attlist;[
&lt;!ATTLIST %meta.qname;
      %XHTML.xmlns.attrib;
      %I18n.attrib;
      http-equiv   NMTOKEN                  #IMPLIED
      name         NMTOKEN                  #IMPLIED
      content      CDATA                    #REQUIRED
      scheme       CDATA                    #IMPLIED
&gt;
&lt;!-- end of meta.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-meta-1.mod --&gt;

</pre>

<h3><a name="a_module_Scripting" id="a_module_Scripting">F.3.15.</a> Scripting</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Document Scripting Module  ..................................... --&gt;
&lt;!-- file: xhtml-script-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-script-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Scripting 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-script-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Scripting

        script, noscript

     This module declares element types and attributes used to provide
     support for executable scripts as well as an alternate content
     container where scripts are not supported.
--&gt;

&lt;!-- script: Scripting Statement ....................... --&gt;

&lt;!ENTITY <span class="entity">% script.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%script.element;[
&lt;!ENTITY <span class="entity">% script.content</span>  &quot;( #PCDATA )&quot; &gt;
&lt;!ENTITY <span class="entity">% script.qname</span>  &quot;script&quot; &gt;
&lt;!ELEMENT <span class="element">%script.qname;</span>  %script.content; &gt;
&lt;!-- end of script.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% script.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%script.attlist;[
&lt;!ATTLIST %script.qname;
      %XHTML.xmlns.attrib; 
      charset      %Charset.datatype;       #IMPLIED
      type         %ContentType.datatype;   #REQUIRED
      src          %URI.datatype;           #IMPLIED
      defer        ( defer )                #IMPLIED
      xml:space    ( preserve )             #FIXED 'preserve'
&gt;
&lt;!-- end of script.attlist --&gt;]]&gt;

&lt;!-- noscript: No-Script Alternate Content ............. --&gt;

&lt;!ENTITY <span class="entity">% noscript.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%noscript.element;[
&lt;!ENTITY <span class="entity">% noscript.content</span>
     &quot;( %Block.mix; )+&quot;
&gt;
&lt;!ENTITY <span class="entity">% noscript.qname</span>  &quot;noscript&quot; &gt;
&lt;!ELEMENT <span class="element">%noscript.qname;</span>  %noscript.content; &gt;
&lt;!-- end of noscript.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% noscript.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%noscript.attlist;[
&lt;!ATTLIST %noscript.qname;
      %Common.attrib;
&gt;
&lt;!-- end of noscript.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-script-1.mod --&gt;

</pre>

<h3><a name="a_module_Stylesheet" id="a_module_Stylesheet">F.3.16.</a> Stylesheet</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Document Stylesheet Module  .................................... --&gt;
&lt;!-- file: xhtml-style-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-style-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//DTD XHTML Stylesheets 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-style-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Stylesheets

        style

     This module declares the style element type and its attributes,
     used to embed stylesheet information in the document head element.
--&gt;

&lt;!-- style: Stylesheet Information ..................... --&gt;

&lt;!ENTITY <span class="entity">% style.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%style.element;[
&lt;!ENTITY <span class="entity">% style.content</span>  &quot;( #PCDATA )&quot; &gt;
&lt;!ENTITY <span class="entity">% style.qname</span>  &quot;style&quot; &gt;
&lt;!ELEMENT <span class="element">%style.qname;</span>  %style.content; &gt;
&lt;!-- end of style.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% style.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%style.attlist;[
&lt;!ATTLIST %style.qname;
      %XHTML.xmlns.attrib;
      %title.attrib;
      %I18n.attrib;
      type         %ContentType.datatype;   #REQUIRED
      media        %MediaDesc.datatype;     #IMPLIED
      xml:space    ( preserve )             #FIXED 'preserve'
&gt;
&lt;!-- end of style.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-style-1.mod --&gt;

</pre>

<h3><a name="a_module_Style_Attribute" id="a_module_Style_Attribute">F.3.17.</a> Style Attribute</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Inline Style Module  ........................................... --&gt;
&lt;!-- file: xhtml-inlstyle-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-inlstyle-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36;

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ENTITIES XHTML Inline Style 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-inlstyle-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Inline Style

     This module declares the 'style' attribute, used to support inline 
     style markup. This module must be instantiated prior to the XHTML
     Common Attributes module in order to be included in %Core.attrib;.
--&gt;

&lt;!ENTITY <span class="entity">% style.attrib</span>
     &quot;style        CDATA                    #IMPLIED&quot;
&gt;


&lt;!ENTITY <span class="entity">% Core.extra.attrib</span> 
     &quot;%style.attrib;&quot;
&gt;

&lt;!-- end of xhtml-inlstyle-1.mod --&gt;

</pre>

<h3><a name="a_module_Link" id="a_module_Link">F.3.18.</a> Link</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Link Element Module  ........................................... --&gt;
&lt;!-- file: xhtml-link-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-link-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Link Element 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-link-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Link element

        link

     This module declares the link element type and its attributes,
     which could (in principle) be used to define document-level links
     to external resources such as:

     a) for document specific toolbars/menus, e.g. start, contents,
        previous, next, index, end, help
     b) to link to a separate style sheet (rel=&quot;stylesheet&quot;)
     c) to make a link to a script (rel=&quot;script&quot;)
     d) by stylesheets to control how collections of html nodes are
        rendered into printed documents
     e) to make a link to a printable version of this document
        e.g. a postscript or pdf version (rel=&quot;alternate&quot; media=&quot;print&quot;)
--&gt;

&lt;!-- link: Media-Independent Link ...................... --&gt;

&lt;!ENTITY <span class="entity">% link.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%link.element;[
&lt;!ENTITY <span class="entity">% link.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% link.qname</span>  &quot;link&quot; &gt;
&lt;!ELEMENT <span class="element">%link.qname;</span>  %link.content; &gt;
&lt;!-- end of link.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% link.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%link.attlist;[
&lt;!ATTLIST %link.qname;
      %Common.attrib;
      charset      %Charset.datatype;       #IMPLIED
      href         %URI.datatype;           #IMPLIED
      hreflang     %LanguageCode.datatype;  #IMPLIED
      type         %ContentType.datatype;   #IMPLIED
      rel          %LinkTypes.datatype;     #IMPLIED
      rev          %LinkTypes.datatype;     #IMPLIED
      media        %MediaDesc.datatype;     #IMPLIED
&gt;
&lt;!-- end of link.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-link-1.mod --&gt;

</pre>

<h3><a name="a_module_Base" id="a_module_Base">F.3.19.</a> Base</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Base Element Module  ........................................... --&gt;
&lt;!-- file: xhtml-base-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-base-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Base Element 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-base-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Base element

        base

     This module declares the base element type and its attributes,
     used to define a base URI against which relative URIs in the
     document will be resolved.

     Note that this module also redeclares the content model for
     the head element to include the base element.
--&gt;

&lt;!-- base: Document Base URI ........................... --&gt;

&lt;!ENTITY <span class="entity">% base.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%base.element;[
&lt;!ENTITY <span class="entity">% base.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% base.qname</span>  &quot;base&quot; &gt;
&lt;!ELEMENT <span class="element">%base.qname;</span>  %base.content; &gt;
&lt;!-- end of base.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% base.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%base.attlist;[
&lt;!ATTLIST %base.qname;
      %XHTML.xmlns.attrib;
      href         %URI.datatype;           #REQUIRED
&gt;
&lt;!-- end of base.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% head.content</span>
    &quot;( %HeadOpts.mix;,
     ( ( %title.qname;, %HeadOpts.mix;, ( %base.qname;, %HeadOpts.mix; )? )
     | ( %base.qname;, %HeadOpts.mix;, ( %title.qname;, %HeadOpts.mix; ))))&quot;
&gt;

&lt;!-- end of xhtml-base-1.mod --&gt;

</pre>

<h3><a name="a_module_Name_Identification" id="a_module_Name_Identification">F.3.20.</a> Name Identification</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Name Identifier Module  ........................................ --&gt;
&lt;!-- file: xhtml-nameident-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-nameident-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36;

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Name Identifier 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-nameident-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Name Identifier

       'name' attribute on form, img, a, map, applet, frame, iframe

     This module declares the 'name' attribute on element types when 
     it is used as a node identifier for legacy linking and scripting 
     support. This does not include those instances when 'name' is used 
     as a container for form control, property or metainformation names.
     
     This module should be instantiated following all modules it modifies.
--&gt;

&lt;!ENTITY <span class="entity">% form.attlist</span>  &quot;IGNORE&quot; &gt;
&lt;![%form.attlist;[
&lt;!ATTLIST %form.qname;
      name         CDATA                    #IMPLIED
&gt;
&lt;!-- end of form.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% img.attlist</span>  &quot;IGNORE&quot; &gt;
&lt;![%img.attlist;[
&lt;!ATTLIST %img.qname;
      name         CDATA                    #IMPLIED
&gt;
&lt;!-- end of img.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% a.attlist</span>  &quot;IGNORE&quot; &gt;
&lt;![%a.attlist;[
&lt;!ATTLIST %a.qname;
      name         CDATA                    #IMPLIED
&gt;
&lt;!-- end of a.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% map.attlist</span>  &quot;IGNORE&quot; &gt;
&lt;![%map.attlist;[
&lt;!ATTLIST %map.qname;
      name         CDATA                    #IMPLIED
&gt;
&lt;!-- end of map.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% applet.attlist</span>  &quot;IGNORE&quot; &gt;
&lt;![%applet.attlist;[
&lt;!ATTLIST %applet.qname;
      name         CDATA                    #IMPLIED
&gt;
&lt;!-- end of applet.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% frame.attlist</span>  &quot;IGNORE&quot; &gt;
&lt;![%frame.attlist;[
&lt;!ATTLIST %frame.qname;
      name         CDATA                    #IMPLIED
&gt;
&lt;!-- end of frame.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% iframe.attlist</span>  &quot;IGNORE&quot; &gt;
&lt;![%iframe.attlist;[
&lt;!ATTLIST %iframe.qname;
      name         CDATA                    #IMPLIED
&gt;
&lt;!-- end of iframe.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-nameident.mod --&gt;

</pre>

<h3><a name="a_module_Legacy" id="a_module_Legacy">F.3.21.</a> Legacy</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Legacy Markup Module ........................................... --&gt;
&lt;!-- file: xhtml-legacy-1.mod

     This is an extension of XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-legacy-1.mod,v 3.1 2001/01/02 14:26:47 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Legacy Markup 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-legacy-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- HTML Legacy Markup

        font, basefont, center, s, strike, u, dir, menu, isindex

          (plus additional datatypes and attributes)

     This optional module declares additional markup for simple
     presentation-related markup based on features found in the
     HTML 4.0 Transitional and Frameset DTDs. This relies on
     inclusion of the Legacy Redeclarations module. This module
     also declares the frames, inline frames and object modules.

     This is to allow XHTML 1.1 documents to be transformed for
     display on HTML browsers where CSS support is inconsistent
     or unavailable.
--&gt;
&lt;!-- Constructing a Legacy DTD

     To construct a DTD driver obtaining a close approximation of
     the HTML 4.0 Transitional and Frameset DTDs, declare the Legacy
     Redeclarations module as the pre-framework redeclaration parameter
     entity (%xhtml-prefw-redecl.mod;) and INCLUDE its conditional section:

        ...
        &lt;!ENTITY <span class="entity">% xhtml-prefw-redecl.module</span> &quot;INCLUDE&quot; &gt;
        &lt;![%xhtml-prefw-redecl.module;[
        &lt;!ENTITY <span class="entity">% xhtml-prefw-redecl.mod</span>
            PUBLIC &quot;-//W3C//ELEMENTS XHTML Legacy Redeclarations 1.0//EN&quot;
                   &quot;xhtml-legacy-redecl-1.mod&quot; &gt;
        %xhtml-prefw-redecl.mod;]]&gt;

     Such a DTD should be named with a variant FPI and redeclare
     the value of the %XHTML.version; parameter entity to that FPI:

         &quot;-//Your Name Here//DTD XHTML Legacy 1.1//EN&quot;

     IMPORTANT:  see also the notes included in the Legacy Redeclarations
     Module for information on how to construct a DTD using this module.
--&gt;


&lt;!-- Additional Element Types .................................... --&gt;

&lt;!-- font: Local Font Modifier  ........................ --&gt;

&lt;!ENTITY <span class="entity">% font.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%font.element;[
&lt;!ENTITY <span class="entity">% font.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% font.qname</span>  &quot;font&quot; &gt;
&lt;!ELEMENT <span class="element">%font.qname;</span>  %font.content; &gt;
&lt;!-- end of font.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% font.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%font.attlist;[
&lt;!ATTLIST %font.qname;
      %Core.attrib;
      %I18n.attrib;
      size         CDATA                    #IMPLIED
      color        %Color.datatype;         #IMPLIED
      face         CDATA                    #IMPLIED
&gt;
&lt;!-- end of font.attlist --&gt;]]&gt;

&lt;!-- basefont: Base Font Size  ......................... --&gt;

&lt;!ENTITY <span class="entity">% basefont.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%basefont.element;[
&lt;!ENTITY <span class="entity">% basefont.content</span> &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% basefont.qname</span>  &quot;basefont&quot; &gt;
&lt;!ELEMENT <span class="element">%basefont.qname;</span>  %basefont.content; &gt;
&lt;!-- end of basefont.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% basefont.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%basefont.attlist;[
&lt;!ATTLIST %basefont.qname;
      %id.attrib;
      size         CDATA                    #REQUIRED
      color        %Color.datatype;         #IMPLIED
      face         CDATA                    #IMPLIED
&gt;
&lt;!-- end of basefont.attlist --&gt;]]&gt;

&lt;!-- center: Center Alignment  ......................... --&gt;

&lt;!ENTITY <span class="entity">% center.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%center.element;[
&lt;!ENTITY <span class="entity">% center.content</span>
     &quot;( #PCDATA | %Flow.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% center.qname</span>  &quot;center&quot; &gt;
&lt;!ELEMENT <span class="element">%center.qname;</span>  %center.content; &gt;
&lt;!-- end of center.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% center.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%center.attlist;[
&lt;!ATTLIST %center.qname;
      %Common.attrib;
&gt;
&lt;!-- end of center.attlist --&gt;]]&gt;

&lt;!-- s: Strike-Thru Text Style  ........................ --&gt;

&lt;!ENTITY <span class="entity">% s.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%s.element;[
&lt;!ENTITY <span class="entity">% s.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% s.qname</span>  &quot;s&quot; &gt;
&lt;!ELEMENT <span class="element">%s.qname;</span>  %s.content; &gt;
&lt;!-- end of s.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% s.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%s.attlist;[
&lt;!ATTLIST %s.qname;
      %Common.attrib;
&gt;
&lt;!-- end of s.attlist --&gt;]]&gt;

&lt;!-- strike: Strike-Thru Text Style  ....................--&gt;

&lt;!ENTITY <span class="entity">% strike.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%strike.element;[
&lt;!ENTITY <span class="entity">% strike.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% strike.qname</span>  &quot;strike&quot; &gt;
&lt;!ELEMENT <span class="element">%strike.qname;</span>  %strike.content; &gt;
&lt;!-- end of strike.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% strike.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%strike.attlist;[
&lt;!ATTLIST %strike.qname;
      %Common.attrib;
&gt;
&lt;!-- end of strike.attlist --&gt;]]&gt;

&lt;!-- u: Underline Text Style  ...........................--&gt;

&lt;!ENTITY <span class="entity">% u.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%u.element;[
&lt;!ENTITY <span class="entity">% u.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% u.qname</span>  &quot;u&quot; &gt;
&lt;!ELEMENT <span class="element">%u.qname;</span>  %u.content; &gt;
&lt;!-- end of u.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% u.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%u.attlist;[
&lt;!ATTLIST %u.qname;
      %Common.attrib;
&gt;
&lt;!-- end of u.attlist --&gt;]]&gt;

&lt;!-- dir: Directory List  .............................. --&gt;

&lt;!-- NOTE: the content model for &lt;dir&gt; in HTML 4 excluded %Block.mix;
--&gt;
&lt;!ENTITY <span class="entity">% dir.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dir.element;[
&lt;!ENTITY <span class="entity">% dir.content</span>
     &quot;( %li.qname; )+&quot;
&gt;
&lt;!ENTITY <span class="entity">% dir.qname</span>  &quot;dir&quot; &gt;
&lt;!ELEMENT <span class="element">%dir.qname;</span>  %dir.content; &gt;
&lt;!-- end of dir.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% dir.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dir.attlist;[
&lt;!ATTLIST %dir.qname;
      %Common.attrib;
      compact      ( compact )              #IMPLIED
&gt;
&lt;!-- end of dir.attlist --&gt;]]&gt;

&lt;!-- menu: Menu List  .................................. --&gt;

&lt;!-- NOTE: the content model for &lt;menu&gt; in HTML 4 excluded %Block.mix;
--&gt;
&lt;!ENTITY <span class="entity">% menu.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%menu.element;[
&lt;!ENTITY <span class="entity">% menu.content</span>
     &quot;( %li.qname; )+&quot;
&gt;
&lt;!ENTITY <span class="entity">% menu.qname</span>  &quot;menu&quot; &gt;
&lt;!ELEMENT <span class="element">%menu.qname;</span>  %menu.content; &gt;
&lt;!-- end of menu.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% menu.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%menu.attlist;[
&lt;!ATTLIST %menu.qname;
      %Common.attrib;
      compact      ( compact )              #IMPLIED
&gt;
&lt;!-- end of menu.attlist --&gt;]]&gt;

&lt;!-- isindex: Single-Line Prompt  ...................... --&gt;

&lt;!ENTITY <span class="entity">% isindex.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%isindex.element;[
&lt;!ENTITY <span class="entity">% isindex.content</span> &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% isindex.qname</span>  &quot;isindex&quot; &gt;
&lt;!ELEMENT <span class="element">%isindex.qname;</span>  %isindex.content; &gt;
&lt;!-- end of isindex.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% isindex.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%isindex.attlist;[
&lt;!ATTLIST %isindex.qname;
      %Core.attrib;
      %I18n.attrib;
      prompt       %Text.datatype;          #IMPLIED
&gt;
&lt;!-- end of isindex.attlist --&gt;]]&gt;


&lt;!-- Additional Attributes ....................................... --&gt;

&lt;!-- Alignment attribute for Transitional use in HTML browsers
     (this functionality is generally well-supported in CSS,
     except within some contexts)
--&gt;
&lt;!ENTITY <span class="entity">% align.attrib</span>
     &quot;align        ( left | center | right | justify ) #IMPLIED&quot;
&gt;

&lt;!ATTLIST %applet.qname;
      align       ( top | middle | bottom | left | right ) #IMPLIED
      hspace      %Pixels.datatype;         #IMPLIED
      vspace      %Pixels.datatype;         #IMPLIED
&gt;

&lt;!ATTLIST %body.qname;
      background   %URI.datatype;           #IMPLIED
      bgcolor      %Color.datatype;         #IMPLIED
      text         %Color.datatype;         #IMPLIED
      link         %Color.datatype;         #IMPLIED
      vlink        %Color.datatype;         #IMPLIED
      alink        %Color.datatype;         #IMPLIED
&gt;

&lt;!ATTLIST %br.qname;
      clear        ( left | all | right | none ) 'none'
&gt;

&lt;!ATTLIST %caption.qname;
      align        ( top | bottom | left | right ) #IMPLIED
&gt;

&lt;!ATTLIST %div.qname;
      %align.attrib;
&gt;

&lt;!ATTLIST %h1.qname;
      %align.attrib;
&gt;

&lt;!ATTLIST %h2.qname;
      %align.attrib;
&gt;

&lt;!ATTLIST %h3.qname;
      %align.attrib;
&gt;

&lt;!ATTLIST %h4.qname;
      %align.attrib;
&gt;

&lt;!ATTLIST %h5.qname;
      %align.attrib;
&gt;

&lt;!ATTLIST %h6.qname;
      %align.attrib;
&gt;

&lt;!ATTLIST %hr.qname;
      align        ( left | center | right ) #IMPLIED
      noshade      ( noshade )              #IMPLIED
      size         %Pixels.datatype;        #IMPLIED
      width        %Length.datatype;        #IMPLIED
&gt;

&lt;!ATTLIST %img.qname;
      align       ( top | middle | bottom | left | right ) #IMPLIED
      border      %Pixels.datatype;         #IMPLIED
      hspace      %Pixels.datatype;         #IMPLIED
      vspace      %Pixels.datatype;         #IMPLIED
&gt;

&lt;!ATTLIST %input.qname;
      align       ( top | middle | bottom | left | right ) #IMPLIED
&gt;

&lt;!ATTLIST %legend.qname;
      align        ( top | bottom | left | right ) #IMPLIED
&gt;

&lt;!ATTLIST %li.qname;
      type         CDATA                     #IMPLIED
      value        %Number.datatype;         #IMPLIED
&gt;

&lt;!ATTLIST %object.qname;
      align        ( top | middle | bottom | left | right ) #IMPLIED
      border       %Pixels.datatype;         #IMPLIED
      hspace       %Pixels.datatype;         #IMPLIED
      vspace       %Pixels.datatype;         #IMPLIED
&gt;

&lt;!ATTLIST %dl.qname;
      compact      ( compact )              #IMPLIED
&gt;

&lt;!ATTLIST %ol.qname;
      type         CDATA                    #IMPLIED
      compact      ( compact )              #IMPLIED
      start        %Number.datatype;        #IMPLIED
&gt;

&lt;!ATTLIST %p.qname;
      %align.attrib;
&gt;

&lt;!ATTLIST %pre.qname;
      width        %Length.datatype;        #IMPLIED
&gt;

&lt;!ATTLIST %script.qname;
      language     %ContentType.datatype;   #IMPLIED
&gt;

&lt;!ATTLIST %table.qname;
      align        ( left | center | right ) #IMPLIED
      bgcolor      %Color.datatype;         #IMPLIED
&gt;

&lt;!ATTLIST %tr.qname;
      bgcolor     %Color.datatype;          #IMPLIED
&gt;

&lt;!ATTLIST %th.qname;
      nowrap      ( nowrap )                #IMPLIED
      bgcolor     %Color.datatype;          #IMPLIED
      width       %Length.datatype;         #IMPLIED
      height      %Length.datatype;         #IMPLIED
&gt;

&lt;!ATTLIST %td.qname;
      nowrap      ( nowrap )                #IMPLIED
      bgcolor     %Color.datatype;          #IMPLIED
      width       %Length.datatype;         #IMPLIED
      height      %Length.datatype;         #IMPLIED
&gt;

&lt;!ATTLIST %ul.qname;
      type         CDATA                    #IMPLIED
      compact      ( compact )              #IMPLIED
&gt;

&lt;!-- Frames Module ............................................... --&gt;
&lt;!ENTITY <span class="entity">% xhtml-frames.module</span> &quot;IGNORE&quot; &gt;
&lt;![%xhtml-frames.module;[
&lt;!ENTITY <span class="entity">% xhtml-frames.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Frames 1.0//EN&quot;
            &quot;xhtml-frames-1.mod&quot; &gt;
%xhtml-frames.mod;]]&gt;

&lt;!-- Inline Frames Module ........................................ --&gt;
&lt;!ENTITY <span class="entity">% xhtml-iframe.module</span> &quot;INCLUDE&quot; &gt;
&lt;![%xhtml-iframe.module;[
&lt;!ATTLIST %iframe.qname;
      align        ( top | middle | bottom | left | right ) #IMPLIED
&gt;
&lt;!ENTITY <span class="entity">% xhtml-iframe.mod</span>
     PUBLIC &quot;-//W3C//ELEMENTS XHTML Inline Frame Element 1.0//EN&quot;
            &quot;xhtml-iframe-1.mod&quot; &gt;
%xhtml-iframe.mod;]]&gt;

&lt;!-- end of xhtml-legacy-1.mod --&gt;

</pre>

<h2><a name="a_dtdsupport" id="a_dtdsupport">F.4.</a> XHTML DTD Support Modules</h2>

<p>The modules in this section are elements of the XHTML DTD implementation that, while hidden from casual users, are important to understand when creating derivative markup languages using the Modularization architecture.</p>

<h3><a name="a_module_Block_Phrasal" id="a_module_Block_Phrasal">F.4.1.</a> Block Phrasal</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Block Phrasal Module  .......................................... --&gt;
&lt;!-- file: xhtml-blkphras-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-blkphras-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Block Phrasal 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-blkphras-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Block Phrasal

        address, blockquote, pre, h1, h2, h3, h4, h5, h6

     This module declares the elements and their attributes used to
     support block-level phrasal markup.
--&gt;

&lt;!ENTITY <span class="entity">% address.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%address.element;[
&lt;!ENTITY <span class="entity">% address.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot; &gt;
&lt;!ENTITY <span class="entity">% address.qname</span>  &quot;address&quot; &gt;
&lt;!ELEMENT <span class="element">%address.qname;</span>  %address.content; &gt;
&lt;!-- end of address.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% address.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%address.attlist;[
&lt;!ATTLIST %address.qname;
      %Common.attrib;
&gt;
&lt;!-- end of address.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% blockquote.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%blockquote.element;[
&lt;!ENTITY <span class="entity">% blockquote.content</span>
     &quot;( %Block.mix; )+&quot;
&gt;
&lt;!ENTITY <span class="entity">% blockquote.qname</span>  &quot;blockquote&quot; &gt;
&lt;!ELEMENT <span class="element">%blockquote.qname;</span>  %blockquote.content; &gt;
&lt;!-- end of blockquote.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% blockquote.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%blockquote.attlist;[
&lt;!ATTLIST %blockquote.qname;
      %Common.attrib;
      cite         %URI.datatype;           #IMPLIED
&gt;
&lt;!-- end of blockquote.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% pre.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%pre.element;[
&lt;!ENTITY <span class="entity">% pre.content</span>
     &quot;( #PCDATA 
      | %InlStruct.class;
      %InlPhras.class;
      | %tt.qname; | %i.qname; | %b.qname;
      %I18n.class;
      %Anchor.class;
      | %script.qname; | %map.qname;
      %Inline.extra; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% pre.qname</span>  &quot;pre&quot; &gt;
&lt;!ELEMENT <span class="element">%pre.qname;</span>  %pre.content; &gt;
&lt;!-- end of pre.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% pre.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%pre.attlist;[
&lt;!ATTLIST %pre.qname;
      %Common.attrib;
      xml:space    ( preserve )             #FIXED 'preserve'
&gt;
&lt;!-- end of pre.attlist --&gt;]]&gt;

&lt;!-- ...................  Heading Elements  ................... --&gt;

&lt;!ENTITY <span class="entity">% Heading.content</span>  &quot;( #PCDATA | %Inline.mix; )*&quot; &gt;

&lt;!ENTITY <span class="entity">% h1.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h1.element;[
&lt;!ENTITY <span class="entity">% h1.qname</span>  &quot;h1&quot; &gt;
&lt;!ELEMENT <span class="element">%h1.qname;</span>  %Heading.content; &gt;
&lt;!-- end of h1.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h1.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h1.attlist;[
&lt;!ATTLIST %h1.qname;
      %Common.attrib;
&gt;
&lt;!-- end of h1.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h2.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h2.element;[
&lt;!ENTITY <span class="entity">% h2.qname</span>  &quot;h2&quot; &gt;
&lt;!ELEMENT <span class="element">%h2.qname;</span>  %Heading.content; &gt;
&lt;!-- end of h2.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h2.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h2.attlist;[
&lt;!ATTLIST %h2.qname;
      %Common.attrib;
&gt;
&lt;!-- end of h2.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h3.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h3.element;[
&lt;!ENTITY <span class="entity">% h3.qname</span>  &quot;h3&quot; &gt;
&lt;!ELEMENT <span class="element">%h3.qname;</span>  %Heading.content; &gt;
&lt;!-- end of h3.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h3.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h3.attlist;[
&lt;!ATTLIST %h3.qname;
      %Common.attrib;
&gt;
&lt;!-- end of h3.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h4.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h4.element;[
&lt;!ENTITY <span class="entity">% h4.qname</span>  &quot;h4&quot; &gt;
&lt;!ELEMENT <span class="element">%h4.qname;</span>  %Heading.content; &gt;
&lt;!-- end of h4.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h4.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h4.attlist;[
&lt;!ATTLIST %h4.qname;
      %Common.attrib;
&gt;
&lt;!-- end of h4.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h5.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h5.element;[
&lt;!ENTITY <span class="entity">% h5.qname</span>  &quot;h5&quot; &gt;
&lt;!ELEMENT <span class="element">%h5.qname;</span>  %Heading.content; &gt;
&lt;!-- end of h5.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h5.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h5.attlist;[
&lt;!ATTLIST %h5.qname;
      %Common.attrib;
&gt;
&lt;!-- end of h5.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h6.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h6.element;[
&lt;!ENTITY <span class="entity">% h6.qname</span>  &quot;h6&quot; &gt;
&lt;!ELEMENT <span class="element">%h6.qname;</span>  %Heading.content; &gt;
&lt;!-- end of h6.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% h6.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%h6.attlist;[
&lt;!ATTLIST %h6.qname;
      %Common.attrib;
&gt;
&lt;!-- end of h6.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-blkphras-1.mod --&gt;

</pre>

<h3><a name="a_module_Block_Presentational" id="a_module_Block_Presentational">F.4.2.</a> Block Presentational</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Block Presentation Module  ..................................... --&gt;
&lt;!-- file: xhtml-blkpres-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-blkpres-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Block Presentation 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-blkpres-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Block Presentational Elements

        hr

     This module declares the elements and their attributes used to
     support block-level presentational markup.
--&gt;

&lt;!ENTITY <span class="entity">% hr.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%hr.element;[
&lt;!ENTITY <span class="entity">% hr.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% hr.qname</span>  &quot;hr&quot; &gt;
&lt;!ELEMENT <span class="element">%hr.qname;</span>  %hr.content; &gt;
&lt;!-- end of hr.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% hr.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%hr.attlist;[
&lt;!ATTLIST %hr.qname;
      %Common.attrib;
&gt;
&lt;!-- end of hr.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-blkpres-1.mod --&gt;

</pre>

<h3><a name="a_module_Block_Structural" id="a_module_Block_Structural">F.4.3.</a> Block Structural</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Block Structural Module  ....................................... --&gt;
&lt;!-- file: xhtml-blkstruct-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-blkstruct-1.mod,v 3.1 2000/11/15 22:02:08 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Block Structural 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-blkstruct-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Block Structural

        div, p

     This module declares the elements and their attributes used to
     support block-level structural markup.
--&gt;

&lt;!ENTITY <span class="entity">% div.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%div.element;[
&lt;!ENTITY <span class="entity">% div.content</span>
     &quot;( #PCDATA | %Flow.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% div.qname</span>  &quot;div&quot; &gt;
&lt;!ELEMENT <span class="element">%div.qname;</span>  %div.content; &gt;
&lt;!-- end of div.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% div.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%div.attlist;[
&lt;!ATTLIST %div.qname;
      %Common.attrib;
&gt;
&lt;!-- end of div.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% p.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%p.element;[
&lt;!ENTITY <span class="entity">% p.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot; &gt;
&lt;!ENTITY <span class="entity">% p.qname</span>  &quot;p&quot; &gt;
&lt;!ELEMENT <span class="element">%p.qname;</span>  %p.content; &gt;
&lt;!-- end of p.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% p.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%p.attlist;[
&lt;!ATTLIST %p.qname;
      %Common.attrib;
&gt;
&lt;!-- end of p.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-blkstruct-1.mod --&gt;

</pre>

<h3><a name="a_module_Inline_Phrasal" id="a_module_Inline_Phrasal">F.4.4.</a> Inline Phrasal</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Inline Phrasal Module  ......................................... --&gt;
&lt;!-- file: xhtml-inlphras-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-inlphras-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Inline Phrasal 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-inlphras-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Inline Phrasal

        abbr, acronym, cite, code, dfn, em, kbd, q, samp, strong, var

     This module declares the elements and their attributes used to
     support inline-level phrasal markup.
--&gt;

&lt;!ENTITY <span class="entity">% abbr.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%abbr.element;[
&lt;!ENTITY <span class="entity">% abbr.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% abbr.qname</span>  &quot;abbr&quot; &gt;
&lt;!ELEMENT <span class="element">%abbr.qname;</span>  %abbr.content; &gt;
&lt;!-- end of abbr.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% abbr.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%abbr.attlist;[
&lt;!ATTLIST %abbr.qname;
      %Common.attrib;
&gt;
&lt;!-- end of abbr.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% acronym.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%acronym.element;[
&lt;!ENTITY <span class="entity">% acronym.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% acronym.qname</span>  &quot;acronym&quot; &gt;
&lt;!ELEMENT <span class="element">%acronym.qname;</span>  %acronym.content; &gt;
&lt;!-- end of acronym.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% acronym.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%acronym.attlist;[
&lt;!ATTLIST %acronym.qname;
      %Common.attrib;
&gt;
&lt;!-- end of acronym.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% cite.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%cite.element;[
&lt;!ENTITY <span class="entity">% cite.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% cite.qname</span>  &quot;cite&quot; &gt;
&lt;!ELEMENT <span class="element">%cite.qname;</span>  %cite.content; &gt;
&lt;!-- end of cite.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% cite.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%cite.attlist;[
&lt;!ATTLIST %cite.qname;
      %Common.attrib;
&gt;
&lt;!-- end of cite.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% code.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%code.element;[
&lt;!ENTITY <span class="entity">% code.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% code.qname</span>  &quot;code&quot; &gt;
&lt;!ELEMENT <span class="element">%code.qname;</span>  %code.content; &gt;
&lt;!-- end of code.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% code.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%code.attlist;[
&lt;!ATTLIST %code.qname;
      %Common.attrib;
&gt;
&lt;!-- end of code.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% dfn.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dfn.element;[
&lt;!ENTITY <span class="entity">% dfn.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% dfn.qname</span>  &quot;dfn&quot; &gt;
&lt;!ELEMENT <span class="element">%dfn.qname;</span>  %dfn.content; &gt;
&lt;!-- end of dfn.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% dfn.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%dfn.attlist;[
&lt;!ATTLIST %dfn.qname;
      %Common.attrib;
&gt;
&lt;!-- end of dfn.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% em.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%em.element;[
&lt;!ENTITY <span class="entity">% em.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% em.qname</span>  &quot;em&quot; &gt;
&lt;!ELEMENT <span class="element">%em.qname;</span>  %em.content; &gt;
&lt;!-- end of em.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% em.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%em.attlist;[
&lt;!ATTLIST %em.qname;
      %Common.attrib;
&gt;
&lt;!-- end of em.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% kbd.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%kbd.element;[
&lt;!ENTITY <span class="entity">% kbd.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% kbd.qname</span>  &quot;kbd&quot; &gt;
&lt;!ELEMENT <span class="element">%kbd.qname;</span>  %kbd.content; &gt;
&lt;!-- end of kbd.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% kbd.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%kbd.attlist;[
&lt;!ATTLIST %kbd.qname;
      %Common.attrib;
&gt;
&lt;!-- end of kbd.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% q.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%q.element;[
&lt;!ENTITY <span class="entity">% q.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% q.qname</span>  &quot;q&quot; &gt;
&lt;!ELEMENT <span class="element">%q.qname;</span>  %q.content; &gt;
&lt;!-- end of q.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% q.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%q.attlist;[
&lt;!ATTLIST %q.qname;
      %Common.attrib;
      cite         %URI.datatype;           #IMPLIED
&gt;
&lt;!-- end of q.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% samp.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%samp.element;[
&lt;!ENTITY <span class="entity">% samp.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% samp.qname</span>  &quot;samp&quot; &gt;
&lt;!ELEMENT <span class="element">%samp.qname;</span>  %samp.content; &gt;
&lt;!-- end of samp.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% samp.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%samp.attlist;[
&lt;!ATTLIST %samp.qname;
      %Common.attrib;
&gt;
&lt;!-- end of samp.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% strong.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%strong.element;[
&lt;!ENTITY <span class="entity">% strong.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% strong.qname</span>  &quot;strong&quot; &gt;
&lt;!ELEMENT <span class="element">%strong.qname;</span>  %strong.content; &gt;
&lt;!-- end of strong.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% strong.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%strong.attlist;[
&lt;!ATTLIST %strong.qname;
      %Common.attrib;
&gt;
&lt;!-- end of strong.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% var.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%var.element;[
&lt;!ENTITY <span class="entity">% var.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% var.qname</span>  &quot;var&quot; &gt;
&lt;!ELEMENT <span class="element">%var.qname;</span>  %var.content; &gt;
&lt;!-- end of var.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% var.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%var.attlist;[
&lt;!ATTLIST %var.qname;
      %Common.attrib;
&gt;
&lt;!-- end of var.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-inlphras-1.mod --&gt;

</pre>

<h3><a name="a_module_Inline_Presentational" id="a_module_Inline_Presentational">F.4.5.</a> Inline Presentational</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Inline Presentation Module  .................................... --&gt;
&lt;!-- file: xhtml-inlpres-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-inlpres-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Inline Presentation 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-inlpres-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Inline Presentational Elements

        b, big, i, small, sub, sup, tt

     This module declares the elements and their attributes used to
     support inline-level presentational markup.
--&gt;

&lt;!ENTITY <span class="entity">% b.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%b.element;[
&lt;!ENTITY <span class="entity">% b.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% b.qname</span>  &quot;b&quot; &gt;
&lt;!ELEMENT <span class="element">%b.qname;</span>  %b.content; &gt;
&lt;!-- end of b.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% b.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%b.attlist;[
&lt;!ATTLIST %b.qname;
      %Common.attrib;
&gt;
&lt;!-- end of b.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% big.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%big.element;[
&lt;!ENTITY <span class="entity">% big.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% big.qname</span>  &quot;big&quot; &gt;
&lt;!ELEMENT <span class="element">%big.qname;</span>  %big.content; &gt;
&lt;!-- end of big.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% big.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%big.attlist;[
&lt;!ATTLIST %big.qname;
      %Common.attrib;
&gt;
&lt;!-- end of big.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% i.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%i.element;[
&lt;!ENTITY <span class="entity">% i.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% i.qname</span>  &quot;i&quot; &gt;
&lt;!ELEMENT <span class="element">%i.qname;</span>  %i.content; &gt;
&lt;!-- end of i.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% i.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%i.attlist;[
&lt;!ATTLIST %i.qname;
      %Common.attrib;
&gt;
&lt;!-- end of i.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% small.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%small.element;[
&lt;!ENTITY <span class="entity">% small.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% small.qname</span>  &quot;small&quot; &gt;
&lt;!ELEMENT <span class="element">%small.qname;</span>  %small.content; &gt;
&lt;!-- end of small.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% small.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%small.attlist;[
&lt;!ATTLIST %small.qname;
      %Common.attrib;
&gt;
&lt;!-- end of small.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% sub.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%sub.element;[
&lt;!ENTITY <span class="entity">% sub.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% sub.qname</span>  &quot;sub&quot; &gt;
&lt;!ELEMENT <span class="element">%sub.qname;</span>  %sub.content; &gt;
&lt;!-- end of sub.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% sub.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%sub.attlist;[
&lt;!ATTLIST %sub.qname;
      %Common.attrib;
&gt;
&lt;!-- end of sub.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% sup.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%sup.element;[
&lt;!ENTITY <span class="entity">% sup.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% sup.qname</span>  &quot;sup&quot; &gt;
&lt;!ELEMENT <span class="element">%sup.qname;</span>  %sup.content; &gt;
&lt;!-- end of sup.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% sup.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%sup.attlist;[
&lt;!ATTLIST %sup.qname;
      %Common.attrib;
&gt;
&lt;!-- end of sup.attlist --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% tt.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tt.element;[
&lt;!ENTITY <span class="entity">% tt.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% tt.qname</span>  &quot;tt&quot; &gt;
&lt;!ELEMENT <span class="element">%tt.qname;</span>  %tt.content; &gt;
&lt;!-- end of tt.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% tt.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%tt.attlist;[
&lt;!ATTLIST %tt.qname;
      %Common.attrib;
&gt;
&lt;!-- end of tt.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-inlpres-1.mod --&gt;

</pre>

<h3><a name="a_module_Inline_Structural" id="a_module_Inline_Structural">F.4.6.</a> Inline Structural</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Inline Structural Module  ...................................... --&gt;
&lt;!-- file: xhtml-inlstruct-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-inlstruct-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Inline Structural 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-inlstruct-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Inline Structural

        br, span

     This module declares the elements and their attributes 
     used to support inline-level structural markup.
--&gt;

&lt;!-- br: forced line break ............................. --&gt;

&lt;!ENTITY <span class="entity">% br.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%br.element;[

&lt;!ENTITY <span class="entity">% br.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% br.qname</span>  &quot;br&quot; &gt;
&lt;!ELEMENT <span class="element">%br.qname;</span>  %br.content; &gt;

&lt;!-- end of br.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% br.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%br.attlist;[
&lt;!ATTLIST %br.qname;
      %Core.attrib;
&gt;
&lt;!-- end of br.attlist --&gt;]]&gt;

&lt;!-- span: generic inline container .................... --&gt;

&lt;!ENTITY <span class="entity">% span.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%span.element;[
&lt;!ENTITY <span class="entity">% span.content</span>
     &quot;( #PCDATA | %Inline.mix; )*&quot;
&gt;
&lt;!ENTITY <span class="entity">% span.qname</span>  &quot;span&quot; &gt;
&lt;!ELEMENT <span class="element">%span.qname;</span>  %span.content; &gt;
&lt;!-- end of span.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% span.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%span.attlist;[
&lt;!ATTLIST %span.qname;
      %Common.attrib;
&gt;
&lt;!-- end of span.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-inlstruct-1.mod --&gt;

</pre>

<h3><a name="a_module_Param" id="a_module_Param">F.4.7.</a> Param</h3>

<pre class="dtd">
&lt;!-- ...................................................................... --&gt;
&lt;!-- XHTML Param Element Module  ..................................... --&gt;
&lt;!-- file: xhtml-param-1.mod

     This is XHTML, a reformulation of HTML as a modular XML application.
     Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
     Revision: $x36;Id: xhtml-param-1.mod,v 3.0 2000/10/22 17:13:38 altheim Exp $x36; SMI

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

       PUBLIC &quot;-//W3C//ELEMENTS XHTML Param Element 1.0//EN&quot;
       SYSTEM &quot;http://www.w3.org/TR/xhtml-modularization/DTD/xhtml-param-1.mod&quot;

     Revisions:
     (none)
     ....................................................................... --&gt;

&lt;!-- Parameters for Java Applets and Embedded Objects

        param

     This module provides declarations for the param element, 
     used to provide named property values for the applet
     and object elements. 
--&gt;

&lt;!-- param: Named Property Value ....................... --&gt;

&lt;!ENTITY <span class="entity">% param.element</span>  &quot;INCLUDE&quot; &gt;
&lt;![%param.element;[
&lt;!ENTITY <span class="entity">% param.content</span>  &quot;EMPTY&quot; &gt;
&lt;!ENTITY <span class="entity">% param.qname</span>  &quot;param&quot; &gt;
&lt;!ELEMENT <span class="element">%param.qname;</span>  %param.content; &gt;
&lt;!-- end of param.element --&gt;]]&gt;

&lt;!ENTITY <span class="entity">% param.attlist</span>  &quot;INCLUDE&quot; &gt;
&lt;![%param.attlist;[
&lt;!ATTLIST %param.qname;
      %XHTML.xmlns.attrib; 
      %id.attrib;
      name         CDATA                    #REQUIRED
      value        CDATA                    #IMPLIED
      valuetype    ( data | ref | object )  'data'
      type         %ContentType.datatype;   #IMPLIED
&gt;
&lt;!-- end of param.attlist --&gt;]]&gt;

&lt;!-- end of xhtml-param-1.mod --&gt;

</pre>

<!--OddPage-->
<h1><a name="a_refs" id="a_refs">G.</a> References</h1>

<p>This appendix is <em>normative</em>.</p>

<h2><a name="a_normrefs" id="a_normrefs">G.1.</a> Normative References</h2>

<dl>
<dt><a name="ref_css2" class="ref" id="ref_css2">[CSS2]</a></dt>

<dd>&quot;Cascading Style Sheets, level 2 (CSS2) Specification&quot;, B. Bos, H. W. Lie, C. Lilley, I. Jacobs, 12 May 1998.<br /> Available at: <a href="http://www.w3.org/TR/1998/REC-CSS2-19980512">http://www.w3.org/TR/1998/REC-CSS2-19980512</a></dd>

<dt><a name="ref_dom" class="ref" id="ref_dom">[DOM]</a></dt>

<dd>&quot;Document Object Model (DOM) Level 1 Specification&quot;, Lauren Wood <i>et al.</i>, 1 October 1998.<br /> Available at: <a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">http://www.w3.org/TR/REC-DOM-Level-1-19981001</a></dd>

<dt><a name="ref_html40" id="ref_html40" class="normref">[HTML4]</a></dt>

<dd><cite>HTML 4.01 Specification: W3C Recommendation</cite>, Dave Raggett, Arnaud Le Hors, Ian Jacobs, 24 December 1999.<br /> See: <a href="http://www.w3.org/TR/1999/REC-html401-19991224">http://www.w3.org/TR/1999/REC-html401-19991224</a></dd>

<dt><a name="ref_ISO10646" id="ref_ISO10646" class="normref">[ISO10646]</a></dt>

<dd><cite>&quot;Information Technology -- Universal Multiple-Octet Coded Character Set (UCS) -- Part 1: Architecture and Basic Multilingual Plane&quot;, ISO/IEC 10646-1:1993</cite>. This reference refers to a set of codepoints that may evolve as new characters are assigned to them. This reference therefore includes future amendments as long as they do <strong>not</strong> change character assignments up to and including the first five amendments to ISO/IEC 10646-1:1993. Also, this reference assumes that the character sets defined by ISO 10646 and Unicode remain character-by-character equivalent. This reference also includes future publications of other parts of 10646 (i.e., other than Part 1) that define characters in planes 1-16.</dd>

<dt><a name="ref_mathml" id="ref_mathml" class="ref">[MathML]</a></dt>

<dd><cite>Mathematical Markup Language 1.01</cite>, Patrick Ion, et al. 7 July 1999.<br /> See: <a href="http://www.w3.org/1999/07/REC-MathML-19990707">http://www.w3.org/1999/07/REC-MathML-19990707</a></dd>

<dt><a id="ref_RFC1766" name="ref_RFC1766" class="normref">[RFC1766]</a></dt>

<dd><a href="http://www.ietf.org/rfc/rfc1766.txt">&quot;Tags for the Identification of Languages&quot;</a>, H. Alvestrand, October 2000. RFC1766 is expected to be updated by <a href= 
"http://www.ietf.org/internet-drafts/draft-alvestrand-lang-tag-v2-05.txt">http://www.ietf.org/internet-drafts/draft-alvestrand-lang-tag-v2-05.txt</a>, currently a work in progress.</dd>

<dt><a name="ref_rfc1808" id="ref_rfc1808" class="ref">[RFC1808]</a></dt>

<dd><cite>Relative Uniform Resource Locators</cite>, R. Fielding.<br /> See: <a href="http://www.ietf.org/rfc/rfc1808.txt">http://www.ietf.org/rfc/rfc1808.txt</a></dd>

<dt><a id="ref_RFC2045" name="ref_RFC2045" class="normref">[RFC2045]</a></dt>

<dd><a href="http://www.ietf.org/rfc/rfc2045.txt">&quot;Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies&quot;</a>, N. Freed and N. Borenstein, November 1996. Note that this RFC obsoletes RFC1521, RFC1522, and RFC1590.</dd>

<dt><a id="ref_RFC2119" name="ref_RFC2119" class="normref">[RFC2119]</a></dt>

<dd><a href="http://www.ietf.org/rfc/rfc2119.txt">&quot;Key words for use in RFCs to indicate requirement levels&quot;</a>, S. Bradner, March 1997.</dd>

<dt><a name="ref_sgml" id="ref_sgml" class="normref">[SGML]</a></dt>

<dd><cite>Information Processing -- Text and Office Systems -- Standard Generalized Markup Language (SGML)</cite>, ISO 8879:1986.<br /> Please consult <a href="http://www.iso.ch/cate/d16387.html">http://www.iso.ch/cate/d16387.html</a> for information about the standard, or <a href= 
"http://www.oasis-open.org/cover/general.html#overview">http://www.oasis-open.org/cover/general.html#overview</a> about SGML.</dd>

<dt><a name="ref_smil" id="ref_smil" class="ref">[SMIL]</a></dt>

<dd><cite>Synchronized Multimedia Integration Language (SMIL) 1.0 Specification</cite>, Philipp Hoschka, 15 June 1998.<br /> See: <a href="http://www.w3.org/TR/1998/REC-smil-19980615">http://www.w3.org/TR/1998/REC-smil-19980615</a></dd>

<dt><a id="ref_SRGB" name="ref_SRGB" class="normref">[SRGB]</a></dt>

<dd><a href="http://www.w3.org/Graphics/Color/sRGB">&quot;A Standard Default Color Space for the Internet&quot;</a>, version 1.10, M. Stokes, M. Anderson, S. Chandrasekar, and R. Motta, 5 November 1996. This document is <a href="http://www.w3.org/Graphics/Color/sRGB">http://www.w3.org/Graphics/Color/sRGB</a></dd>

<dt><a name="ref_uri" id="ref_uri" class="ref">[URI]</a></dt>

<dd><cite>Uniform Resource Identifiers (URI): Generic Syntax</cite>, T. Berners-Lee, R. Fielding, L. Masinter, August 1998.<br /> See: <a href="http://www.ietf.org/rfc/rfc2396.txt">http://www.ietf.org/rfc/rfc2396.txt</a>. This RFC updates RFC 1738 <a class="ref" href="#ref_url">[URL]</a> and <a class="ref" href="#ref_rfc1808">[RFC1808]</a>.</dd>

<dt><a name="ref_url" id="ref_url" class="ref">[URL]</a></dt>

<dd><cite>IETF RFC 1738, Uniform Resource Locators (URL)</cite>, T. Berners-Lee, L. Masinter, M. McCahill.<br /> See: <a href="http://www.ietf.org/rfc/rfc1738.txt">http://www.ietf.org/rfc/rfc1738.txt</a></dd>

<dt><a name="ref_xhtml1" id="ref_xhtml1" class="normref">[XHTML1]</a></dt>

<dd><cite>XHTML 1.0: The Extensible HyperText Markup Language</cite>, Steven Pemberton, et al., 26 January 2000.<br /> See: <a href="http://www.w3.org/TR/2000/REC-xhtml1-20000126"> http://www.w3.org/TR/2000/REC-xhtml1-20000126</a></dd>

<dt><a name="ref_xml" id="ref_xml" class="normref">[XML]</a></dt>

<dd><cite>Extensible Markup Language (XML) 1.0: W3C Recommendation</cite>, Tim Bray, Jean Paoli, C. M. Sperberg-McQueen, 10 February 1998.<br /> See: <a href="http://www.w3.org/TR/1998/REC-xml-19980210">http://www.w3.org/TR/1998/REC-xml-19980210</a></dd>

<dt><a name="ref_xmlns" class="ref" id="ref_xmlns">[XMLNAMES]</a></dt>

<dd>&quot;Namespaces in XML&quot;, T. Bray, D. Hollander, A. Layman, 14 January 1999.<br /> XML namespaces provide a simple method for qualifying names used in XML documents by associating them with namespaces identified by URI.<br /> Available at: <a href="http://www.w3.org/TR/1999/REC-xml-names-19990114">http://www.w3.org/TR/1999/REC-xml-names-19990114</a></dd>

<dt><a name="ref_xmlschema" id="ref_xmlschema" class="ref">[XMLSCHEMA]</a></dt>

<dd><cite>XML Schema Part 1: Structures</cite>, Henry S. Thompson, et al., 17 December 1999<br /> See: <a href="http://www.w3.org/TR/1999/WD-xmlschema-1-19991217">http://www.w3.org/TR/1999/WD-xhtmlschema-1-19991217</a></dd>
</dl>

<!--OddPage-->
<h1><a name="s_intro_design" id="s_intro_design">H.</a> Design Goals</h1>

<p>This appendix is <em>informative</em>.</p>

<p>In this appendix, design goals are identified with a label &quot;Gn&quot;, and Requirements are identified with a label &quot;Rn.n&quot;. There are four major design goals for the modularization framework for XHTML:</p>

<ul>
<li>[G1] To group semantically related parts of XHTML together.</li>

<li>[G2] Using DTD technology, to support the creation of related languages (subsets, supersets) for specific purposes (small devices, special-purpose devices), while guaranteeing commonality of the overlapping parts.</li>

<li>[G3] To facilitate future development by allowing parts of the language to be replaced by improved modules (for instance, forms) without disturbing the rest of the language.</li>

<li>[G4] To encourage and facilitate the reuse of modules in other languages.</li>
</ul>

<h2><a name="s_intro_requirements" id="s_intro_requirements">H.1.</a> Requirements</h2>

<p>The design goals listed in the previous section lead to a large number of requirements for the modularization framework. These requirements, summarized in this section, can be further classified according to the major features of the framework to be described.</p>

<h3><a name="s_req_granularity" id="s_req_granularity">H.1.1.</a> Granularity</h3>

<p>Collectively the requirements in this section express the desire that the modules defined within the framework hit the right level of granularity:</p>

<ul>
<li>[R1.1] Abstract modules should promote and maintain content portability.</li>

<li>[R1.2] Abstract modules should promote platform profile standardization.</li>

<li>[R1.3] Abstract modules should be large enough to promote interoperability.</li>

<li>[R1.4] Abstract modules should be small enough to avoid the need for subsets.</li>

<li>[R1.5] Abstract modules should collect elements with similar or related semantics.</li>

<li>[R1.6] Abstract modules should separate elements with dissimilar or unrelated semantics.</li>

<li>[R1.7] Modules should be small enough to allow single element document type modules.</li>
</ul>

<h3><a name="s_req_composibility" id="s_req_composibility">H.1.2.</a> Composibility</h3>

<p>The composibility requirements listed here are intended to ensure that the modularization framework be able to express the right set of target modules required by the communities that will be served by the framework:</p>

<ul>
<li>[R2.1] The module framework should allow construction of abstract modules for XHTML 1.0.</li>

<li>[R2.2] The module framework should allow construction of abstract modules that closely approximate HTML 4.0.</li>

<li>[R2.3] The module framework should allow construction of abstract modules for other W3C Recommendations.</li>

<li>[R2.4] The module framework should allow construction of abstract modules for other XML document types.</li>

<li>[R2.5] The module framework should allow construction of abstract modules for a wide range of platform profiles.</li>
</ul>

<h3><a name="s_req_easeofuse" id="s_req_easeofuse">H.1.3.</a> Ease of Use</h3>

<p>The modularization framework will only receive widespread adoption if it describes mechanisms that make it easy for our target audience to use the framework:</p>

<ul>
<li>[R3.1] The module framework should make it easy for document type designers to subset and extend XHTML abstract modules.</li>

<li>[R3.2] The module framework should make it easy for document type designers to create abstract modules for other XML document types.</li>

<li>[R3.3] The module framework should make it easy for document authors to validate elements from different abstract modules.</li>
</ul>

<h3><a name="s_req_compatibility" id="s_req_compatibility">H.1.4.</a> Compatibility</h3>

<p>The intent of this document is that the modularization framework described here should work well with the XML and other standards being developed by the W3C Working Groups:</p>

<ul>
<li>[R4.1] The module framework should strictly conform to the XML 1.0 Recommendation.</li>

<li>[R4.2] The module framework should be compatible with the XML Linking Language (XLink)Language (XLink) specification.</li>

<li>[R4.3] The module framework should be compatible with the Associating Style Sheets with XML documents specification.</li>

<li>[R4.4] The module framework should be able to adopt new W3C Recommendations where appropriate.</li>

<li>[R4.5] The module framework should not depend on W3C work in progress.</li>

<li>[R4.6] The module framework should not depend on work done outside W3C.</li>
</ul>

<h3><a name="s_req_conformance" id="s_req_conformance">H.1.5.</a> Conformance</h3>

<p>The effectiveness of the framework will also be measured by how easy it is to test the behavior of modules developed according to the framework, and to test the documents that employ those modules for validation:</p>

<ul>
<li>[R5.1] It should be possible to validate documents constructed using elements and attributes from abstract modules.</li>

<li>[R5.2] It should be possible to explicitly describe the behavior of elements and attributes from abstract modules.</li>

<li>[R5.3] It should be possible to verify the behavior of elements and attributes from abstract modules.</li>

<li>[R5.4] It should be possible to verify a hybrid document type as an XHTML document type.</li>

<li>[R5.5] Modules defined in accordance with the methods in this document shall not duplicate the names of elements or parameter entities defined in XHTML modules.</li>
</ul>



</body>
</html>

